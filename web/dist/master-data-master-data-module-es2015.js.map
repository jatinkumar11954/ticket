{"version":3,"sources":["./src/app/content/pages/master-data/user-list/user-list.component.ts","./src/app/content/pages/master-data/user-list/user-list.component.html","./src/app/content/pages/master-data/dept/dept.component.ts","./src/app/content/pages/master-data/dept/dept.component.html","./src/app/content/pages/master-data/tags/tags.component.ts","./src/app/content/pages/master-data/tags/tags.component.html","./src/app/content/pages/master-data/status/status.component.ts","./src/app/content/pages/master-data/status/status.component.html","./src/app/content/pages/master-data/sign-out/sign-out.component.ts","./src/app/content/pages/master-data/sign-out/sign-out.component.html","./src/app/content/pages/master-data/inactive-userlist/inactive-userlist.component.ts","./src/app/content/pages/master-data/inactive-userlist/inactive-userlist.component.html","./src/app/content/pages/master-data/store/store.component.ts","./src/app/content/pages/master-data/store/store.component.html","./src/app/content/pages/master-data/master-data.module.ts","./src/app/content/pages/master-data/user/user.component.ts","./src/app/content/pages/master-data/user/user.component.html","./src/app/content/pages/master-data/assign/assign.component.ts","./src/app/content/pages/master-data/assign/assign.component.html","./src/app/content/pages/master-data/edit-user/edit-user.component.ts","./src/app/content/pages/master-data/edit-user/edit-user.component.html","./node_modules/ngx-csvto-json/__ivy_ngcc__/fesm2015/ngx-csvto-json.js","./src/app/content/pages/master-data/issues/issues.component.ts","./src/app/content/pages/master-data/issues/issues.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEnB;AAGL;AACK;AACkC;;;;;;;;;;;ICKzD,0EACE;IAAA,yEACE;IAAA,0EACE;IAAA,0EACE;IAAA,uDACF;IAAA,4DAAM;IACR,4DAAM;IACN,0EACE;IAAA,0EACE;IAAA,0EACE;IAAA,4EACA;IADuB,+VAA6B;IAApD,4DACA;IAAA,uEAAiC;IACnC,4DAAM;IACR,4DAAM;IACR,4DAAM;IAER,4DAAM;IAER,2EACG;IAAA,2EACE;IAAA,2EAAc;IAAA,wDAA0B;IAAA,4DAAM;IAC/C,4DAAM;IACN,2EACC;IACA,2EACA;IADoG,4VAA4B;IAAhI,4DACA;IAAA,2EACA;IADmG,oaAA4B;IAA/H,4DACA;IAAA,2EACH;IADwG,8VAA8B;IAAnI,4DACH;IAAA,4DAAM;IAER,4DAAM;IACR,4DAAM;;;;;IA1BI,0DACF;IADE,wFACF;IAKoF,0DAAgB;IAAhB,8FAAgB;IAA3C,qFAAyB;IACvE,0DAAiB;IAAjB,+FAAiB;IASf,0DAA0B;IAA1B,iGAA0B;;;;IAqB7C,0EACE;IAAA,yEAA2D;IAAA,uDAAsC;IAAA,4DAAK;IACtG,6EACE;IADqD,yLAAW,aAAa,KAAE;IAC/E,2EAAyB;IAAA,iEAAO;IAAA,4DAAO;IACzC,4DAAS;IACX,4DAAM;IACN,0EACK;IAAA,uEACG;IAAA,0EACE;IAAA,4EAAmD;IAAA,wEAAY;IAAA,4DAAQ;IACvE,iFAEF;IADE,4WAAqC;IADrC,4DAEF;IAAA,4DAAM;IACR,4DAAO;IACb,4DAAM;IACN,2EACE;IAAA,8EAA4E;IAAzB,kWAAwB;IAAC,gEAAI;IAAA,4DAAS;IAC3F,4DAAM;;;IAhBuD,0DAAsC;IAAtC,mHAAsC;IAUzF,0DAAqC;IAArC,mGAAqC;;;ADrDvD,MAAM,kBAAkB;IAAxB;QAEE,aAAQ,GAAW,EAAE,CAAC;IAIxB,CAAC;CAAA;AAQM,MAAM,iBAAiB;IAU5B,YACU,MAAc,EACtB,MAAsB,EACb,YAAsB,EACvB,IAAgB,EAChB,WAA+B;QAJ/B,WAAM,GAAN,MAAM,CAAQ;QAEb,iBAAY,GAAZ,YAAY,CAAU;QACvB,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAoB;QAdzC,cAAS,GAAwB,EAAE,CAAC;QACpC,8EAA8E;QAC9E,sDAAsD;QACtD,cAAS,GAAiB,IAAI,4CAAO,EAAO,CAAC;QAI7C,WAAM,GAAY,KAAK,CAAE;QAkRzB,MAAC,GAAW,CAAC,CAAC;IA1QX,CAAC;IAGJ,QAAQ;QAEN,IAAI,CAAC,SAAS,GAAG;YACf,UAAU,EAAE,cAAc;YAC1B,UAAU,EAAE,EAAE;SACf,CAAC;QAIF,8DAA8D;QAC9D,IAAI;QACJ,uBAAuB;QACvB,IAAI;QACJ,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAEF,SAAS;QAER,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;YACf,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,GAAC,IAAI,GAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;YAC1D,IAAG,MAAM,CAAC,MAAM,CAAC,KAAK,IAAE,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAC,GAAG,EACvD;gBACE,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;gBACjB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;aAC1B;iBAEF;gBACC,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;gBACjB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;aAC1B;QACJ,CAAC,CAAC,CAAC;IACF,CAAC;IAGA,WAAW;QACT,4CAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,+BAA+B,EAAE;YACpE,OAAO,EAAE;gBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SACF,CAAC;aACC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,EACvB;gBACA,IAAI,CAAC,YAAY,GAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;gBACrC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC;aAE7B;iBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;aAEC;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACH;QACF,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACN,CAAC;IAED,uBAAuB;IACvB,UAAU,CAAC,KAAK;QAEf,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IAED,YAAY,CAAC,IAAI;QACf,4CAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,0BAA0B,EAAC,EAAC,GAAG,EAAC,IAAI,CAAC,GAAG,EAAC,QAAQ,EAAC,CAAC,IAAI,CAAC,QAAQ,EAAC,EAAC;YACtG,OAAO,EAAE;gBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SACF,CAAC;aACD,IAAI,CAAC,QAAQ,CAAC,EAAE;YACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;YACrB,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;gBACxB,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;gBACF,gBAAgB;gBAChB,2BAA2B;gBAC3B,IAAI,CAAC,WAAW,EAAE,CAAC;aAClB;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACA;QACJ,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACJ,CAAC;IAED,iBAAiB;IACjB,IAAI;IACJ,4EAA4E;IAC5E,iBAAiB;IACjB,8CAA8C;IAC9C,SAAS;IACT,OAAO;IACP,gCAAgC;IAChC,4BAA4B;IAC5B,kCAAkC;IAClC,oBAAoB;IACpB,8BAA8B;IAC9B,2BAA2B;IAC3B,2CAA2C;IAC3C,oCAAoC;IACpC,sBAAsB;IACtB,sBAAsB;IACtB,+BAA+B;IAC/B,QAAQ;IACR,YAAY;IACZ,oBAAoB;IACpB,8BAA8B;IAC9B,yBAAyB;IACzB,2CAA2C;IAC3C,oCAAoC;IACpC,sBAAsB;IACtB,SAAS;IACT,SAAS;IACT,OAAO;IACP,8BAA8B;IAC9B,yBAAyB;IACzB,OAAO;IACP,IAAI;IAEJ,wBAAwB;IACxB,IAAI,CAAC,OAAO,EAAC,MAAM;QACjB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,EAAE,GAAC,MAAM,CAAC,GAAG,CAAC;QAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAC,cAAc,EAAE,mBAAmB,EAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAC5F,IAAI,CAAC,WAAW,GAAG,gBAAgB,MAAM,EAAE,CAAC;YAC5C,OAAO,CAAC,GAAG,CAAC,SAAS,EAAC,MAAM,CAAC,CAAC;YAC9B,4CAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,6BAA6B,EAAC,IAAI,CAAC,WAAW,EAAC;gBAClF,OAAO,EAAE;oBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;iBACtC;aAEF,CAAC;iBACC,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACrB,IAAI,QAAQ,CAAC,IAAI,CAAE,MAAM,EAAE;oBACzB,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;oBACF,gBAAgB;oBAChB,2BAA2B;iBAC1B;qBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;iBAEC;qBACG;oBACF,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;iBACA;YACJ,CAAC,CAAC;iBACD,KAAK,CAAC,UAAU,KAAK;gBACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,CAAC,CAAC;QACN,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,aAAa,CAAE,CAAC;YAE5B,IAAI,CAAC,WAAW,GAAG,aAAa,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC;QAClE,CAAC,CAAC,CAAC;IACL,CAAC;IACO,gBAAgB,CAAC,MAAW;QAClC,IAAI,MAAM,KAAK,8EAAmB,CAAC,GAAG,EAAE;YACtC,OAAO,iBAAiB,CAAC;SAC1B;aAAM,IAAI,MAAM,KAAK,8EAAmB,CAAC,cAAc,EAAE;YACxD,OAAO,2BAA2B,CAAC;SACpC;aAAM;YACL,OAAO,SAAS,MAAM,EAAE,CAAC;SAC1B;IACH,CAAC;IAED,UAAU,CAAC,EAAE;QAEX,IAAG,OAAO,CAAC,oCAAoC,CAAC,EAChD;YACE,4CAAK,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,yBAAyB,GAAC,EAAE,EAAC;gBACnE,OAAO,EAAE;oBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;iBACtC;aACF,CAAC;iBACD,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACrB,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;oBACxB,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;oBACF,gBAAgB;oBAChB,2BAA2B;oBAC3B,IAAI,CAAC,WAAW,EAAE,CAAC;iBAClB;qBACG;oBACF,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;iBACA;YACJ,CAAC,CAAC;iBACD,KAAK,CAAC,UAAU,KAAK;gBACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,CAAC,CAAC;SACH;IAEH,CAAC;IAEC,mBAAmB;IACnB,YAAY,CAAC,KAAK;QAChB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACd,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;QAE7C,kBAAkB;QAClB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAS,CAAC;YACtC,OAAO,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAC/C,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG;QAEnD,CAAC,CAAC,CAAC;QAEH,kBAAkB;QAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,gEAAgE;IAElE,CAAC;IAKP,UAAU,CAAC,KAAK,IAAE,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,GAAC;IAE7C,QAAQ,CAAC,EAAE;QAET,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,EAAC,EAAC,WAAW,EAAE,EAAC,EAAE,EAAE,EAAE,EAAC,EAAC,CAAC;IACrE,CAAC;IAED,WAAW;QACT,yCAAyC;QACzC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;IAC/B,CAAC;;kFArSU,iBAAiB;iGAAjB,iBAAiB;QCzB7B,yEACI;QAAA,yEACG;QAAA,wEAAoB;QAAA,uEAAY;QAAA,4DAAK;QACxC,4DAAM;QACV,4DAAM;QACN,yEACC;QAAA,yEACC;QAAA,2EACD;QADuF,8IAAS,wBAAoB,IAAC;QAApH,4DACD;QAAA,4DAAM;QACR,4DAAM;QACD,yEACE;QAAA,yEACC;QAAA,8GACE;;QA8BH,4DAAM;QAER,4DAAM;QACJ,0EACa;QAAA,0FAAqE;QAAhD,yLAAyB;QAAC,4DAAsB;QAClF,4DAAM;QAIN,6MACC;;QAzCoB,0DAAkG;QAAlG,qOAAkG;;6FDajH,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AExBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAE8B;AAItD;AAEK;AACA;;;;;;;;;;ICGV,yEAA+C;IAAA,uDAA0B;IAAA,4DAAS;;;IAAnC,0DAA0B;IAA1B,wHAA0B;;;IAWtE,sEAA2C;IAAA,yFAA6B;IAAA,4DAAM;;;IADlF,0EACI;IAAA,iHAA2C;IAC/C,4DAAM;;;;IADG,0DAAoC;IAApC,qFAAoC;;;IAY1C,sEAAwC;IAAA,qFAAyB;IAAA,4DAAM;;;IAD3E,0EACI;IAAA,iHAAwC;IAC5C,4DAAM;;;;IADG,0DAAiC;IAAjC,qFAAiC;;;;IAyEjD,qEACI;IAAA,qEAAI;IAAA,uDAAO;IAAA,4DAAK;IAChB,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAC5B,qEAAI;IAAA,uDAA2C;;IAAA,4DAAK;IACpD,qEACI;IAAA,0EACA;IAD0E,saAA4B;IAAtG,4DACA;IAAA,2EACJ;IADgF,+VAA8B;IAA1G,4DACJ;IAAA,4DAAK;IACT,4DAAK;;;;IAPG,0DAAO;IAAP,0EAAO;IACP,0DAAmB;IAAnB,6GAAmB;IACnB,0DAA2C;IAA3C,+LAA2C;;;IA6B1C,yEAA+C;IAAA,uDAA0B;IAAA,4DAAS;;;IAAnC,0DAA0B;IAA1B,wHAA0B;;;IAUtE,sEAA2C;IAAA,yFAA6B;IAAA,4DAAM;;;IADlF,0EACI;IAAA,gIAA2C;IAC/C,4DAAM;;;;IADG,0DAAoC;IAApC,sFAAoC;;;;IAzB7D,0EACE;IAAA,yEAA+C;IAAA,qEAAU;IAAA,4DAAK;IAC9D,6EACE;IADqD,qLAAW,aAAa,KAAE;IAC/E,2EAAyB;IAAA,iEAAO;IAAA,4DAAO;IACzC,4DAAS;IACX,4DAAM;IACN,0EACK;IAAA,uEACO;IAAA,yEACA;IAAA,4EAAsG;IAAA,2EAAe;IAAA,4DAAQ;IAE7H,2EACG;IAAA,iFAEE;IADF,0WAAsC;IACpC,8EAAiB;IAAA,oEAAQ;IAAA,4DAAS;IAClC,iIAA+C;IAQjD,4DAAS;IACR,2HACI;IAER,4DAAM;IACZ,4DAAM;IACJ,2EACE;IAAA,6EAAmD;IAAA,4EAAgB;IAAA,4DAAQ;IAC3E,6EAEF;IADE,sWAAmC;IADnC,4DAEF;IAAA,4DAAM;IACN,0EACE;IAAA,6EAAmF;IAAA,uEAAW;IAAA,4DAAQ;IAEtG,2EACI;IAAA,iFAEJ;IADQ,yWAAsC;IAD1C,4DAEJ;IAAA,4DAAM;IACZ,4DAAM;IACF,2EACE;IAAA,6EAAmF;IAAA,iEAAK;IAAA,4DAAQ;IAEhG,2EACI;IAAA,iFAEJ;IADQ,oWAAiC;IADrC,4DAEJ;IAAA,4DAAM;IACZ,4DAAM;IACN,0EACE;IAAA,6EAAmF;IAAA,4EAAgB;IAAA,4DAAQ;IAE3G,2EACI;IAAA,iFAEJ;IADQ,4WAAyC;IAD7C,4DAEJ;IAAA,4DAAM;IACZ,4DAAM;IACN,0EACE;IAAA,6EAAmF;IAAA,gEAAI;IAAA,4DAAQ;IAE/F,2EACI;IAAA,iFAEJ;IADQ,mWAAgC;IADpC,4DAEJ;IAAA,4DAAM;IACR,4DAAM;IACA,4DAAO;IACb,4DAAM;IACN,2EACE;IAAA,8EAA4E;IAAzB,8VAAwB;IAAC,gEAAI;IAAA,4DAAS;IAC3F,4DAAM;;;;IAzDS,2DAAsC;IAAtC,qGAAsC;IAE5B,0DAAsC;IAAtC,0FAAsC;IAS1C,0DAA4E;IAA5E,8GAA4E;IAQvF,0DAAmC;IAAnC,kGAAmC;IAO3B,0DAAsC;IAAtC,qGAAsC;IAQtC,0DAAiC;IAAjC,gGAAiC;IAQrC,0DAAyC;IAAzC,wGAAyC;IAQ7C,0DAAgC;IAAhC,+FAAgC;;;;IAa5C,0EACE;IAAA,yEAA+C;IAAA,qEAAU;IAAA,4DAAK;IAC9D,6EACE;IADqD,qLAAW,aAAa,KAAE;IAC/E,2EAAyB;IAAA,iEAAO;IAAA,4DAAO;IACzC,4DAAS;IACX,4DAAM;IACN,0EACK;IAAA,uEACG;IAAA,0EACE;IAAA,4EAAmD;IAAA,2EAAe;IAAA,4DAAQ;IAC1E,6EAEA;IADA,0WAAuC;IADvC,4DAEA;IAGF,4DAAM;IAER,4DAAO;IACb,4DAAM;IACN,2EACE;IAAA,8EAA4E;IAAzB,8VAAwB;IAAC,+DAAG;IAAA,4DAAS;IAC1F,4DAAM;;;IAVI,2DAAuC;IAAvC,sGAAuC;;ADpM5C,MAAM,aAAa;IAexB,YAAoB,MAAc,EAAU,WAA+B,EAAC,MAAsB,EAAU,YAAsB;QAA9G,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAoB;QAAiC,iBAAY,GAAZ,YAAY,CAAU;QAblI,cAAS,GAAwB,EAAE,CAAC;QACpC,cAAS,GAAiB,IAAI,4CAAO,EAAO,CAAC;QAE7C,mBAAc,GAAK,EAAE,CAAC;QACtB,gBAAW,GAAS,IAAI,CAAC;QACzB,SAAI,GAAK,EAAE,CAAC;QACZ,gBAAW,GAAG,EAAE,CAAC;QAGjB,iBAAY,GAAQ,EAAE,CAAC;QACvB,QAAG,GAAW,KAAK,CAAC;QACpB,gBAAW,GAAO,EAAE,CAAC;QACrB,iBAAY,GAAO,EAAE,CAAC;QAEpB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,EAAE,CAAC;IAGjB,CAAC;IACD,UAAU;QAER,4CAAK,CAAC,IAAI,CACR,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,4BAA4B,EAAE,IAAI,CAAC,IAAI,EAClE;YACE,OAAO,EAAE;gBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SAEF,CAAC;aACD,IAAI,CAAC,QAAQ,CAAC,EAAE;YACf,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;gBACxB,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBACX,QAAQ,CAAC,MAAM,EAAE,CAAC;gBAAC,CAAC,CAAC,CAAC;aACvB;iBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;aAEC;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACA;QACJ,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACN,CAAC;IAEF,sBAAsB;IACtB,WAAW;QACV,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,4CAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,6BAA6B,EAAC;YACjE,OAAO,EAAE;gBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SAEF,CAAC;aACC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAEf,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;gBACxB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC1B,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;aACzC;iBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;aAEC;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACA;QACJ,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACN,CAAC;IAGC,OAAO;QACL,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,4CAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,4BAA4B,EAAC;YAChE,OAAO,EAAE;gBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SAEF,CAAC;aACC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAEf,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;gBACxB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC1B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;gBACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC5B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC3B,IAAG,IAAI,CAAC,WAAW,EACnB;oBACE,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;oBACtB,IAAI,CAAC,WAAW,GAAC,KAAK,CAAC;iBACxB;aACF;iBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;aAEC;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACA;QACJ,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACN,CAAC;IAED,IAAI,CAAC,OAAO,EAAC,MAAM;QACjB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAC,cAAc,EAAE,mBAAmB,EAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAC5F,IAAI,CAAC,WAAW,GAAG,gBAAgB,MAAM,EAAE,CAAC;YAC5C,OAAO,CAAC,GAAG,CAAC,SAAS,EAAC,MAAM,CAAC,CAAC;YAC9B,4CAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,gCAAgC,GAAC,MAAM,CAAC,GAAG,EAAC,MAAM,EAAC;gBACtF,OAAO,EAAE;oBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;iBACtC;aAEF,CAAC;iBACC,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACrB,IAAI,QAAQ,CAAC,IAAI,CAAE,MAAM,EAAE;oBACzB,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;oBACF,IAAI,CAAC,OAAO,EAAE,CAAC;iBACd;qBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;iBAEC;qBACG;oBACF,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;iBACA;YACJ,CAAC,CAAC;iBACD,KAAK,CAAC,UAAU,KAAK;gBACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,CAAC,CAAC;QACN,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,aAAa,CAAE,CAAC;YAE5B,IAAI,CAAC,WAAW,GAAG,aAAa,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC;QAClE,CAAC,CAAC,CAAC;IACL,CAAC;IACO,gBAAgB,CAAC,MAAW;QAClC,IAAI,MAAM,KAAK,8EAAmB,CAAC,GAAG,EAAE;YACtC,OAAO,iBAAiB,CAAC;SAC1B;aAAM,IAAI,MAAM,KAAK,8EAAmB,CAAC,cAAc,EAAE;YACxD,OAAO,2BAA2B,CAAC;SACpC;aAAM;YACL,OAAO,SAAS,MAAM,EAAE,CAAC;SAC1B;IACH,CAAC;IAED,kBAAkB;IAElB,QAAQ,CAAC,OAAO;QACd,uBAAuB;QACvB,6BAA6B;QAC7B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAC,cAAc,EAAE,mBAAmB,EAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAC5F,IAAI,CAAC,WAAW,GAAG,gBAAgB,MAAM,EAAE,CAAC;YAC5C,OAAO,CAAC,GAAG,CAAC,SAAS,EAAC,MAAM,CAAC,CAAC;YAC9B,4CAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,6BAA6B,EAAC,IAAI,CAAC,YAAY,EAAC;gBACpF,OAAO,EAAE;oBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;iBACtC;aAEF,CAAC;iBACC,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACrB,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;oBACxB,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;oBACF,IAAI,CAAC,WAAW,EAAE,CAAC;iBAClB;qBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;iBAEC;qBACG;oBACF,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;iBACA;YACJ,CAAC,CAAC;iBACD,KAAK,CAAC,UAAU,KAAK;gBACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,CAAC,CAAC;QACN,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,aAAa,CAAE,CAAC;YAE5B,IAAI,CAAC,WAAW,GAAG,aAAa,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC;QAClE,CAAC,CAAC,CAAC;IACL,CAAC;IAID,UAAU,CAAC,EAAE;QAEX,IAAG,OAAO,CAAC,oCAAoC,CAAC,EAChD;YACA,4CAAK,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,gCAAgC,GAAC,EAAE,EAAC;gBACxE,OAAO,EAAE;oBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;iBACtC;aACF,CAAC;iBACD,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACrB,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;oBACxB,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;oBACF,gBAAgB;oBAChB,2BAA2B;oBAC3B,IAAI,CAAC,OAAO,EAAE,CAAC;iBACd;qBACG;oBACF,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;iBACA;YACJ,CAAC,CAAC;iBACD,KAAK,CAAC,UAAU,KAAK;gBACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,CAAC,CAAC;SACH;IAEH,CAAC;IAED,OAAO,CAAC,QAAQ;QACd,yBAAyB;QACzB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACvD,CAAC;IACD,OAAO,CAAC,GAAG;QACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;QACzB,2BAA2B;IAC5B,CAAC;IAED,IAAI;QACH,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,4CAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,uBAAuB,EAAE,QAAQ,EAAC;YACxE,OAAO,EAAE;gBACL,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SACJ,CAAC;aACA,IAAI,CAAC,QAAQ,CAAC,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACpB,IAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAC;gBAC3B,+CAA+C;gBAC5C,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACF;iBAAK;gBACJ,4CAA4C;gBACzC,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACJ;QAGH,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,KAAK;YACvB,eAAe;YACf,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACpB,CAAC,CAAC;aACD,OAAO,CAAC;YACR,kBAAkB;QACnB,CAAC,CAAC,CAAC;IACN,CAAC;IAMC,QAAQ;QAEN,IAAI,CAAC,SAAS,GAAG;YACf,UAAU,EAAE,cAAc;YAC1B,UAAU,EAAE,EAAE;SACf,CAAC;IACJ,CAAC;;0EA1VU,aAAa;6FAAb,aAAa;;QChB1B,yEACE;QAAA,4EAAuG;QAA/B,oRAAS,kBAAoB,IAAC;QAAC,uEAAY;QAAA,4DAAS;QAC1H,yEACI;QAAA,yEACI;QAAA,6EACE;QADkC,yIAAY,gBAAY,IAAC;QAC3D,yEACE;QAAA,2EAAsG;QAAA,0EAAe;QAAA,4DAAQ;QAE7H,0EACG;QAAA,iFAEE;QADF,8LAA+B;QAC7B,8EAAiB;QAAA,oEAAQ;QAAA,4DAAS;QAClC,kHAA+C;QASjD,4DAAS;QACR,4GACI;QAER,4DAAM;QACZ,4DAAM;QACL,0EACI;QAAA,4EAAsG;QAAA,4EAAgB;QAAA,4DAAQ;QAE9H,0EACI;QAAA,iFAGA;QAFI,0LAA4B;QADhC,4DAGA;QAAA,4GACI;QAER,4DAAM;QACZ,4DAAM;QACN,0EACC;QAAA,6EAAmF;QAAA,uEAAW;QAAA,4DAAQ;QAEtG,2EACI;QAAA,iFAEJ;QADQ,6LAA+B;QADnC,4DAEJ;QAAA,4DAAM;QACZ,4DAAM;QACD,0EACC;QAAA,6EAAmF;QAAA,iEAAK;QAAA,4DAAQ;QAEhG,2EACI;QAAA,iFAEJ;QADQ,wLAA0B;QAD9B,4DAEJ;QAAA,4DAAM;QACZ,4DAAM;QACN,0EACE;QAAA,6EAAmF;QAAA,4EAAgB;QAAA,4DAAQ;QAE3G,2EACI;QAAA,iFAEJ;QADQ,gMAAkC;QADtC,4DAEJ;QAAA,4DAAM;QACZ,4DAAM;QACN,0EACE;QAAA,6EAAmF;QAAA,gEAAI;QAAA,4DAAQ;QAE/F,2EACI;QAAA,iFAEJ;QADQ,uLAAyB;QAD7B,4DAEJ;QAAA,4DAAM;QACR,4DAAM;QACE,2EACK;QAAA,2EACI;QAAA,8EAAuF;QAAA,+DAAG;QAAA,4DAAS;QACvG,4DAAM;QACX,4DAAM;QACP,4DAAO;QACP,2EACC;QAAA,2EACE;QAAA,qFAAwF;QAAzE,2JAAa,mBAAe,IAAC,6FAAW,mBAAe,IAA1B;QAA4B,4DAAgB;QAC1F,4DAAM;QACN,2EACE;QAAA,8EAA+F;QAApC,sIAAS,UAAM,IAAC;QAAoB,kEAAM;QAAA,4DAAS;QAChH,4DAAM;QACR,4DAAM;QACR,4DAAM;QACP,4DAAM;QAGT,2EACI;QAAA,6EACI;QAAA,6EACI;QAAA,sEACI;QAAA,sEACI;QAAA,kEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,6EACP;QAAA,4DAAK;QACL,sEACO;QAAA,yEACN;QAAA,4DAAK;QACL,sEACK;QAAA,qEACL;QAAA,4DAAK;QACP,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,2GACI;QAQR,4DAAQ;QACZ,4DAAQ;QACX,4DAAM;QAKN,yMACG;QA2EH,yMACC;QAzMF,4DACE;;;;;QASiB,2DAA+B;QAA/B,0FAA+B;QAErB,0DAAsC;QAAtC,sFAAsC;QAU1C,0DAA4E;QAA5E,2GAA4E;QAU9E,0DAA4B;QAA5B,uFAA4B;QAE3B,0DAAmE;QAAnE,2GAAmE;QAUzE,0DAA+B;QAA/B,0FAA+B;QAQ/B,0DAA0B;QAA1B,qFAA0B;QAQ9B,0DAAkC;QAAlC,6FAAkC;QAQtC,0DAAyB;QAAzB,oFAAyB;QAKuC,0DAA6B;QAA7B,iFAA6B;QAShB,0DAAiB;QAAjB,8EAAiB;QAQjF,0DAAuB;QAAvB,oFAAuB;QAkB9B,2DAA6C;QAA7C,kFAA6C;;6FD5FhD,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAE8B;AAGtD;AACK;AACA;;;;;;;;;ICKX,sEAAuC;IAAA,kFAAsB;IAAA,4DAAM;;;IADvE,0EACI;IAAA,iHAAuC;IAC3C,4DAAM;;;;IADG,0DAAgC;IAAhC,qFAAgC;;;;IAgC9C,qEACI;IAAA,qEAAI;IAAA,uDAAO;IAAA,4DAAK;IAChB,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,qEAAI;IAAA,uDAA0C;;IAAA,4DAAK;IACnD,qEACC;IAAA,0EACA;IAD0E,8ZAA2B;IAArG,4DACA;IAAA,2EACJ;IADgF,2VAA6B;IAAzG,4DACJ;IAAA,4DAAK;IACN,4DAAK;;;;IAPG,0DAAO;IAAP,yEAAO;IACP,0DAAiB;IAAjB,wGAAiB;IACjB,0DAA0C;IAA1C,2LAA0C;;;;IAWzD,0EACE;IAAA,yEAA+C;IAAA,+DAAI;IAAA,4DAAK;IACxD,6EACE;IADqD,qLAAW,aAAa,KAAE;IAC/E,2EAAyB;IAAA,iEAAO;IAAA,4DAAO;IACzC,4DAAS;IACX,4DAAM;IACN,0EACK;IAAA,uEACG;IAAA,0EACE;IAAA,4EAAmD;IAAA,2EAAe;IAAA,4DAAQ;IAC1E,6EAEF;IADE,qWAAkC;IADlC,4DAEF;IAAA,4DAAM;IACR,4DAAO;IACb,4DAAM;IACN,2EACE;IAAA,8EAA4E;IAAzB,8VAAwB;IAAC,gEAAI;IAAA,4DAAS;IAC3F,4DAAM;;;IANI,2DAAkC;IAAlC,gGAAkC;;ADtDzC,MAAM,aAAa;IAQxB,YAAoB,MAAc,EAAU,WAA+B,EAAC,MAAsB,EAAU,YAAsB;QAA9G,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAoB;QAAiC,iBAAY,GAAZ,YAAY,CAAU;QANlI,cAAS,GAAwB,EAAE,CAAC;QACpC,gBAAW,GAAG,EAAE,CAAC;QACjB,gBAAW,GAAO,EAAE,CAAC;QACrB,cAAS,GAAiB,IAAI,4CAAO,EAAO,CAAC;QAC7C,QAAG,GAAK,EAAE;QACV,aAAQ,GAAM,EAAE,CAAC;IACqH,CAAC;IAEvI,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG;YACf,UAAU,EAAE,cAAc;YAC1B,UAAU,EAAE,EAAE;SACf,CAAC;QACH,IAAI,CAAC,OAAO,EAAE,CAAC;IAChB,CAAC;IAED,UAAU,CAAC,IAAW;QACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;QACtC,4CAAK,CAAC,IAAI,CACR,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,yBAAyB,EAAE,IAAI,CAAC,GAAG,EAC9D;YACE,OAAO,EAAE;gBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SACF,CAAC;aACD,IAAI,CAAC,QAAQ,CAAC,EAAE;YACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;gBACxB,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;gBACF,gBAAgB;gBAChB,gCAAgC;gBAChC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;gBACnB,IAAI,CAAC,OAAO,EAAE,CAAC;aACd;iBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;aAEC;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACA;QACJ,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACN,CAAC;IACD,OAAO;QACL,4CAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,qBAAqB,EAAC;YACzD,OAAO,EAAE;gBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SAEF,CAAC;aACC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACf,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;gBACxB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;gBACnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC5B;iBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;aAEC;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACA;QACJ,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACN,CAAC;IAED,IAAI,CAAC,OAAO,EAAC,MAAM;QACjB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAC,cAAc,EAAE,mBAAmB,EAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAC5F,IAAI,CAAC,WAAW,GAAG,gBAAgB,MAAM,EAAE,CAAC;YAC5C,OAAO,CAAC,GAAG,CAAC,SAAS,EAAC,MAAM,CAAC,CAAC;YAC9B,4CAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,0BAA0B,GAAC,MAAM,CAAC,GAAG,EAAC,MAAM,EAAC;gBAChF,OAAO,EAAE;oBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;iBACtC;aAEF,CAAC;iBACC,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACrB,IAAI,QAAQ,CAAC,IAAI,CAAE,MAAM,EAAE;oBACzB,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;oBACF,gBAAgB;oBAChB,2BAA2B;oBAC3B,IAAI,CAAC,OAAO,EAAE,CAAC;iBACd;qBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;iBAEC;qBACG;oBACF,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;iBACA;YACJ,CAAC,CAAC;iBACD,KAAK,CAAC,UAAU,KAAK;gBACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,CAAC,CAAC;QACN,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,aAAa,CAAE,CAAC;YAE5B,IAAI,CAAC,WAAW,GAAG,aAAa,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC;QAClE,CAAC,CAAC,CAAC;IACL,CAAC;IACO,gBAAgB,CAAC,MAAW;QAClC,IAAI,MAAM,KAAK,8EAAmB,CAAC,GAAG,EAAE;YACtC,OAAO,iBAAiB,CAAC;SAC1B;aAAM,IAAI,MAAM,KAAK,8EAAmB,CAAC,cAAc,EAAE;YACxD,OAAO,2BAA2B,CAAC;SACpC;aAAM;YACL,OAAO,SAAS,MAAM,EAAE,CAAC;SAC1B;IACH,CAAC;IAGD,UAAU,CAAC,EAAE;QAEX,IAAG,OAAO,CAAC,oCAAoC,CAAC,EAChD;YACA,4CAAK,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,0BAA0B,GAAC,EAAE,EAAC;gBAClE,OAAO,EAAE;oBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;iBACtC;aACF,CAAC;iBACD,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACrB,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;oBACxB,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;oBACF,gBAAgB;oBAChB,2BAA2B;oBAC3B,IAAI,CAAC,OAAO,EAAE,CAAC;iBACd;qBACG;oBACF,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;iBACA;YACJ,CAAC,CAAC;iBACD,KAAK,CAAC,UAAU,KAAK;gBACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,CAAC,CAAC;SACH;IAEH,CAAC;;0EA7LU,aAAa;6FAAb,aAAa;;QCf1B,yEACC;QAAA,yEACI;QAAA,yEACI;QAAA,6EACD;QADoC,sRAAY,mBAAmB,IAAC;QACpE,yEACI;QAAA,2EAAqG;QAAA,mEAAQ;QAAA,4DAAQ;QAErH,yEACI;QAAA,8EAGA;QAFI,uLAA0B;QAD9B,4DAGA;QAAA,4GACI;QAER,4DAAM;QACb,4DAAM;QACN,2EACK;QAAA,2EACI;QAAA,8EAAyC;QAAA,+DAAG;QAAA,4DAAS;QACzD,4DAAM;QACX,4DAAM;QACP,4DAAO;QACV,4DAAM;QACP,4DAAM;QAEN,2EACG;QAAA,6EACI;QAAA,6EACI;QAAA,sEACI;QAAA,sEACI;QAAA,kEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,sEACP;QAAA,4DAAK;QACL,sEACO;QAAA,yEACN;QAAA,4DAAK;QACL,sEACG;QAAA,qEACL;QAAA,4DAAK;QACL,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,2GACI;QAQR,4DAAQ;QACZ,4DAAQ;QACX,4DAAM;QAEN,yMACI;QA1DJ,4DACC;;;QAQmB,0DAA0B;QAA1B,qFAA0B;QAEzB,0DAAgE;QAAhE,2GAAgE;QAe/D,0DAAuB;QAAvB,oFAAuB;QAkB9B,2DAA2C;QAA3C,iFAA2C;;6FD7B7C,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAE8B;AAGtD;AACK;AACA;;;;;;;;;ICKR,sEAA0C;IAAA,qFAAyB;IAAA,4DAAM;;;IAD7E,0EACI;IAAA,mHAA0C;IAC9C,4DAAM;;;;IADG,0DAAmC;IAAnC,qFAAmC;;;;IAiCnD,qEACI;IAAA,qEAAI;IAAA,uDAAO;IAAA,4DAAK;IAChB,qEAAI;IAAA,uDAAuB;IAAA,4DAAK;IAChC,qEAAI;IAAA,uDAA6C;;IAAA,4DAAK;IACtD,qEACI;IAAA,0EACA;IAD0E,saAAgC;IAA1G,4DACA;IAAA,2EACJ;IADgF,mWAAgC;IAA5G,4DACJ;IAAA,4DAAK;IACT,4DAAK;;;;IAPG,0DAAO;IAAP,yEAAO;IACP,0DAAuB;IAAvB,iHAAuB;IACvB,0DAA6C;IAA7C,iMAA6C;;;;IAUzD,0EACE;IAAA,yEAA+C;IAAA,iEAAM;IAAA,4DAAK;IAC1D,6EACE;IADqD,uLAAW,aAAa,KAAE;IAC/E,2EAAyB;IAAA,iEAAO;IAAA,4DAAO;IACzC,4DAAS;IACX,4DAAM;IACN,0EACK;IAAA,uEACG;IAAA,0EACE;IAAA,4EAAmD;IAAA,uEAAW;IAAA,4DAAQ;IACtE,6EAEF;IADE,0WAAqC;IADrC,4DAEF;IAAA,4DAAM;IACR,4DAAO;IACb,4DAAM;IACN,2EACE;IAAA,8EAA4E;IAAzB,gWAAwB;IAAC,gEAAI;IAAA,4DAAS;IAC3F,4DAAM;;;IANI,2DAAqC;IAArC,mGAAqC;;ADtDhD,MAAM,eAAe;IAS1B,YAAoB,MAAc,EAAU,WAA+B,EAAC,MAAsB,EAAU,YAAsB;QAA9G,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAoB;QAAiC,iBAAY,GAAZ,YAAY,CAAU;QAPlI,cAAS,GAAwB,EAAE,CAAC;QACpC,cAAS,GAAiB,IAAI,4CAAO,EAAO,CAAC;QAC7C,WAAM,GAAK,EAAE;QAEb,gBAAW,GAAS,IAAI,CAAC;QACzB,gBAAW,GAAG,EAAE,CAAC;QACjB,gBAAW,GAAO,EAAE,CAAC;QAEnB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,UAAU,CAAC,IAAW;QAEpB,4CAAK,CAAC,IAAI,CACR,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,yBAAyB,EAAE,IAAI,CAAC,MAAM,EACjE;YACE,OAAO,EAAE;gBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SACF,CAAC;aACD,IAAI,CAAC,QAAQ,CAAC,EAAE;YACf,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;gBACxB,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;gBACF,gBAAgB;gBAChB,2BAA2B;gBAC1B,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;aACnB;iBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;aAEC;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACA;QACJ,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACN,CAAC;IAED,cAAc;QACZ,4CAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,yBAAyB,EAAC;YAC7D,OAAO,EAAE;gBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SACF,CAAC;aACC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACf,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;gBACxB,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;gBACtC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC9B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC3B,IAAG,IAAI,CAAC,WAAW,EACnB;oBACE,IAAI,CAAC,WAAW,GAAC,KAAK,CAAC;oBACzB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;iBACrB;aACF;iBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;aAEC;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACA;QACJ,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACN,CAAC;IAED,IAAI,CAAC,OAAO,EAAC,MAAM;QACjB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAC,cAAc,EAAE,mBAAmB,EAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAC5F,IAAI,CAAC,WAAW,GAAG,gBAAgB,MAAM,EAAE,CAAC;YAC5C,OAAO,CAAC,GAAG,CAAC,SAAS,EAAC,MAAM,CAAC,CAAC;YAC9B,4CAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,8BAA8B,GAAC,MAAM,CAAC,GAAG,EAAC,MAAM,EAAC;gBACpF,OAAO,EAAE;oBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;iBACtC;aAEF,CAAC;iBACC,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACrB,IAAI,QAAQ,CAAC,IAAI,CAAE,MAAM,EAAE;oBACzB,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;oBACF,gBAAgB;oBAChB,2BAA2B;oBAC3B,IAAI,CAAC,cAAc,EAAE,CAAC;iBACrB;qBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;iBAEC;qBACG;oBACF,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;iBACA;YACJ,CAAC,CAAC;iBACD,KAAK,CAAC,UAAU,KAAK;gBACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,CAAC,CAAC;QACN,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,aAAa,CAAE,CAAC;YAE5B,IAAI,CAAC,WAAW,GAAG,aAAa,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC;QAClE,CAAC,CAAC,CAAC;IACL,CAAC;IACO,gBAAgB,CAAC,MAAW;QAClC,IAAI,MAAM,KAAK,8EAAmB,CAAC,GAAG,EAAE;YACtC,OAAO,iBAAiB,CAAC;SAC1B;aAAM,IAAI,MAAM,KAAK,8EAAmB,CAAC,cAAc,EAAE;YACxD,OAAO,2BAA2B,CAAC;SACpC;aAAM;YACL,OAAO,SAAS,MAAM,EAAE,CAAC;SAC1B;IACH,CAAC;IAGD,UAAU,CAAC,EAAE;QAEX,IAAG,OAAO,CAAC,oCAAoC,CAAC,EAChD;YACA,4CAAK,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,8BAA8B,GAAC,EAAE,EAAC;gBACtE,OAAO,EAAE;oBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;iBACtC;aACF,CAAC;iBACD,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACrB,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;oBACxB,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;oBACF,gBAAgB;oBAChB,2BAA2B;oBAC3B,IAAI,CAAC,cAAc,EAAE,CAAC;iBACrB;qBACG;oBACF,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;iBACA;YACJ,CAAC,CAAC;iBACD,KAAK,CAAC,UAAU,KAAK;gBACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,CAAC,CAAC;SACH;IACH,CAAC;IAED,QAAQ;IACR,CAAC;;8EA9LU,eAAe;+FAAf,eAAe;;QCf5B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,6EACD;QADuC,wRAAY,mBAAsB,IAAC;QAC1E,yEACI;QAAA,2EAAqG;QAAA,sEAAW;QAAA,4DAAQ;QAExH,yEACI;QAAA,8EAGA;QAFI,+LAAgC;QADpC,4DAGA;QAAA,8GACI;QAER,4DAAM;QACb,4DAAM;QACN,2EACK;QAAA,2EACI;QAAA,8EAAyE;QAAA,+DAAG;QAAA,4DAAS;QACzF,4DAAM;QACX,4DAAM;QACP,4DAAO;QACV,4DAAM;QACP,4DAAM;QAGT,2EACI;QAAA,6EACI;QAAA,6EACI;QAAA,sEACI;QAAA,sEACI;QAAA,kEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,yEACP;QAAA,4DAAK;QACL,sEACO;QAAA,yEACN;QAAA,4DAAK;QACL,sEACE;QAAA,qEACL;QAAA,4DAAK;QACJ,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,6GACI;QAQR,4DAAQ;QACZ,4DAAQ;QAER,2MACI;QAoBP,4DAAM;QA9EP,4DACI;;;;QAQmB,0DAAgC;QAAhC,2FAAgC;QAE/B,0DAAyE;QAAzE,2GAAyE;QAOvC,0DAA+B;QAA/B,iFAA+B;QASlE,0DAAuB;QAAvB,oFAAuB;QAkB9B,2DAAiD;QAAjD,oFAAiD;;6FD9BpD,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEdD;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,gBAAgB;IAE3B,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAChC,IAAG,OAAO,CAAC,sBAAsB,CAAC,EAClC;YACI,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YAC7B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;SACnC;aAED;YAEE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qBAAqB,CAAC,CAAC;SAC9C;IACH,CAAC;IAED,QAAQ;IACR,CAAC;;gFAhBU,gBAAgB;gGAAhB,gBAAgB;QCP7B,oEAAG;QAAA,0EAAe;QAAA,4DAAI;;6FDOT,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAKxB;AACK;;;;;;;;;ICMxB,0EACE;IAAA,yEACE;IAAA,0EACE;IAAA,0EACE;IAAA,uDACF;IAAA,4DAAM;IACR,4DAAM;IACN,0EACE;IAAA,0EACE;IAAA,0EACE;IAAA,4EACA;IADuB,uWAA6B;IAApD,4DACA;IAAA,uEAAiC;IACnC,4DAAM;IACR,4DAAM;IACR,4DAAM;IAER,4DAAM;IAER,2EACG;IAAA,2EACE;IAAA,2EAAiB;IAAA,wDAAc;IAAA,4DAAM;IACtC,4DAAM;IACN,2EACC;IACA,2EACA;IADoG,oWAA4B;IAAhI,4DACA;IAAA,2EACH;IADwG,sWAA8B;IAAnI,4DACH;IAAA,4DAAM;IAER,4DAAM;IACR,4DAAM;;;;IAzBI,0DACF;IADE,wFACF;IAKoF,0DAAgB;IAAhB,8FAAgB;IAA3C,qFAAyB;IACvE,0DAAiB;IAAjB,+FAAiB;IASZ,0DAAc;IAAd,8EAAc;;;ADlBpC,MAAM,yBAAyB;IAIpC,YACU,MAAc,EACd,IAAgB,EAChB,WAA+B;QAF/B,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAoB;QALzC,WAAM,GAAY,KAAK,CAAE;QAgMzB,MAAC,GAAW,CAAC,CAAC;IAzLV,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,SAAS;QAET,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;YACf,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,GAAC,IAAI,GAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;YAC1D,IAAG,MAAM,CAAC,MAAM,CAAC,KAAK,IAAE,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAC,GAAG,EACvD;gBACE,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;gBACjB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;aAC1B;iBAEF;gBACC,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;gBACjB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;aAC1B;QACJ,CAAC,CAAC,CAAC;IACF,CAAC;IAGA,WAAW;QACT,4CAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,iCAAiC,EAAE;YACtE,OAAO,EAAE;gBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SACF,CAAC;aACC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,EACvB;gBACA,IAAI,CAAC,YAAY,GAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;gBACrC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC;aAC7B;iBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;aAEC;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACH;QACF,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACN,CAAC;IAED,YAAY,CAAC,IAAI;QACf,4CAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,0BAA0B,EAAC,EAAC,GAAG,EAAC,IAAI,CAAC,GAAG,EAAC,QAAQ,EAAC,CAAC,IAAI,CAAC,QAAQ,EAAC,EAAC;YACtG,OAAO,EAAE;gBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SACF,CAAC;aACD,IAAI,CAAC,QAAQ,CAAC,EAAE;YACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;YACrB,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;gBACxB,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;gBACF,gBAAgB;gBAChB,2BAA2B;gBAC3B,IAAI,CAAC,WAAW,EAAE,CAAC;aAClB;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACA;QACJ,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACJ,CAAC;IAED,iBAAiB;IACjB,IAAI;IACJ,4EAA4E;IAC5E,iBAAiB;IACjB,8CAA8C;IAC9C,SAAS;IACT,OAAO;IACP,gCAAgC;IAChC,4BAA4B;IAC5B,kCAAkC;IAClC,oBAAoB;IACpB,8BAA8B;IAC9B,2BAA2B;IAC3B,2CAA2C;IAC3C,oCAAoC;IACpC,sBAAsB;IACtB,sBAAsB;IACtB,+BAA+B;IAC/B,QAAQ;IACR,YAAY;IACZ,oBAAoB;IACpB,8BAA8B;IAC9B,yBAAyB;IACzB,2CAA2C;IAC3C,oCAAoC;IACpC,sBAAsB;IACtB,SAAS;IACT,SAAS;IACT,OAAO;IACP,8BAA8B;IAC9B,yBAAyB;IACzB,OAAO;IACP,IAAI;IAEJ,UAAU,CAAC,EAAE;QAEX,IAAG,OAAO,CAAC,oCAAoC,CAAC,EAChD;YACE,4CAAK,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,yBAAyB,GAAC,EAAE,EAAC;gBACnE,OAAO,EAAE;oBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;iBACtC;aACF,CAAC;iBACD,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACrB,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;oBACxB,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;oBACF,gBAAgB;oBAChB,2BAA2B;oBAC3B,IAAI,CAAC,WAAW,EAAE,CAAC;iBAClB;qBACG;oBACF,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;iBACA;YACJ,CAAC,CAAC;iBACD,KAAK,CAAC,UAAU,KAAK;gBACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,CAAC,CAAC;SACH;IAEH,CAAC;IAED,mBAAmB;IACnB,YAAY,CAAC,KAAK;QACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACd,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;QAE7C,kBAAkB;QAClB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAS,CAAC;YACtC,OAAO,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAC/C,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG;QAEnD,CAAC,CAAC,CAAC;QAEH,kBAAkB;QAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,gEAAgE;IAElE,CAAC;IAID,UAAU,CAAC,KAAK,IAAE,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,GAAC;IAE7C,QAAQ,CAAC,EAAE;QAET,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,EAAC,EAAC,WAAW,EAAE,EAAC,EAAE,EAAE,EAAE,EAAC,EAAC,CAAC;IACrE,CAAC;;kGAxMU,yBAAyB;yGAAzB,yBAAyB;QCdtC,yEACI;QAAA,yEACG;QAAA,wEAAoB;QAAA,iFAAsB;QAAA,4DAAK;QAClD,4DAAM;QACV,4DAAM;QACN,yEACG;QAAA,yEACC;QAAA,2EACD;QADuF,sJAAS,wBAAoB,IAAC;QAApH,4DACD;QAAA,4DAAM;QACT,4DAAM;QACF,yEACE;QAAA,yEACC;QAAA,sHACE;;QA6BH,4DAAM;QAER,4DAAM;QACJ,0EACa;QAAA,0FAAqE;QAAhD,iMAAyB;QAAC,4DAAsB;QAClF,4DAAM;;QAnCe,0DAAkG;QAAlG,qOAAkG;;6FDEhH,yBAAyB;cALrC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,oCAAoC,CAAC;aAClD;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAE8B;AAEtD;AAEK;AACA;;;;;;;;;ICKR,sEAAyC;IAAA,oFAAwB;IAAA,4DAAM;;;IAD3E,0EACI;IAAA,kHAAyC;IAC7C,4DAAM;;;;IADG,0DAAkC;IAAlC,qFAAkC;;;;IAiClD,qEACI;IAAA,qEAAI;IAAA,uDAAO;IAAA,4DAAK;IAChB,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,qEAAI;IAAA,uDAA4C;;IAAA,4DAAK;IACrD,qEACI;IAAA,0EACA;IAD0E,maAA6B;IAAvG,4DACA;IAAA,2EACJ;IADgF,gWAA+B;IAA3G,4DACJ;IAAA,4DAAK;IACT,4DAAK;;;;IAPG,0DAAO;IAAP,yEAAO;IACP,0DAAqB;IAArB,8GAAqB;IACrB,0DAA4C;IAA5C,+LAA4C;;;;IAW5D,0EACE;IAAA,yEAA+C;IAAA,gEAAK;IAAA,4DAAK;IACzD,6EACE;IADqD,sLAAW,aAAa,KAAE;IAC/E,2EAAyB;IAAA,iEAAO;IAAA,4DAAO;IACzC,4DAAS;IACX,4DAAM;IACN,0EACK;IAAA,uEACG;IAAA,0EACE;IAAA,4EAAmD;IAAA,sEAAU;IAAA,4DAAQ;IACrE,6EAEF;IADE,wWAAoC;IADpC,4DAEF;IAAA,4DAAM;IACR,4DAAO;IACb,4DAAM;IACN,2EACE;IAAA,8EAA4E;IAAzB,+VAAwB;IAAC,gEAAI;IAAA,4DAAS;IAC3F,4DAAM;;;IANI,2DAAoC;IAApC,kGAAoC;;ADxD3C,MAAM,cAAc;IASzB,YAAoB,MAAc,EAAU,WAA+B,EAAC,MAAsB,EAAU,YAAsB;QAA9G,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAoB;QAAiC,iBAAY,GAAZ,YAAY,CAAU;QAPlI,cAAS,GAAwB,EAAE,CAAC;QACpC,cAAS,GAAiB,IAAI,4CAAO,EAAO,CAAC;QAC7C,UAAK,GAAK,EAAE;QAEZ,gBAAW,GAAS,IAAI,CAAC;QACzB,gBAAW,GAAG,EAAE,CAAC;QACjB,gBAAW,GAAO,EAAE,CAAC;QAEnB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,UAAU,CAAC,IAAW;QAEpB,4CAAK,CAAC,IAAI,CACR,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,uBAAuB,EAAE,IAAI,CAAC,KAAK,EAC9D;YACE,OAAO,EAAE;gBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SACF,CAAC;aACD,IAAI,CAAC,QAAQ,CAAC,EAAE;YACf,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;gBACxB,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;gBACF,gBAAgB;gBAChB,4BAA4B;gBAC5B,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;gBACnB,IAAI,CAAC,aAAa,EAAE,CAAC;aACpB;iBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;aAEC;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACA;QACJ,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACN,CAAC;IAED,aAAa;QACX,4CAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,uBAAuB,EAAC;YAC3D,OAAO,EAAE;gBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SACF,CAAC;aACC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACf,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;gBACxB,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;gBACrC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC3B,IAAG,IAAI,CAAC,WAAW,EACnB;oBACE,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;oBACtB,IAAI,CAAC,WAAW,GAAC,KAAK,CAAC;iBACxB;aACF;iBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;aAEC;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACA;QACJ,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACN,CAAC;IAED,IAAI,CAAC,OAAO,EAAC,MAAM;QACjB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAC,cAAc,EAAE,mBAAmB,EAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAC5F,IAAI,CAAC,WAAW,GAAG,gBAAgB,MAAM,EAAE,CAAC;YAC5C,OAAO,CAAC,GAAG,CAAC,SAAS,EAAC,MAAM,CAAC,CAAC;YAC9B,4CAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,4BAA4B,GAAC,MAAM,CAAC,GAAG,EAAC,MAAM,EAAC;gBAClF,OAAO,EAAE;oBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;iBACtC;aAEF,CAAC;iBACC,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACrB,IAAI,QAAQ,CAAC,IAAI,CAAE,MAAM,EAAE;oBACzB,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;oBACF,gBAAgB;oBACd,yBAAyB;oBACzB,IAAI,CAAC,aAAa,EAAE,CAAC;iBACtB;qBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;iBAEC;qBACG;oBACF,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;iBACA;YACJ,CAAC,CAAC;iBACD,KAAK,CAAC,UAAU,KAAK;gBACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,CAAC,CAAC;QACN,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,aAAa,CAAE,CAAC;YAE5B,IAAI,CAAC,WAAW,GAAG,aAAa,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC;QAClE,CAAC,CAAC,CAAC;IACL,CAAC;IACO,gBAAgB,CAAC,MAAW;QAClC,IAAI,MAAM,KAAK,8EAAmB,CAAC,GAAG,EAAE;YACtC,OAAO,iBAAiB,CAAC;SAC1B;aAAM,IAAI,MAAM,KAAK,8EAAmB,CAAC,cAAc,EAAE;YACxD,OAAO,2BAA2B,CAAC;SACpC;aAAM;YACL,OAAO,SAAS,MAAM,EAAE,CAAC;SAC1B;IACH,CAAC;IAGD,UAAU,CAAC,EAAE;QAEX,IAAG,OAAO,CAAC,oCAAoC,CAAC,EAChD;YACA,4CAAK,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,4BAA4B,GAAC,EAAE,EAAC;gBACpE,OAAO,EAAE;oBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;iBACtC;aACF,CAAC;iBACD,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACrB,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;oBACxB,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;oBACF,gBAAgB;oBAChB,2BAA2B;oBAC3B,IAAI,CAAC,aAAa,EAAE,CAAC;iBACpB;qBACG;oBACF,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;iBACA;YACJ,CAAC,CAAC;iBACD,KAAK,CAAC,UAAU,KAAK;gBACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,CAAC,CAAC;SACH;IAEH,CAAC;IAKD,QAAQ;IACR,CAAC;;4EAnMU,cAAc;8FAAd,cAAc;;QCd3B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,6EACD;QADuC,uRAAY,mBAAsB,IAAC;QAC1E,yEACI;QAAA,2EAAqG;QAAA,qEAAU;QAAA,4DAAQ;QAEvH,yEACI;QAAA,8EAGA;QAFI,4LAA8B;QADlC,4DAGA;QAAA,6GACI;QAER,4DAAM;QACb,4DAAM;QACN,2EACK;QAAA,2EACI;QAAA,8EAAyE;QAAA,+DAAG;QAAA,4DAAS;QACzF,4DAAM;QACX,4DAAM;QACP,4DAAO;QACV,4DAAM;QACP,4DAAM;QAGT,2EACI;QAAA,6EACI;QAAA,6EACI;QAAA,sEACI;QAAA,sEACI;QAAA,kEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,wEACP;QAAA,4DAAK;QACL,sEACO;QAAA,yEACN;QAAA,4DAAK;QACL,sEACE;QAAA,qEACL;QAAA,4DAAK;QACJ,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,4GACI;QAQR,4DAAQ;QACZ,4DAAQ;QACX,4DAAM;QAEN,0MACG;QAoBJ,4DAAM;;;;QAtEiB,0DAA8B;QAA9B,yFAA8B;QAE7B,0DAAsE;QAAtE,2GAAsE;QAOpC,0DAA+B;QAA/B,iFAA+B;QASjE,0DAAuB;QAAvB,oFAAuB;QAkB/B,2DAA+C;QAA/C,mFAA+C;;6FD/BlD,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgE;AACjB;AACQ;AACW;AACO;AACnB;AACM;AACN;AACM;AACA;AACN;AACD;AACC;AACc;AACH;AACR;AACW;AAClB;AAC0C;;;AAE5F,MAAM,UAAU,GAAW;IACzB;QACE,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kEAAa;KACzB;IACD;QACE,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,wEAAe;KAC3B;IACD;QACE,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,wEAAe;KAC3B;IACD;QACE,IAAI,EAAE,kBAAkB;QACxB,SAAS,EAAE,mEAAa;KACzB;IACD;QACE,IAAI,EAAE,aAAa;QACnB,SAAS,EAAE,wEAAe;KAC3B;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,mEAAa;KACzB;IACD;QACE,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sEAAc;KAC1B;IACD;QACE,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iFAAiB;KAC7B;IACD;QACE,IAAI,EAAE,gBAAgB;QACtB,SAAS,EAAE,yGAAyB;KACrC;IACD;QACE,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iFAAiB;KAC7B;IACD;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,8EAAgB;KAC5B;CACF,CAAC;AAkBK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAdlB;YACP,4DAAY;YACZ,mEAAmB;YACnB,kEAAmB;YACnB,sFAAwB;YACxB,kEAAkB;YAClB,0DAAW;YACX,mEAAgB;YAEhB,4DAAY,CAAC,QAAQ,CAAC,UAAU,CAAC;SAClC;mIAIU,gBAAgB,mBAfZ,kEAAa,EAAE,wEAAe,EAAE,wEAAe,EAAE,wEAAe,EAAE,mEAAa,EAAE,mEAAa,EAAE,iFAAiB,EAAE,8EAAgB,EAAE,sEAAc,EAAE,iFAAiB,EAAE,yGAAyB,aAE9M,4DAAY;QACZ,mEAAmB;QACnB,kEAAmB;QACnB,sFAAwB;QACxB,kEAAkB;QAClB,0DAAW;QACX,mEAAgB,2EAKT,kEAAa,EAAE,wEAAe,EAAE,8EAAgB,EAAC,sEAAc,EAAE,wEAAe,EAAC,wEAAe,EAAC,mEAAa,EAAC,mEAAa,EAAC,iFAAiB,EAAC,8EAAgB,EAAC,iFAAiB,EAAC,yGAAyB;6FAEzM,gBAAgB;cAhB5B,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,kEAAa,EAAE,wEAAe,EAAE,wEAAe,EAAE,wEAAe,EAAE,mEAAa,EAAE,mEAAa,EAAE,iFAAiB,EAAE,8EAAgB,EAAE,sEAAc,EAAE,iFAAiB,EAAE,yGAAyB,CAAC;gBACjN,OAAO,EAAE;oBACP,4DAAY;oBACZ,mEAAmB;oBACnB,kEAAmB;oBACnB,sFAAwB;oBACxB,kEAAkB;oBAClB,0DAAW;oBACX,mEAAgB;oBAEhB,4DAAY,CAAC,QAAQ,CAAC,UAAU,CAAC;iBAClC;gBACD,OAAO,EAAE,CAAE,oEAAsB,CAAE;gBACnC,OAAO,EAAC,CAAC,kEAAa,EAAE,wEAAe,EAAE,8EAAgB,EAAC,sEAAc,EAAE,wEAAe,EAAC,wEAAe,EAAC,mEAAa,EAAC,mEAAa,EAAC,iFAAiB,EAAC,8EAAgB,EAAC,iFAAiB,EAAC,yGAAyB,CAAC;aACtN;;;;;;;;;;;;;;AClFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAInB;AAEL;;;;;;;;;;ICKd,0EACI;IAAA,0EACI;IAAA,yEACI;IAAA,0EACE;IAAA,oFAAwF;IAAzE,8UAA6B;IAA4B,4DAAgB;IAC1F,4DAAM;IACN,0EACE;IAAA,6EAA6E;IAApC,gTAAgB;IAAoB,iEAAM;IAAA,4DAAS;IAC9F,4DAAM;IACR,4DAAM;IACZ,4DAAM;IACX,4DAAM;;;IAJoE,0DAAiB;IAAjB,iFAAiB;;;IAc1E,sEAAkC;IAAA,6EAAkB;IAAA,4DAAM;;;IAF9D,0EAEI;IAAA,iHAAkC;IACtC,4DAAM;;;;IADG,0DAA4B;IAA5B,qFAA4B;;;IA0BvC,sEAAuC;IAAA,kFAAuB;IAAA,4DAAM;;;IAFpE,0EAEA;IAAA,iHAAuC;IAC3C,4DAAM;;;;IADG,0DAAiC;IAAjC,qFAAiC;;;IAO5B,6EAA4D;IAAA,uDAAkB;IAAA,4DAAS;;;IAAhD,0FAAoB;IAAC,0DAAkB;IAAlB,mFAAkB;;;IAOhF,sEAAkC;IAAA,6EAAmB;IAAA,4DAAM;;;IAF3D,0EAEA;IAAA,uHAAkC;IACtC,4DAAM;;;;IADG,0DAA4B;IAA5B,sFAA4B;;;;IAX3C,yEACsB;IAAA,4EAAqG;IAAA,+DAAI;IAAA,4DAAQ;IACnI,0EACI;IAAA,iFACI;IADiB,qVAA0B;IAC3C,uHAA4D;IAI9D,4DAAS;IACT,iHAEA;IAEJ,4DAAM;IACZ,4DAAM;;;;IAXuB,0DAA0B;IAA1B,wFAA0B;IACnC,0DAA8B;IAA9B,qFAA8B;IAKnC,0DAAoD;IAApD,8GAAoD;;;;IAMnE,yEACI;IAAA,4EAAqG;IAAA,gEAAK;IAAA,4DAAQ;IAClH,0EACI;IAAA,0EACI;IACA,+FAKuB;IALqB,8WAAqC;IAKjF,4DAAuB;IAC3B,4DAAM;IACR,4DAAM;IACZ,4DAAM;;;IAR4B,0DAAqB;IAArB,qFAAqB;;;IA4B3C,sEAAoC;IAAA,+EAAmB;IAAA,4DAAM;;;IAFjE,0EAEI;IAAA,iHAAoC;IACxC,4DAAM;;;;IADG,0DAA6B;IAA7B,sFAA6B;;;IAWlC,sEAAuC;IAAA,kFAAsB;IAAA,4DAAM;;;IAFvE,0EAEI;IAAA,iHAAuC;IAC3C,4DAAM;;;;IADG,0DAAgC;IAAhC,sFAAgC;;;IAWrC,sEAAoC;IAAA,+EAAmB;IAAA,4DAAM;;;IAFjE,0EAEI;IAAA,iHAAoC;IACxC,4DAAM;;;;IADG,0DAA6B;IAA7B,sFAA6B;;ADrH3D,MAAM,aAAa;IAiBxB,YAAoB,MAAc,EAAU,KAAuB,EAAU,WAA8B;QAAvF,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAkB;QAAU,gBAAW,GAAX,WAAW,CAAmB;QAf3G,cAAS,GAAW,KAAK,CAAC;QAC1B,YAAO,GAAO;YACZ,SAAS,EAAC,WAAW;SACtB,CAAC;QACF,eAAU,GAAS,IAAI,CAAC;QAGxB,iBAAY,GAAG,EAAE,CAAC;QAClB,cAAS,GAAG;YACV,eAAe,EAAE,EAAE;SACpB,CAAC;QACH,qBAAgB,GAAG,EAAE,CAAC;QACrB,2BAA2B;QAC3B,iBAAY,GAAQ,EAAE,CAAC;QACvB,QAAG,GAAW,KAAK,CAAC;QAElB,IAAI,CAAC,gBAAgB,GAAG;YACzB,eAAe,EAAE,IAAI;YACrB,IAAI,EAAE,kBAAkB;YACxB,aAAa,EAAE,YAAY;YAC3B,eAAe,EAAE,cAAc;YAC/B,kBAAkB,EAAE,IAAI;YACxB,OAAO,EAAE,sBAAsB;SAC7B,CAAC;QACF,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,OAAO;QACL,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,4CAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,4BAA4B,EAAC;YAChE,OAAO,EAAE;gBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SAEF,CAAC;aACC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAEf,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;gBACxB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC1B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;gBACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC5B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAC5B;iBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;aAEC;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACA;QACJ,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACN,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,4CAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,uBAAuB,EAAC;YAC3D,OAAO,EAAE;gBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SAEF,CAAC;aACC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAEf,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;gBACxB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC1B,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;gBACrC,IAAI,GAAG,GAAG,EAAE,CAAC;gBACb,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAE,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC7C,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC;iBACnF;gBACD,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAC5B;iBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;aAEC;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACA;QACJ,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACN,CAAC;IAGD,OAAO,CAAC,QAAQ;QACd,yBAAyB;QACzB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACvD,CAAC;IACD,OAAO,CAAC,GAAG;QACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;QACzB,2BAA2B;IAC5B,CAAC;IAED,IAAI;QACH,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,4CAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,sBAAsB,EAAE,QAAQ,EAAC;YACvE,OAAO,EAAE;gBACL,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SACJ,CAAC;aACA,IAAI,CAAC,QAAQ,CAAC,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACpB,IAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAC;gBAC3B,+CAA+C;gBAC5C,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACF;iBAAK;gBACJ,4CAA4C;gBACzC,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACJ;QAGH,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,KAAK;YACvB,eAAe;YACf,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACpB,CAAC,CAAC;aACD,OAAO,CAAC;YACR,kBAAkB;QACnB,CAAC,CAAC,CAAC;IACN,CAAC;IAGC,OAAO;QAEL,IAAI,CAAC,SAAS,GAAC,CAAC,IAAI,CAAC,SAAS,CAAC;IACjC,CAAC;IAED,YAAY,CAAC,IAAI;QAEhB,IAAG,IAAI,IAAE,OAAO,EAChB;YACC,IAAI,CAAC,UAAU,GAAC,KAAK,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,SAAS,GAAC,OAAO,CAAC;YAC/B,sBAAsB;YACtB,mBAAmB;YACnB,gBAAgB;YAChB,IAAI;SACJ;aACI,IAAG,IAAI,IAAI,WAAW,EAC3B;YACC,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC;YACrB,IAAI,CAAC,OAAO,CAAC,SAAS,GAAC,WAAW,CAAC;SACnC;aAED;YACC,IAAI,CAAC,gBAAgB,GAAG;gBACzB,eAAe,EAAE,KAAK;gBACtB,IAAI,EAAE,kBAAkB;gBACxB,aAAa,EAAE,YAAY;gBAC3B,eAAe,EAAE,cAAc;gBAC/B,kBAAkB,EAAE,IAAI;gBACxB,OAAO,EAAE,sBAAsB;aAC7B,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,SAAS,GAAC,OAAO,CAAC;SAC/B;IACF,CAAC;IAED,kBAAkB;QAEhB,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC7B,CAAC;IAED,UAAU,CAAC,IAAW;QAEpB,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAC,EAAE,CAAC;QACzB,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,MAAM,EAAC,CAAC,EAAE,EACrD;YACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;SAC/D;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1B,4CAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,uBAAuB,EAAC,IAAI,CAAC,OAAO,EAAC;YACzE,OAAO,EAAE;gBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SAEF,CAAC;aACC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;YACrB,IAAI,QAAQ,CAAC,IAAI,CAAE,MAAM,EAAE;gBACzB,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;gBACF,gBAAgB;gBAChB,uBAAuB;gBACvB,OAAO;gBACN,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;aACnB;iBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;aAEC;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACA;QACJ,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACN,CAAC;IAID,QAAQ;IACR,CAAC;IAED,YAAY,CAAC,IAAS;QACpB,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAC1C,yDAAyD;QACzD,IAAI;QACJ,gEAAgE;QAChE,IAAI;QACJ,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,yDAAyD;QAC3D,6CAA6C;IAC9C,CAAC;IACD,cAAc,CAAC,IAAS;QACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,6CAA6C;IAC9C,CAAC;IACD,WAAW,CAAC,KAAU;QACnB,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAC1C,gDAAgD;IACnD,CAAC;IACD,aAAa,CAAC,KAAU;QACvB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC;;0EApRW,aAAa;6FAAb,aAAa;;QCd1B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACJ;QAAA,wEAA0B;QAAA,oEAAS;QAAA,4DAAK;QACpC,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,yEACK;QAAA,2EAA8E;QAArB,sIAAU,aAAS,IAAC;QAA7E,4DAA8E;QAAA,sEAC/E;QAAA,2GACI;QAWJ,+EACI;QADgC,wRAAY,mBAAoB,IAAC;QACjE,2EACI;QAAA,0EACA;QAAA,6EAAqG;QAAA,gEAAI;QAAA,4DAAQ;QAChH,2EACG;QAAA,iFAEA;QADA,wLAA0B;QAD1B,4DAEA;QAAA,4GAEI;QAER,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACE;QACE,iFAGA;QAFA,6LAA+B,qFACrB,qCAAiC,IADZ;QAD/B,4DAGA;QAAA,6EAAoC;QAAA,qEAAS;QAAA,4DAAQ;QAGrD,iFAGA;QAFA,6LAA+B,qFACrB,qCAAiC,IADZ;QAD/B,4DAGA;QAAA,6EAAgC;QAAA,iEAAK;QAAA,4DAAQ;QAE7C,iFAGA;QAFA,6LAA+B,qFACrB,qCAAiC,IADZ;QAD/B,4DAGA;QAAA,6EAAgC;QAAA,iEAAK;QAAA,4DAAQ;QAE/C,4DAAM;QACN,4GAEA;QAEN,4DAAM;QACF,4GACsB;QActB,4GACI;QAyBJ,0EACI;QAAA,6EAAqG;QAAA,iEAAK;QAAA,4DAAQ;QACjH,2EACG;QAAA,iFAEA;QADA,yLAA2B;QAD3B,4DAEA;QAAA,4GAEI;QAER,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,6EAAqG;QAAA,oEAAQ;QAAA,4DAAQ;QACpH,2EACG;QAAA,iFAEA;QADA,4LAA8B;QAD9B,4DAEA;QAAA,4GAEI;QAER,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,6EAAqG;QAAA,iEAAK;QAAA,4DAAQ;QACjH,2EACG;QAAA,iFAEA;QADA,yLAA2B;QAD3B,4DAEA;QAAA,4GAEI;QAER,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,6EAAuG;QAAA,qEAAS;QAAA,4DAAQ;QACvH,2EACG;QAAA,iFAEA;QADA,4LAA8B;QAD9B,4DAEA;QAIJ,4DAAM;QAEV,4DAAM;QAEN,0EACI;QAAA,8EAAwE;QAAA,kEAAM;QAAA,4DAAS;QACvF,8EAAiD;QAAA,iEAAK;QAAA,4DAAS;QACnE,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;;;;;;;;QAjJ6B,2DAAiB;QAAjB,+EAAiB;QAkB5B,0DAA0B;QAA1B,qFAA0B;QACrB,0DAAoD;QAApD,2GAAoD;QAUzD,0DAA+B;QAA/B,0FAA+B;QAM/B,0DAA+B;QAA/B,0FAA+B;QAK/B,0DAA+B;QAA/B,0FAA+B;QAK5B,0DAAoE;QAApE,2GAAoE;QAK1D,0DAAgD;QAAhD,oHAAgD;QAe/C,0DAAiD;QAAjD,qHAAiD;QA8B3D,0DAA2B;QAA3B,sFAA2B;QACtB,0DAAuD;QAAvD,8GAAuD;QAU5D,0DAA8B;QAA9B,yFAA8B;QACzB,0DAAgE;QAAhE,8GAAgE;QAUrE,0DAA2B;QAA3B,sFAA2B;QACtB,0DAAuD;QAAvD,8GAAuD;QAU5D,0DAA8B;QAA9B,yFAA8B;QAUQ,0DAA6B;QAA7B,iFAA6B;;6FDvIlF,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAE8B;AAEtD;AAEK;AACA;;;;;;;;;ICKR,sEAA0C;IAAA,qFAAyB;IAAA,4DAAM;;;IAD7E,0EACI;IAAA,mHAA0C;IAC9C,4DAAM;;;;IADG,0DAAmC;IAAnC,qFAAmC;;;IAgCnD,qEACI;IAAA,qEAAI;IAAA,uDAAO;IAAA,4DAAK;IAChB,qEAAI;IAAA,uDAAoB;IAAA,4DAAK;IAC7B,qEAAI;IAAA,uDAA0C;;IAAA,4DAAK;IACnD,gEAGK;IACT,4DAAK;;;;IAPG,0DAAO;IAAP,yEAAO;IACP,0DAAoB;IAApB,2GAAoB;IACpB,0DAA0C;IAA1C,2LAA0C;;;;IAW1D,0EACE;IAAA,yEAA+C;IAAA,qEAAU;IAAA,4DAAK;IAC9D,6EACE;IADqD,uLAAW,aAAa,KAAE;IAC/E,2EAAyB;IAAA,iEAAO;IAAA,4DAAO;IACzC,4DAAS;IACX,4DAAM;IACN,0EACK;IAAA,uEACG;IAAA,0EACE;IAAA,4EAAmD;IAAA,2EAAe;IAAA,4DAAQ;IAC1E,6EAEF;IADE,wWAAmC;IADnC,4DAEF;IAAA,4DAAM;IACR,4DAAO;IACb,4DAAM;IACN,2EACE;IAAA,8EAA4E;IAAzB,8VAAwB;IAAC,gEAAI;IAAA,4DAAS;IAC3F,4DAAM;;;IANI,2DAAmC;IAAnC,iGAAmC;;ADxD1C,MAAM,eAAe;IAS1B,YAAoB,MAAc,EAAU,WAA+B,EAAC,MAAsB,EAAU,YAAsB;QAA9G,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAoB;QAAiC,iBAAY,GAAZ,YAAY,CAAU;QAPlI,WAAM,GAAK,EAAE,CAAC;QACd,cAAS,GAAwB,EAAE,CAAC;QACpC,cAAS,GAAiB,IAAI,4CAAO,EAAO,CAAC;QAG7C,gBAAW,GAAG,EAAE,CAAC;QACjB,gBAAW,GAAO,EAAE,CAAC;IAGrB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,UAAU;QAER,4CAAK,CAAC,IAAI,CACR,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,6BAA6B,EAAE,IAAI,CAAC,MAAM,EACrE;YACE,OAAO,EAAE;gBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SACF,CAAC;aACD,IAAI,CAAC,QAAQ,CAAC,EAAE;YACf,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;gBACxB,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBACX,QAAQ,CAAC,MAAM,EAAE,CAAC;gBAAC,CAAC,CAAC,CAAC;aACvB;QACH,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACN,CAAC;IAED,aAAa;QACX,4CAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,6BAA6B,EAAC;YACjE,OAAO,EAAE;gBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SACF,CAAC;aACC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACf,IAAI,QAAQ,CAAC,MAAM,EAAE;gBACnB,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;gBACrC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;gBAE3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAC5B;QACH,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACN,CAAC;IAED,IAAI,CAAC,OAAO,EAAC,MAAM;QACjB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAC,cAAc,EAAE,mBAAmB,EAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAC5F,IAAI,CAAC,WAAW,GAAG,gBAAgB,MAAM,EAAE,CAAC;YAC5C,OAAO,CAAC,GAAG,CAAC,SAAS,EAAC,MAAM,CAAC,CAAC;YAC9B,4CAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,8BAA8B,GAAC,MAAM,CAAC,GAAG,EAAC,MAAM,EAAC;gBACpF,OAAO,EAAE;oBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;iBACtC;aAEF,CAAC;iBACC,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACrB,IAAI,QAAQ,CAAC,IAAI,CAAE,MAAM,EAAE;oBACzB,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;wBACX,QAAQ,CAAC,MAAM,EAAE,CAAC;oBAAC,CAAC,CAAC,CAAC;iBACvB;qBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;iBAEC;qBACG;oBACF,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;iBACA;YACJ,CAAC,CAAC;iBACD,KAAK,CAAC,UAAU,KAAK;gBACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,CAAC,CAAC;QACN,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,aAAa,CAAE,CAAC;YAE5B,IAAI,CAAC,WAAW,GAAG,aAAa,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC;QAClE,CAAC,CAAC,CAAC;IACL,CAAC;IACO,gBAAgB,CAAC,MAAW;QAClC,IAAI,MAAM,KAAK,8EAAmB,CAAC,GAAG,EAAE;YACtC,OAAO,iBAAiB,CAAC;SAC1B;aAAM,IAAI,MAAM,KAAK,8EAAmB,CAAC,cAAc,EAAE;YACxD,OAAO,2BAA2B,CAAC;SACpC;aAAM;YACL,OAAO,SAAS,MAAM,EAAE,CAAC;SAC1B;IACH,CAAC;IAGD,UAAU,CAAC,EAAE;QAEX,IAAG,OAAO,CAAC,oCAAoC,CAAC,EAChD;YACA,4CAAK,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,8BAA8B,GAAC,EAAE,EAAC;gBACtE,OAAO,EAAE;oBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;iBACtC;aACF,CAAC;iBACD,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACrB,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;oBACxB,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;yBACD,IAAI,CAAC,GAAG,EAAE;wBACT,QAAQ,CAAC,MAAM,EAAE,CAAC;oBAAC,CAAC,CAAC,CAAC;oBACxB,kBAAkB;iBACjB;qBACG;oBACF,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;iBACA;YACJ,CAAC,CAAC;iBACD,KAAK,CAAC,UAAU,KAAK;gBACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,CAAC,CAAC;SACH;IAEH,CAAC;;8EA/JU,eAAe;+FAAf,eAAe;QCb5B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,6EACD;QADuC,2IAAY,gBAAY,IAAC;QAChE,yEACI;QAAA,2EAAqG;QAAA,sEAAW;QAAA,4DAAQ;QAExH,yEACI;QAAA,8EAGA;QAFI,+LAAgC;QADpC,4DAGA;QAAA,8GACI;QAER,4DAAM;QACb,4DAAM;QACN,2EACK;QAAA,2EACI;QAAA,8EAAyE;QAAA,+DAAG;QAAA,4DAAS;QACzF,4DAAM;QACX,4DAAM;QACP,4DAAO;QACV,4DAAM;QACP,4DAAM;QAEN,2EACC;QAAA,6EACI;QAAA,6EACI;QAAA,sEACI;QAAA,sEACI;QAAA,kEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,yEACP;QAAA,4DAAK;QACL,sEACO;QAAA,yEACN;QAAA,4DAAK;QACL,sEACE;QAAA,qEACL;QAAA,4DAAK;QACJ,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,4GACI;QAQR,4DAAQ;QACZ,4DAAQ;QACX,4DAAM;QAEN,2MACG;QA1DJ,4DACI;;;;QAQmB,0DAAgC;QAAhC,2FAAgC;QAE/B,0DAAyE;QAAzE,2GAAyE;QAOvC,0DAA+B;QAA/B,iFAA+B;QAQlE,0DAAuB;QAAvB,oFAAuB;QAkB9B,2DAA6C;QAA7C,mFAA6C;;6FD/BhD,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAKnB;AACL;;;;;;;;ICaE,sEAAmC;IAAA,8EAAkB;IAAA,4DAAM;;;IAF/D,0EAEI;IAAA,qHAAmC;IACvC,4DAAM;;;;IADG,0DAA4B;IAA5B,qFAA4B;;;IAyBvC,sEAAuC;IAAA,kFAAuB;IAAA,4DAAM;;;IAFpE,0EAEA;IAAA,qHAAuC;IAC3C,4DAAM;;;;IADG,0DAAiC;IAAjC,qFAAiC;;;IAO5B,6EAA4D;IAAA,uDAAkB;IAAA,4DAAS;;;IAAhD,0FAAoB;IAAC,0DAAkB;IAAlB,mFAAkB;;;IAOhF,sEAAkC;IAAA,6EAAmB;IAAA,4DAAM;;;IAF3D,0EAEA;IAAA,2HAAkC;IACtC,4DAAM;;;;IADG,0DAA4B;IAA5B,sFAA4B;;;;IAX3C,yEACI;IAAA,4EAAqG;IAAA,+DAAI;IAAA,4DAAQ;IACjH,0EACI;IAAA,iFACI;IADiB,yVAA0B;IAC3C,2HAA4D;IAI9D,4DAAS;IACT,qHAEA;IAEJ,4DAAM;IACZ,4DAAM;;;;IAXuB,0DAA0B;IAA1B,wFAA0B;IACnC,0DAA8B;IAA9B,qFAA8B;IAKnC,0DAAoD;IAApD,8GAAoD;;;;IAMnE,yEACI;IAAA,2EAAqG;IAAA,gEAAK;IAAA,4DAAQ;IAClH,0EACI;IAAA,0EACI;IACA,+FAKuB;IALqB,kXAAqC;IAKjF,4DAAuB;IAC3B,4DAAM;IACR,4DAAM;IACZ,4DAAM;;;IAR4B,0DAAqB;IAArB,qFAAqB;;;IA4B3C,sEAAoC;IAAA,+EAAmB;IAAA,4DAAM;;;IAFjE,0EAEI;IAAA,qHAAoC;IACxC,4DAAM;;;;IADG,0DAA6B;IAA7B,qFAA6B;;;IAsBlC,sEAAoC;IAAA,+EAAmB;IAAA,4DAAM;;;IAFjE,0EAEI;IAAA,qHAAoC;IACxC,4DAAM;;;;IADG,0DAA6B;IAA7B,sFAA6B;;ADxG3D,MAAM,iBAAiB;IAa5B,YAAoB,MAAc,EAAS,OAAsB,EAAW,KAAuB,EAAS,WAA8B;QAAtH,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAe;QAAW,UAAK,GAAL,KAAK,CAAkB;QAAS,gBAAW,GAAX,WAAW,CAAmB;QAX1I,YAAO,GAAO,EACb,CAAC;QAGF,iBAAY,GAAG,EAAE,CAAC;QAClB,cAAS,GAAG;YACV,eAAe,EAAE,EAAE;SACpB,CAAC;QACH,qBAAgB,GAAG,EAAE,CAAC;QAErB,eAAU,GAAY,KAAK,CAAC;QAE1B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACxD,IAAI,CAAC,gBAAgB,GAAG;YACzB,eAAe,EAAE,IAAI;YACrB,IAAI,EAAE,kBAAkB;YACxB,aAAa,EAAE,YAAY;YAC3B,eAAe,EAAE,cAAc;YAC/B,kBAAkB,EAAE,IAAI;YACxB,OAAO,EAAE,sBAAsB;SAC7B,CAAC;QACF,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,WAAW;QACT,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,4CAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,yBAAyB,GAAC,IAAI,CAAC,EAAE,EAAC;YACrE,OAAO,EAAE;gBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SAEF,CAAC;aACC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACrB,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EACvB;gBACC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC1B,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;gBAClC,IAAI,GAAG,GAAG,EAAE,CAAC;gBACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACpD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,GAAE;wBAC3B,IAAG,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;4BACxC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,GAAG,EAAE,QAAQ,EAAE,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC;oBAC3D,CAAC,CAAC;iBACJ;gBACD,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,GAAG,CAAC;gBACnC,OAAO,CAAC,GAAG,CAAE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;gBAC3C,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC3B,IAAG,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,WAAW;oBACxC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;qBACnB,IAAG,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,OAAO,EACzC;oBACE,IAAI,CAAC,gBAAgB,GAAG;wBACtB,eAAe,EAAE,KAAK;wBACtB,IAAI,EAAE,kBAAkB;wBACxB,aAAa,EAAE,YAAY;wBAC3B,eAAe,EAAE,cAAc;wBAC/B,kBAAkB,EAAE,IAAI;wBACxB,OAAO,EAAE,sBAAsB;qBAClC;iBACF;qBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;iBAEC;qBACG;oBACF,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;iBACA;aACD;QACA,CAAC,CAAC;aACJ,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACN,CAAC;IAED,YAAY,CAAC,IAAI;QAEhB,IAAG,IAAI,IAAE,OAAO,EAChB;YACC,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC;YACrB,IAAI,CAAC,OAAO,CAAC,SAAS,GAAC,OAAO;YAC9B,sBAAsB;YACtB,mBAAmB;YACnB,gBAAgB;YAChB,IAAI;SACJ;aACI,IAAG,IAAI,IAAI,WAAW,EAC3B;YACC,IAAI,CAAC,UAAU,GAAC,KAAK,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,SAAS,GAAC,WAAW,CAAC;SACnC;aAED;YACC,IAAI,CAAC,gBAAgB,GAAG;gBACzB,eAAe,EAAE,KAAK;gBACtB,IAAI,EAAE,kBAAkB;gBACxB,aAAa,EAAE,YAAY;gBAC3B,eAAe,EAAE,cAAc;gBAC/B,kBAAkB,EAAE,IAAI;gBACxB,OAAO,EAAE,sBAAsB;aAC7B,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,SAAS,GAAC,OAAO,CAAC;SAC/B;IACF,CAAC;IAED,OAAO;QACL,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,4CAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,4BAA4B,EAAC;YAChE,OAAO,EAAE;gBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SACF,CAAC;aACC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAEf,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;gBACxB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC1B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;gBACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC5B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAC5B;iBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;aAEC;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACA;QACJ,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACN,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,4CAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,uBAAuB,EAAC;YAC3D,OAAO,EAAE;gBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SAEF,CAAC;aACC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACf,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;gBACxB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC1B,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;gBACrC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;gBACrC,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,IAAI,GAAG,GAAG,EAAE,CAAC;gBACb,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAE,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC7C,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC;iBACnF;gBACD,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;gBACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAC5B;iBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;aAEC;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACA;QACJ,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACN,CAAC;IAED,UAAU;QAER,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAC,EAAE,CAAC;QACzB,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,MAAM,EAAC,CAAC,EAAE,EACrD;YACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;SAC/D;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1B,4CAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,yBAAyB,GAAC,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,OAAO,EAAC;YAClF,OAAO,EAAE;gBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SAEF,CAAC;aACC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;YACrB,IAAI,QAAQ,CAAC,IAAI,CAAE,MAAM,EAAE;gBACzB,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;gBACF,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,gBAAgB;gBAChB,2BAA2B;aAC1B;YACD,qFAAqF;YACrF,IAAI;YAEJ,IAAI;iBACA;gBACF,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACA;QACJ,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACN,CAAC;IAGD,QAAQ;IACR,CAAC;IAED,kBAAkB;QAEhB,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC7B,CAAC;IAGD,YAAY,CAAC,IAAS;QACpB,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAC1C,yDAAyD;QACzD,IAAI;QACJ,gEAAgE;QAChE,IAAI;QACJ,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,yDAAyD;QAC3D,6CAA6C;IAC9C,CAAC;IACD,cAAc,CAAC,IAAS;QACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,6CAA6C;IAC9C,CAAC;IACD,WAAW,CAAC,KAAU;QACnB,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAC1C,gDAAgD;IACnD,CAAC;IACD,aAAa,CAAC,KAAU;QACvB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC;;kFA7QW,iBAAiB;iGAAjB,iBAAiB;QCb9B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACJ;QAAA,qEAAI;QAAA,6EAAkB;QAAA,4DAAK;QACvB,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,yEACI;QAAA,6EACI;QADkC,6IAAY,gBAAY,IAAC;QAC3D,0EACI;QAAA,0EACA;QAAA,4EAAqG;QAAA,gEAAI;QAAA,4DAAQ;QAChH,2EACG;QAAA,iFAEA;QADA,4LAA0B;QAD1B,4DAEA;QAAA,gHAEI;QAER,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACE;QACE,iFAGA;QAFA,iMAA+B,yFACrB,qCAAiC,IADZ;QAD/B,4DAGA;QAAA,6EAAoC;QAAA,qEAAS;QAAA,4DAAQ;QAGrD,iFAGA;QAFA,iMAA+B,yFACrB,qCAAiC,IADZ;QAD/B,4DAGA;QAAA,6EAAgC;QAAA,iEAAK;QAAA,4DAAQ;QAC7C,iFAGA;QAFA,iMAA+B,yFACrB,qCAAiC,IADZ;QAD/B,4DAGA;QAAA,6EAAgC;QAAA,iEAAK;QAAA,4DAAQ;QAE/C,4DAAM;QACN,gHAEA;QAEN,4DAAM;QACF,gHACI;QAcJ,gHACI;QAyBJ,0EACI;QAAA,4EAAqG;QAAA,iEAAK;QAAA,4DAAQ;QACjH,2EACG;QAAA,iFAEA;QADA,6LAA2B;QAD3B,4DAEA;QAAA,gHAEI;QAER,4DAAM;QACV,4DAAM;QAYN,0EACI;QAAA,4EAAqG;QAAA,iEAAK;QAAA,4DAAQ;QACjH,2EACG;QAAA,iFAEA;QADA,6LAA2B;QAD3B,4DAEA;QAAA,gHAEI;QAER,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,6EAAuG;QAAA,qEAAS;QAAA,4DAAQ;QACvH,2EACG;QAAA,iFAEA;QADA,gMAA8B;QAD9B,4DAEA;QAIJ,4DAAM;QAEV,4DAAM;QAEN,0EACI;QAAA,8EAAyC;QAAA,kEAAM;QAAA,4DAAS;QACxD,8EAA+B;QAAA,iEAAK;QAAA,4DAAS;QACjD,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;;;;;;QA9HkB,2DAA0B;QAA1B,qFAA0B;QACrB,0DAAoD;QAApD,2GAAoD;QAUzD,0DAA+B;QAA/B,0FAA+B;QAM/B,0DAA+B;QAA/B,0FAA+B;QAI/B,0DAA+B;QAA/B,0FAA+B;QAK5B,0DAAoE;QAApE,2GAAoE;QAK1D,0DAAiD;QAAjD,qHAAiD;QAehD,0DAAgD;QAAhD,oHAAgD;QA8B1D,0DAA2B;QAA3B,sFAA2B;QACtB,0DAAuD;QAAvD,2GAAuD;QAqB5D,0DAA2B;QAA3B,sFAA2B;QACtB,0DAAuD;QAAvD,8GAAuD;QAU5D,0DAA8B;QAA9B,yFAA8B;;6FDhH7C,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAA0G;;AAElE;AACxC;AACA,mBAAmB;AACnB;AACA,oEAAoE,yCAAyC;AAC7G,4BAA4B,wEAAkB,EAAE,kDAAkD,kCAAkC,EAAE,kDAAkD;AACxL;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,UAAU;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,4BAA4B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,2CAA2C;AACnH,6BAA6B,+DAAwB,EAAE,wEAAwE,2CAA2C,iNAAiN;AAC3X,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,oFAAoF,wCAAwC,EAAE;AACvJ,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK,EAAE,oBAAoB;AAC3B;AACA;AACA,iBAAiB,OAAO,oDAAM,EAAE;AAChC,cAAc,OAAO,oDAAM,EAAE;AAC7B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA,0BAA0B,8DAAuB,EAAE,2BAA2B;AAC9E,0BAA0B,8DAAuB,EAAE,kDAAkD,wCAAwC,EAAE,iBAAiB;AAChK,cAAc,oDAAoD,gEAAyB,sBAAsB,0EAA0E,EAAE,EAAE;AAC/L,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;;AAEA;AACA;AACA;;AAE0E;;AAE1E,0C;;;;;;;;;;;;ACnJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAE8B;AAEjD;AAEL;AACK;;;;;;;;;ICiBA,yEAA+C;IAAA,uDAA0B;IAAA,4DAAS;;;IAAnC,0DAA0B;IAA1B,sHAA0B;;;IAYpE,sEAAuC;IAAA,yFAA6B;IAAA,4DAAM;;;IAD9E,0EACI;IAAA,mHAAuC;IAC3C,4DAAM;;;;IADG,0DAAgC;IAAhC,qFAAgC;;;IAYlD,sEAAyC;IAAA,oFAAwB;IAAA,4DAAM;;;IAD3E,0EACI;IAAA,mHAAyC;IAC7C,4DAAM;;;;IADG,0DAAkC;IAAlC,qFAAkC;;;;IAkClD,qEACI;IAAA,qEAAI;IAAA,uDAAO;IAAA,4DAAK;IAChB,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAC5B,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,qEACI;IAAA,0EACA;IAD0E,waAA6B;IAAvG,4DACA;IAAA,0EACJ;IADgF,kWAA+B;IAA3G,4DACJ;IAAA,4DAAK;IACT,4DAAK;;;;IAPG,0DAAO;IAAP,0EAAO;IACP,0DAAmB;IAAnB,8GAAmB;IACnB,0DAAqB;IAArB,gHAAqB;;;IAyBtB,yEAA+C;IAAA,uDAA0B;IAAA,4DAAS;;;IAAnC,0DAA0B;IAA1B,wHAA0B;;;IAYpE,sEAAuC;IAAA,yFAA6B;IAAA,4DAAM;;;IAD9E,0EACI;IAAA,kIAAuC;IAC3C,4DAAM;;;;IADG,0DAAgC;IAAhC,sFAAgC;;;;IA1BzD,0EACE;IAAA,yEAA+C;IAAA,iEAAM;IAAA,4DAAK;IAC1D,6EACE;IADqD,uLAAW,aAAa,KAAE;IAC/E,2EAAyB;IAAA,iEAAO;IAAA,4DAAO;IACzC,4DAAS;IACX,4DAAM;IACN,0EACK;IAAA,uEACG;IAAA,yEACI;IAAA,4EAAsG;IAAA,2EAAe;IAAA,4DAAQ;IAC7H,2EACG;IAAA,gFAEA;IADA,wWAAkC;IAClC,8EAAiB;IAAA,oEAAQ;IAAA,4DAAS;IAClC,mIAA+C;IAU/C,4DAAS;IACR,6HACI;IAEd,4DAAM;IACR,4DAAM;IACH,2EACA;IAQG,6EAAmD;IAAA,sEAAU;IAAA,4DAAQ;IACrE,6EAEF;IADE,yWAAoC;IADpC,4DAEF;IAAA,4DAAM;IACR,4DAAO;IACb,4DAAM;IACN,2EACE;IAAA,8EAA4E;IAAzB,gWAAwB;IAAC,gEAAI;IAAA,4DAAS;IAC3F,4DAAM;;;;IAnCS,2DAAkC;IAAlC,gGAAkC;IAE1B,0DAAsC;IAAtC,yFAAsC;IAWxC,0DAAgE;IAAhE,8GAAgE;IAgB3E,0DAAoC;IAApC,kGAAoC;;AD1H3C,MAAM,eAAe;IAY1B,YAAoB,MAAc,EAAU,WAA+B,EAAC,MAAsB,EAAU,YAAsB;QAA9G,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAoB;QAAiC,iBAAY,GAAZ,YAAY,CAAU;QAVlI,SAAI,GAAK,EAAE;QACX,cAAS,GAAwB,EAAE,CAAC;QACpC,cAAS,GAAiB,IAAI,4CAAO,EAAO,CAAC;QAC7C,UAAK,GAAK,EAAE;QAEZ,gBAAW,GAAS,IAAI,CAAC;QAGzB,gBAAW,GAAG,EAAE,CAAC;QACjB,gBAAW,GAAO,EAAE,CAAC;QAEnB,IAAI,CAAC,OAAO,EAAE,CAAC;QACd,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACF,UAAU,CAAC,IAAW;QACpB,4CAAK,CAAC,IAAI,CACR,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,8BAA8B,EAAE,IAAI,CAAC,KAAK,EACrE;YACE,OAAO,EAAE;gBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SACF,CAAC;aACD,IAAI,CAAC,QAAQ,CAAC,EAAE;YACf,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;gBACxB,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBAEd,CAAC;gBACF,gBAAgB;gBAChB,2BAA2B;gBAC3B,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;gBACnB,IAAI,CAAC,SAAS,EAAE,CAAC;aAChB;iBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;aAEC;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACA;QACJ,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACN,CAAC;IAEF,sBAAsB;IACtB,WAAW;QACV,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,4CAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,6BAA6B,EAAC;YACjE,OAAO,EAAE;gBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SAEF,CAAC;aACC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAEf,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;gBACxB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC1B,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;aACzC;iBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;aAEC;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACA;QACJ,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACN,CAAC;IAEC,OAAO;QACL,4CAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,4BAA4B,EAAC;YAChE,OAAO,EAAE;gBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SACF,CAAC;aACC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAEf,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;gBACxB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACzB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;gBACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC5B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAE5B;iBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;aAEC;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACA;QACJ,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACN,CAAC;IAED,SAAS;QACP,4CAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,8BAA8B,EAAC;YAClE,OAAO,EAAE;gBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;aACtC;SACF,CAAC;aACC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAEf,IAAI,QAAQ,CAAC,MAAM,EAAE;gBACnB,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;gBACtC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC9B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC3B,IAAG,IAAI,CAAC,WAAW,EACnB;oBACE,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;oBACjB,IAAI,CAAC,WAAW,GAAC,KAAK,CAAC;iBAC7B;aACF;iBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;aAEC;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC;oBACR,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/B,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACd,CAAC;aACA;QACJ,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACN,CAAC;IAED,IAAI,CAAC,OAAO,EAAC,MAAM;QACjB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAC,cAAc,EAAE,mBAAmB,EAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAC5F,IAAI,CAAC,WAAW,GAAG,gBAAgB,MAAM,EAAE,CAAC;YAC5C,OAAO,CAAC,GAAG,CAAC,SAAS,EAAC,MAAM,CAAC,CAAC;YAC9B,4CAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,kCAAkC,GAAC,MAAM,CAAC,GAAG,EAAC,MAAM,EAAC;gBACxF,OAAO,EAAE;oBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;iBACtC;aAEF,CAAC;iBACC,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACrB,IAAI,QAAQ,CAAC,IAAI,CAAE,MAAM,EAAE;oBACzB,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;oBACF,gBAAgB;oBAChB,2BAA2B;oBAC3B,IAAI,CAAC,SAAS,EAAE,CAAC;iBAChB;qBACI,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EACjF;iBAEC;qBACG;oBACF,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;iBACA;YACJ,CAAC,CAAC;iBACD,KAAK,CAAC,UAAU,KAAK;gBACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,CAAC,CAAC;QACN,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,aAAa,CAAE,CAAC;YAE5B,IAAI,CAAC,WAAW,GAAG,aAAa,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC;QAClE,CAAC,CAAC,CAAC;IACL,CAAC;IACO,gBAAgB,CAAC,MAAW;QAClC,IAAI,MAAM,KAAK,8EAAmB,CAAC,GAAG,EAAE;YACtC,OAAO,iBAAiB,CAAC;SAC1B;aAAM,IAAI,MAAM,KAAK,8EAAmB,CAAC,cAAc,EAAE;YACxD,OAAO,2BAA2B,CAAC;SACpC;aAAM;YACL,OAAO,SAAS,MAAM,EAAE,CAAC;SAC1B;IACH,CAAC;IAGD,UAAU,CAAC,EAAE;QAEX,IAAG,OAAO,CAAC,oCAAoC,CAAC,EAChD;YACA,4CAAK,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,kCAAkC,GAAC,EAAE,EAAC;gBAC1E,OAAO,EAAE;oBACP,QAAQ,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS;iBACtC;aACF,CAAC;iBACD,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACrB,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;oBACxB,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;oBACF,gBAAgB;oBAChB,2BAA2B;oBAC3B,IAAI,CAAC,SAAS,EAAE,CAAC;iBAChB;qBACG;oBACF,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC/B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACd,CAAC;iBACA;YACJ,CAAC,CAAC;iBACD,KAAK,CAAC,UAAU,KAAK;gBACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,CAAC,CAAC;SACH;IAEH,CAAC;IAKD,QAAQ;IACR,CAAC;;8EA5QU,eAAe;+FAAf,eAAe;;QCf5B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,6EACI;QADkC,wRAAY,mBAAsB,IAAC;QAe/D,yEACM;QAAA,2EAAqG;QAAA,sEAAW;QAAA,4DAAQ;QACxH,yEACG;QAAA,+EAEA;QADA,4LAA4B;QAC5B,8EAAiB;QAAA,oEAAQ;QAAA,4DAAS;QAClC,oHAA+C;QAU/C,4DAAS;QACR,8GACI;QAEd,4DAAM;QACR,4DAAM;QACf,2EACI;QAAA,4EAAqG;QAAA,yEAAa;QAAA,4DAAQ;QAE1H,2EACI;QAAA,iFAGA;QAFI,8LAA8B;QADlC,4DAGA;QAAA,8GACI;QAER,4DAAM;QACb,4DAAM;QACN,0EACK;QAAA,2EACI;QAAA,8EAAyE;QAAA,+DAAG;QAAA,4DAAS;QACzF,4DAAM;QACX,4DAAM;QACP,4DAAO;QACP,4DAAM;QACT,4DAAM;QACP,4DAAM;QAGT,2EACI;QAAA,6EACI;QAAA,6EACI;QAAA,sEACI;QAAA,sEACI;QAAA,kEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,6EACP;QAAA,4DAAK;QACJ,sEACM;QAAA,mEACN;QAAA,4DAAK;QACL,sEACE;QAAA,qEACL;QAAA,4DAAK;QACJ,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,6GACI;QAQR,4DAAQ;QACZ,4DAAQ;QACX,4DAAM;QAEN,2MACG;;;;;QA1E2B,0DAA4B;QAA5B,uFAA4B;QAEpB,0DAAsC;QAAtC,sFAAsC;QAWxC,0DAAgE;QAAhE,2GAAgE;QAU9E,0DAA8B;QAA9B,yFAA8B;QAE7B,0DAAsE;QAAtE,2GAAsE;QAOpC,0DAA+B;QAA/B,iFAA+B;QAUlE,0DAAuB;QAAvB,oFAAuB;QAkB9B,2DAAgD;QAAhD,oFAAgD;;6FDnEnD,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC","file":"master-data-master-data-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { Router } from \"@angular/router\"\r\nimport { BaseServiceService } from '@app/services/base-service.service';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport { ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\ndeclare var $ :any;\r\nclass DataTablesResponse {\r\n  data: any[];\r\n  snippets: string = '';\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.scss']\r\n})\r\nexport class UserListComponent implements OnInit {\r\n  dtOptions: DataTables.Settings = {};\r\n  // We use this trigger because fetching the list of persons can be quite long,\r\n  // thus we ensure the data is fetched before rendering\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n  userListData: any;\r\n  temp:any;\r\n  selectedObj:any;\r\n  status: boolean = false ;\r\n  closeResult: string;\r\n  constructor(\r\n    private router: Router,\r\n    config: NgbModalConfig,\r\n     private modalService: NgbModal,\r\n    private http: HttpClient,\r\n    private baseService: BaseServiceService\r\n  ) {}\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      pageLength: 10\r\n    };\r\n\r\n  \r\n\r\n    // if(window.screen.width>= 360 || window.screen.height>=960 )\r\n    // {\r\n    //   this.status=false;\r\n    // }\r\n    this.getUserList();    \r\n    this.getScreen();\r\n  }\r\n\r\n getScreen()\r\n {\r\n  $(window).resize(function() {\r\n    console.log(window.screen.width+\"  \"+window.screen.height)\r\n    if(window.screen.width>=360 || window.screen.height>640 )\r\n    {\r\n      this.status=false;\r\n       console.log(\"If Block\");\r\n    }\r\n    else\r\n   {\r\n    this.status=true;\r\n    console.log(\"else Block\");\r\n   }\r\n});\r\n }\r\n\r\n\r\n  getUserList() {\r\n    axios.get(this.baseService.baseUrl + 'secure/users/active-user_data', {\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n    })\r\n      .then(response => {\r\n         console.log(response);\r\n         if(response.data.status)\r\n         {\r\n         this.userListData=response.data.data;\r\n         this.temp = this.userListData;\r\n\r\n         }\r\n         else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n         {\r\n           \r\n         }\r\n         else{\r\n           Swal.fire({\r\n             position: 'center',\r\n             icon: 'error',\r\n             title: response.data[\"message\"],\r\n             showConfirmButton: false,\r\n             timer: 3000\r\n         })\r\n       }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  ////////////EMail Split\r\n  emailSplit(email)\r\n  {\r\n   return email.split(\",\").join(\"\\n\");   \r\n  }\r\n\r\n  changeStatus(data) {\r\n    axios.post(this.baseService.baseUrl + 'secure/users/user_status',{_id:data._id,isActive:!data.isActive},{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n    })\r\n    .then(response => {        \r\n      console.log(response)\r\n      if (response.data.status) {\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: response.data[\"message\"],\r\n          showConfirmButton: false,\r\n          timer: 3000\r\n      })\r\n      // .then(() => {\r\n      //   location.reload(); });\r\n      this.getUserList();\r\n      }\r\n      else{\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'error',\r\n          title: response.data[\"message\"],\r\n          showConfirmButton: false,\r\n          timer: 3000\r\n      })\r\n       }\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n  // deleteUser(id)\r\n  // {\r\n  //   axios.delete(this.baseService.baseUrl + 'secure/users/user_status'+id,{\r\n  //     headers: {\r\n  //       'x-auth' : this.baseService.authToken\r\n  //     },\r\n  //   })\r\n  //   .then(response => {        \r\n  //     console.log(response)\r\n  //     if (response.data.status) {\r\n  //       Swal.fire({\r\n  //         position: 'center',\r\n  //         icon: 'success',\r\n  //         title: response.data[\"message\"],\r\n  //         showConfirmButton: false,\r\n  //         timer: 3000\r\n  //     }).then(() => {\r\n  //       location.reload(); });\r\n  //     }\r\n  //     else{\r\n  //       Swal.fire({\r\n  //         position: 'center',\r\n  //         icon: 'error',\r\n  //         title: response.data[\"message\"],\r\n  //         showConfirmButton: false,\r\n  //         timer: 3000\r\n  //     })\r\n  //      }\r\n  //   })\r\n  //   .catch(function (error) {\r\n  //     console.log(error)\r\n  //   })\r\n  // }\r\n\r\n  /////////Change Password\r\n  open(content,selObj) {\r\n    console.log(selObj);\r\n    this.selectedObj = selObj;\r\n    this.selectedObj.id=selObj._id;\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      console.log(\"LLLLLLL\",result);\r\n      axios.put(this.baseService.baseUrl + 'secure/users/changePassword',this.selectedObj,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n        \r\n      })\r\n        .then(response => {        \r\n          console.log(response)\r\n          if (response.data. status) {\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'success',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n          // .then(() => {\r\n          //   location.reload(); });\r\n          }\r\n          else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n          {\r\n            \r\n          }\r\n          else{\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'error',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n           }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error)\r\n        })\r\n    }, (reason) => {\r\n      console.log(\"OOOOOOOOOOo\",);\r\n      \r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n  deleteUser(id)\r\n  {\r\n    if(confirm(\"Are You Sure To Delete This Record\"))\r\n    {\r\n      axios.delete(this.baseService.baseUrl + 'secure/users/user_data/'+id,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      })\r\n      .then(response => {        \r\n        console.log(response)\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n        // .then(() => {\r\n        //   location.reload(); });\r\n        this.getUserList();\r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n    //////////Searching\r\n    updateFilter(event) {\r\n      console.log(event)\r\n          const val = event.target.value.toLowerCase();\r\n      \r\n          // filter our data\r\n          const temp = this.temp.filter(function(d) {\r\n            return d.name.toLowerCase().indexOf(val) !== -1 ||\r\n            d.email.toLowerCase().indexOf(val) !== -1 || !val\r\n      \r\n          });\r\n      \r\n          // update the rows\r\n          this.userListData = temp;\r\n          // Whenever the filter changes, always go back to the first page\r\n       \r\n        }\r\n      \r\n\r\n\r\n  p: number = 1;\r\n  pageChange(event){console.log(\"pageChanged\")}\r\n\r\n  editUser(id)\r\n  {\r\n    this.router.navigate(['/master/user-edit'],{queryParams: {id: id}})\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n}\r\n"," <div class=\"row mb-4\">\r\n     <div class=\"col-md-12 text-center mt-2\">\r\n        <h1 class=\"heading\">USER DETAILS</h1>\r\n     </div>\r\n </div>\r\n <div class=\"row mb-4\">\r\n  <div class=\"col-md-2  col-sm-12 ml-4 mr-4\">\r\n   <input type=\"text\" class=\"form-control form-control-sm\"  placeholder=\"Searching...\"   (keyup)=\"updateFilter($event)\">\r\n  </div>\r\n</div>\r\n     <div class=\"row\" >\r\n       <div class=\"col-md-12\">\r\n        <div class=\"card\"   *ngFor=\"let data of userListData  | paginate: { itemsPerPage: 10, currentPage: p };let i = index;\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"name\">\r\n                {{data.name}}\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <div class=\"switchbtn\" >\r\n                <div class=\"switchToggle\">\r\n                  <input type=\"checkbox\" (change)=\"changeStatus(data)\" [checked]=\"data.isActive\"  id=\"switch{{i}}\">\r\n                  <label for=\"switch{{i}}\"></label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n          </div>\r\n          \r\n        <div class=\"row d-flex\">\r\n           <div class=\"col-md-8  col-sm-8\">\r\n             <div class=\"\">{{emailSplit(data.email)}}</div>\r\n            </div>\r\n            <div class=\"col-md-3  col-sm-3 \">\r\n             <!-- <button class=\"btn btn-warning switchbtn\" >Edit</button> -->\r\n             <img  src=\"https://ticket-management.happimobiles.com/assets/images/icon/edit.png\"   height=\"30px\"  (click)=\"editUser(data._id)\"/>\r\n             <img  src=\"https://ticket-management.happimobiles.com/assets/images/icon/key.png\"   height=\"30px\"  (click)=\"open(content,data)\"/>\r\n             <img  src=\"https://ticket-management.happimobiles.com/assets/images/icon/delete.png\"  height=\"30px\"  (click)=\"deleteUser(data._id)\"/>\r\n          </div>\r\n           \r\n        </div>\r\n      </div>\r\n       </div>\r\n      \r\n     </div>\r\n       <div class=\"col-md-12 col-sm-12 col-xl-12\">\r\n                    <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\r\n       </div>\r\n    \r\n\r\n\r\n       <ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n        <div class=\"modal-header\">\r\n          <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Reset Password Of {{selectedObj.name}}</h4>\r\n          <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n             <form>\r\n                <div class=\"form-group\">\r\n                  <label for=\"recipient-name\" class=\"col-form-label\">New Password</label>\r\n                  <input type=\"text\" class=\"form-control\"  name='newPassword'\r\n                  [(ngModel)]=\"selectedObj.newPassword\" #newPassword=\"ngModel\" required>\r\n                </div>\r\n              </form>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c(selectedObj)\">Save</button>\r\n        </div>\r\n      </ng-template>\r\n             \r\n    ","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ModalDismissReasons, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { BaseServiceService } from '@app/services/base-service.service';\r\nimport Axios from 'axios';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\ndeclare var $:any;\r\n@Component({\r\n  selector: 'app-dept',\r\n  templateUrl: './dept.component.html',\r\n  styleUrls: ['./dept.component.scss']\r\n})\r\nexport class DeptComponent implements OnInit {\r\n  model: NgbDateStruct;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n  deptNames: any;\r\n  dept_name_edit:any='';\r\n  tableStatus:boolean=true;\r\n  dept:any={};\r\n  closeResult = '';\r\n  selectedFiles: FileList;\r\n  mainDeptNames:any;\r\n  convertedObj: any = '';\r\n  sel:boolean = false;\r\n  selectedObj:any = {};\r\n  selectedObj1:any = {};\r\n  constructor(private router: Router, private baseService: BaseServiceService,config: NgbModalConfig, private modalService: NgbModal) {     \r\n    this.getMainDept();\r\n    this.getDept();\r\n    \r\n\r\n  }\r\n  formSubmit() {\r\n   \r\n    Axios.post(\r\n      this.baseService.baseUrl + 'secure/department/add_dept', this.dept,\r\n      {\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      \r\n      })\r\n      .then(response => {\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        }).then(() => {\r\n          location.reload(); });\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n /////////Get Main Dept\r\n getMainDept() {\r\n  console.log(\"Dept\");\r\n  Axios.get(this.baseService.baseUrl + 'secure/mainDept/allMainDept',{\r\n    headers: {\r\n      'x-auth' : this.baseService.authToken\r\n    },\r\n    \r\n  })\r\n    .then(response => {        \r\n     \r\n      if (response.data.status) {\r\n        console.log(\"Issue List\");\r\n        this.mainDeptNames = response.data.data;\r\n      }\r\n      else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n      {\r\n        \r\n      }\r\n      else{\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'error',\r\n          title: response.data[\"message\"],\r\n          showConfirmButton: false,\r\n          timer: 3000\r\n      })\r\n       }\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error)\r\n    })\r\n}\r\n\r\n\r\n  getDept() {\r\n    console.log(\"Dept\");\r\n    Axios.get(this.baseService.baseUrl + 'secure/department/get_dept',{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n      \r\n    })\r\n      .then(response => {        \r\n       \r\n        if (response.data.status) {\r\n          console.log(\"Issue List\");\r\n          this.deptNames = response.data.data;\r\n          console.log(this.deptNames);\r\n          console.log(response.data);\r\n          if(this.tableStatus)\r\n          {\r\n            this.dtTrigger.next();\r\n            this.tableStatus=false;\r\n          }\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  open(content,selObj) {\r\n    console.log(selObj);\r\n    this.selectedObj = selObj;\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      console.log(\"LLLLLLL\",result);\r\n      Axios.put(this.baseService.baseUrl + 'secure/department/update_dept/'+result._id,result,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n        \r\n      })\r\n        .then(response => {        \r\n          console.log(response)\r\n          if (response.data. status) {\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'success',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n          this.getDept();\r\n          }\r\n          else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n          {\r\n            \r\n          }\r\n          else{\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'error',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n           }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error)\r\n        })\r\n    }, (reason) => {\r\n      console.log(\"OOOOOOOOOOo\",);\r\n      \r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n  /////////Main Dept\r\n\r\n  openDept(content) {\r\n    // console.log(selObj);\r\n    // this.selectedObj = selObj;\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      console.log(\"LLLLLLL\",result);\r\n      Axios.post(this.baseService.baseUrl + 'secure/mainDept/addMainDept',this.selectedObj1,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n        \r\n      })\r\n        .then(response => {        \r\n          console.log(response)\r\n          if (response.data.status) {\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'success',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n          this.getMainDept();\r\n          }\r\n          else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n          {\r\n            \r\n          }\r\n          else{\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'error',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n           }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error)\r\n        })\r\n    }, (reason) => {\r\n      console.log(\"OOOOOOOOOOo\",);\r\n      \r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n\r\n\r\n  deleteDept(id)\r\n  {\r\n    if(confirm(\"Are You Sure To Delete This Record\"))\r\n    {\r\n    Axios.delete(this.baseService.baseUrl + 'secure/department/delete_dept/'+id,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      })\r\n      .then(response => {        \r\n        console.log(response)\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n        // .then(() => {\r\n        //   location.reload(); });\r\n        this.getDept();\r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  convert(objArray){\r\n    // console.log(objArray);\r\n    this.sel = true;\r\n    this.convertedObj = JSON.stringify(objArray, null, 2);\r\n   }\r\n   onError(err){\r\n     console.log(err);\r\n     this.convertedObj = err;\r\n    //  this.toaster.error(err)\r\n   }\r\n\r\n   save() {\r\n    let finalObj = JSON.parse(this.convertedObj);\r\n    console.log(finalObj);\r\n    Axios.post(this.baseService.baseUrl + 'secure/department/csv', finalObj,{\r\n\t\t  headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n\t\t})\r\n\t\t\t.then(response => {\r\n      console.log(response);\r\n\t       if(response.data.status){\r\n\t\t\t  //  this.toaster.success(response.data.message)\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: response.data[\"message\"],\r\n          showConfirmButton: false,\r\n          timer: 3000\r\n      })\r\n\t\t   }else {\r\n\t\t\t    // this.toaster.error(response.data.message)\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n\t\t   }\r\n\t\t\t   \r\n\t\t\t   \r\n\t\t\t}).catch(function (error) {\r\n\t\t\t\t// handle error\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t})\r\n\t\t\t.finally(function () {\r\n\t\t\t\t// always executed\r\n\t\t\t});\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    \r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      pageLength: 10\r\n    };\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <button class=\"btn btn-warning\" style=\"float: right;margin-bottom:5px;\" (click)=\"openDept(contentOne)\">+ Department</button>  \r\n    <div class=\"card col-md-6 float-center\">\r\n        <div class=\"card-body\">\r\n            <form #deptForm='ngForm' novalidate (ngSubmit)=\"formSubmit()\">\r\n              <div class=\"form-group form-row\">\r\n                <label class=\"col-md-4 col-sm-12 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Department Name</label>\r\n         \r\n                <div class=\"col-md-6 col-sm-12 mb-3\">\r\n                   <select   class=\"form-control\" name='mainDeptName'\r\n                   [(ngModel)]=\"dept.mainDeptName\" #mainDeptName=\"ngModel\" required>\r\n                     <option value=\"\">-Select-</option>\r\n                     <option *ngFor=\"let mainDept of mainDeptNames\">{{mainDept?.mainDeptName}}</option>\r\n                     <!-- <option>IT</option>\r\n                     <option>Finance</option> \r\n                     <option>Projects</option>\r\n                     <option>SCM</option>\r\n                     <option>HR</option>\r\n                     <option>Marketing</option>\r\n                     <option>Sales</option>\r\n                     <option>Call Center</option> -->\r\n                   </select>\r\n                    <div *ngIf=\"mainDeptName.invalid && (mainDeptName.dirty || mainDeptName.touched)\" class=\"form-text text-danger\">\r\n                        <div *ngIf=\"mainDeptName.errors.required\"> Department Name is required. </div>\r\n                    </div>\r\n                </div>\r\n          </div>  \r\n           <div class=\"form-group form-row\">\r\n               <label class=\"col-md-4 col-sm-12 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Designation Name</label>\r\n        \r\n               <div class=\"col-md-6 col-sm-12 mb-3\">\r\n                   <input type=\"text\" class=\"form-control form-control-sm\"  name='dept_name'\r\n                       [(ngModel)]=\"dept.dept_name\" #dept_name=\"ngModel\" required>\r\n       \r\n                   <div *ngIf=\"dept_name.invalid && (dept_name.dirty || dept_name.touched)\" class=\"form-text text-danger\">\r\n                       <div *ngIf=\"dept_name.errors.required\"> Designation is required. </div>\r\n                   </div>\r\n               </div>\r\n         </div>\r\n         <div class=\"form-group form-row\">\r\n          <label class=\"col-md-4 col-sm-4 col-form-label text-sm-right\" for=\"normal-input-1\">Super Admin</label>\r\n   \r\n          <div class=\"col-md-4 col-sm-4 mb-3\">\r\n              <input type=\"checkbox\" class=\"form-control form-control-sm\"  name='isSuperAdmin'\r\n                  [(ngModel)]=\"dept.isSuperAdmin\" #isSuperAdmin=\"ngModel\">\r\n          </div>\r\n    </div>\r\n         <div class=\"form-group form-row\">\r\n          <label class=\"col-md-4 col-sm-4 col-form-label text-sm-right\" for=\"normal-input-1\">Admin</label>\r\n   \r\n          <div class=\"col-md-4 col-sm-4 mb-3\">\r\n              <input type=\"checkbox\" class=\"form-control form-control-sm\"  name='isAdmin'\r\n                  [(ngModel)]=\"dept.isAdmin\" #isAdmin=\"ngModel\">\r\n          </div>\r\n    </div>\r\n    <div class=\"form-group form-row\">\r\n      <label class=\"col-md-4 col-sm-4 col-form-label text-sm-right\" for=\"normal-input-1\">Ticket Allocator</label>\r\n\r\n      <div class=\"col-md-4 col-sm-4 mb-3\">\r\n          <input type=\"checkbox\" class=\"form-control form-control-sm\"  name='ticketAllocator'\r\n              [(ngModel)]=\"dept.ticketAllocator\" #ticketAllocator=\"ngModel\">\r\n      </div>\r\n</div>\r\n<div class=\"form-group form-row\">\r\n  <label class=\"col-md-4 col-sm-4 col-form-label text-sm-right\" for=\"normal-input-1\">User</label>\r\n\r\n  <div class=\"col-md-4 col-sm-4 mb-3\">\r\n      <input type=\"checkbox\" class=\"form-control form-control-sm\"  name='isUser'\r\n          [(ngModel)]=\"dept.isUser\" #isUser=\"ngModel\">\r\n  </div>\r\n</div>\r\n        <div class=\"row mb-2\">\r\n             <div class=\"col-md-12 \">\r\n                 <button class=\"btn btn-primary\" style=\"margin-left:40%;\" [disabled]=\"deptForm.invalid\">Add</button>\r\n             </div>\r\n        </div>\r\n       </form>\r\n       <div class=\"row\">\r\n        <div class=\"col-md-8 mb-2\">\r\n          <Ngx-CSVtoJSON (onConvert)=\"convert($event)\" (onFail)=\"onError($event)\"></Ngx-CSVtoJSON>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n          <button class=\"btn btn-primary\"  style=\"margin-left:40%;\"  (click)=\"save()\"  [disabled]=\"!sel\">Submit</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n   </div>\r\n\r\n   \r\n<div class=\"table-responsive\">\r\n    <table datatable   [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover\" class=\"table table-bordered table-striped\">\r\n        <thead style=\"background-color:#fb9013\">\r\n            <tr>\r\n                <th>\r\n                    S NO\r\n                </th>\r\n                <th>\r\n                    Department Name\r\n             </th>\r\n             <th>\r\n                    Create Date\r\n              </th>\r\n              <th>\r\n                   Actions\r\n              </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let dept of deptNames;let i = index;\">\r\n                <td>{{i+1}}</td>\r\n                <td>{{dept?.dept_name}}</td>\r\n                <td>{{dept?.creationDate | date: 'dd/MM/yyyy'}}</td>\r\n                <td>\r\n                    <img  src=\"assets/images/icon/edit.png\" class=\"switchbtn\"  height=\"30px\"  (click)=\"open(content,dept)\"/>\r\n                    <img  src=\"assets/images/icon/delete.png\" class=\"switchbtn\"  height=\"30px\"  (click)=\"deleteDept(dept._id)\"/>  \r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n </div> \r\n\r\n\r\n<!-- <button class=\"btn btn-lg btn-outline-primary\" (click)=\"open(content)\">Launch demo modal</button> -->\r\n  \r\n <ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n    <div class=\"modal-header\">\r\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">Department</h4>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n         <form>\r\n                <div class=\"form-group form-row\">\r\n                <label class=\"col-md-12 col-sm-12 col-form-label col-form-label-sm text-sm-left\" for=\"normal-input-1\">Department Name</label>\r\n         \r\n                <div class=\"col-md-12 col-sm-12 mb-3\">\r\n                   <select   class=\"form-control\" name='mainDeptName'\r\n                   [(ngModel)]=\"selectedObj.mainDeptName\" #mainDeptName=\"ngModel\" required>\r\n                     <option value=\"\">-Select-</option>\r\n                     <option *ngFor=\"let mainDept of mainDeptNames\">{{mainDept?.mainDeptName}}</option>\r\n                     <!-- <option>Finance</option> \r\n                     <option>Projects</option>\r\n                     <option>SCM</option>\r\n                     <option>HR</option>\r\n                     <option>Marketing</option>\r\n                     <option>Sales</option>\r\n                     <option>Call Center</option> -->\r\n                   </select>\r\n                    <div *ngIf=\"mainDeptName.invalid && (mainDeptName.dirty || mainDeptName.touched)\" class=\"form-text text-danger\">\r\n                        <div *ngIf=\"mainDeptName.errors.required\"> Department Name is required. </div>\r\n                    </div>\r\n                </div>\r\n          </div>  \r\n            <div class=\"form-group form-row mb-2\">\r\n              <label for=\"recipient-name\" class=\"col-form-label\">Designation Name</label>\r\n              <input type=\"text\" class=\"form-control\"  name='dept_name'\r\n              [(ngModel)]=\"selectedObj.dept_name\" required>\r\n            </div>\r\n            <div class=\"form-group form-row\">\r\n              <label class=\"col-md-4 col-sm-4 col-form-label text-sm-right\" for=\"normal-input-1\">Super Admin</label>\r\n       \r\n              <div class=\"col-md-4 col-sm-4 mb-3\">\r\n                  <input type=\"checkbox\" class=\"form-control form-control-sm\"  name='isSuperAdmin'\r\n                      [(ngModel)]=\"selectedObj.isSuperAdmin\" #isSuperAdmin=\"ngModel\">\r\n              </div>\r\n        </div>\r\n            <div class=\"form-group form-row mb-2\">\r\n              <label class=\"col-md-4 col-sm-4 col-form-label text-sm-right\" for=\"normal-input-1\">Admin</label>\r\n       \r\n              <div class=\"col-md-4 col-sm-4 mb-3\">\r\n                  <input type=\"checkbox\" class=\"form-control form-control-sm\"  name='isAdmin'\r\n                      [(ngModel)]=\"selectedObj.isAdmin\"  #isAdmin=\"ngModel\">\r\n              </div>\r\n        </div>\r\n        <div class=\"form-group form-row\">\r\n          <label class=\"col-md-4 col-sm-4 col-form-label text-sm-right\" for=\"normal-input-1\">Ticket Allocator</label>\r\n    \r\n          <div class=\"col-md-4 col-sm-4 mb-3\">\r\n              <input type=\"checkbox\" class=\"form-control form-control-sm\"  name='ticketAllocator'\r\n                  [(ngModel)]=\"selectedObj.ticketAllocator\" #ticketAllocator=\"ngModel\">\r\n          </div>\r\n    </div>\r\n    <div class=\"form-group form-row\">\r\n      <label class=\"col-md-4 col-sm-4 col-form-label text-sm-right\" for=\"normal-input-1\">User</label>\r\n    \r\n      <div class=\"col-md-4 col-sm-4 mb-3\">\r\n          <input type=\"checkbox\" class=\"form-control form-control-sm\"  name='isUser'\r\n              [(ngModel)]=\"selectedObj.isUser\" #isUser=\"ngModel\">\r\n      </div>\r\n    </div>\r\n          </form>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c(selectedObj)\">Save</button>\r\n    </div>\r\n  </ng-template>\r\n  \r\n  <!---Add New Designation-->\r\n    \r\n <ng-template #contentOne let-c=\"close\" let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Department</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n       <form>\r\n          <div class=\"form-group form-row mb-2\">\r\n            <label for=\"recipient-name\" class=\"col-form-label\">Department Name</label>\r\n            <input type=\"text\" class=\"form-control\"  name='mainDeptName'\r\n            [(ngModel)]=\"selectedObj1.mainDeptName\" required>\r\n            <!-- <div *ngIf=\"mainDeptName.invalid && (mainDeptName.dirty || mainDeptName.touched)\" class=\"form-text text-danger\">\r\n              <div *ngIf=\"mainDeptName.errors.required\"> Designation Name is required. </div>\r\n          </div> -->\r\n          </div>\r\n\r\n        </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c(selectedObj)\">Add</button>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ModalDismissReasons, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BaseServiceService } from '@app/services/base-service.service';\r\nimport Axios from 'axios';\r\nimport { Subject } from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-tags',\r\n  templateUrl: './tags.component.html',\r\n  styleUrls: ['./tags.component.scss']\r\n})\r\nexport class TagsComponent implements OnInit {\r\n  model: NgbDateStruct;\r\n  dtOptions: DataTables.Settings = {};\r\n  closeResult = '';\r\n  selectedObj:any = {};\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n  tag:any={}\r\n  tagNames: any=[];\r\n  constructor(private router: Router, private baseService: BaseServiceService,config: NgbModalConfig, private modalService: NgbModal) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      pageLength: 10\r\n    };\r\n   this.getTags(); \r\n  }\r\n\r\n  formSubmit(form:NgForm) {\r\n   console.log(this.baseService.authToken)\r\n    Axios.post(\r\n      this.baseService.baseUrl + 'secure/tags/addTag_Name', this.tag,\r\n      {\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      })\r\n      .then(response => {\r\n        console.log(response);\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n        // .then(() => {\r\n        //   location.reload();  });  //\r\n        form.resetForm('');\r\n        this.getTags();\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n  getTags() {\r\n    Axios.get(this.baseService.baseUrl + 'secure/tags/allTags',{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n      \r\n    })\r\n      .then(response => {        \r\n        if (response.data.status) {\r\n          this.tagNames = response.data.data;\r\n          console.log(this.tagNames);\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  open(content,selObj) {\r\n    console.log(selObj);\r\n    this.selectedObj = selObj;\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      console.log(\"LLLLLLL\",result);\r\n      Axios.put(this.baseService.baseUrl + 'secure/tags/update_tags/'+result._id,result,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n        \r\n      })\r\n        .then(response => {        \r\n          console.log(response)\r\n          if (response.data. status) {\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'success',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n          // .then(() => {\r\n          //   location.reload(); });\r\n          this.getTags();\r\n          }\r\n          else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n          {\r\n            \r\n          }\r\n          else{\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'error',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n           }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error)\r\n        })\r\n    }, (reason) => {\r\n      console.log(\"OOOOOOOOOOo\",);\r\n      \r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n\r\n  deleteDept(id)\r\n  {\r\n    if(confirm(\"Are You Sure To Delete This Record\"))\r\n    {\r\n    Axios.delete(this.baseService.baseUrl + 'secure/tags/delete_tags/'+id,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      })\r\n      .then(response => {        \r\n        console.log(response)\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n        // .then(() => {\r\n        //   location.reload(); });\r\n        this.getTags();\r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n <div class=\"card col-md-6 float-center\">\r\n     <div class=\"card-body\">\r\n         <form #TagForm='ngForm' novalidate (ngSubmit)=\"formSubmit(TagForm)\">\r\n        <div class=\"form-group form-row\">\r\n            <label class=\"col-md-4 col-sm-4 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Tag Name</label>\r\n     \r\n            <div class=\"col-md-6 col-sm-8 mb-3\">\r\n                <input type=\"text\" class=\"form-control form-control-sm\"  name='tag_name'\r\n                    [(ngModel)]=\"tag.tag_name\" #tag_name=\"ngModel\" required>\r\n    \r\n                <div *ngIf=\"tag_name.invalid && (tag_name.dirty || tag_name.touched)\" class=\"form-text text-danger\">\r\n                    <div *ngIf=\"tag_name.errors.required\"> Tag Name is required. </div>\r\n                </div>\r\n            </div>\r\n     </div>\r\n     <div class=\"row\">\r\n          <div class=\"col-md-12\">\r\n              <button class=\"btn btn-primary offset-4\">Add</button>\r\n          </div>\r\n     </div>\r\n    </form>\r\n </div>\r\n</div>\r\n\r\n<div class=\"table-responsive\">\r\n   <table datatable   [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover\" class=\"table table-bordered table-striped\">\r\n       <thead style=\"background-color:#fb9013\">\r\n           <tr>\r\n               <th>\r\n                   S NO\r\n               </th>\r\n               <th>\r\n                   Tag Name\r\n            </th>\r\n            <th>\r\n                   Create Date\r\n             </th>\r\n             <th>\r\n                Actions\r\n           </th>\r\n           </tr>\r\n       </thead>\r\n       <tbody>\r\n           <tr *ngFor=\"let tag of tagNames;let i = index;\">\r\n               <td>{{i+1}}</td>\r\n               <td>{{tag?.tag_name}}</td>\r\n               <td>{{tag?.creationDate | date: 'dd/MM/yyyy'}}</td>\r\n               <td>\r\n                <img  src=\"assets/images/icon/edit.png\" class=\"switchbtn\"  height=\"30px\"  (click)=\"open(content,tag)\"/>\r\n                <img  src=\"assets/images/icon/delete.png\" class=\"switchbtn\"  height=\"30px\"  (click)=\"deleteDept(tag._id)\"/>  \r\n            </td>\r\n           </tr>\r\n       </tbody>\r\n   </table>\r\n</div> \r\n\r\n<ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n    <div class=\"modal-header\">\r\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">Tags</h4>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n         <form>\r\n            <div class=\"form-group\">\r\n              <label for=\"recipient-name\" class=\"col-form-label\">Department Name</label>\r\n              <input type=\"text\" class=\"form-control\"  name='tag_name'\r\n              [(ngModel)]=\"selectedObj.tag_name\" required>\r\n            </div>\r\n          </form>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c(selectedObj)\">Save</button>\r\n    </div>\r\n  </ng-template>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ModalDismissReasons, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BaseServiceService } from '@app/services/base-service.service';\r\nimport Axios from 'axios';\r\nimport { Subject } from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-status',\r\n  templateUrl: './status.component.html',\r\n  styleUrls: ['./status.component.scss']\r\n})\r\nexport class StatusComponent implements OnInit {\r\n  model: NgbDateStruct;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n  status:any={}\r\n  statusNames: any;\r\n  tableStatus:boolean=true;\r\n  closeResult = '';\r\n  selectedObj:any = {};\r\n  constructor(private router: Router, private baseService: BaseServiceService,config: NgbModalConfig, private modalService: NgbModal) { \r\n    this.getStatusNames();\r\n  }\r\n\r\n  formSubmit(form:NgForm) {\r\n   \r\n    Axios.post(\r\n      this.baseService.baseUrl + 'secure/status/addStatus', this.status,\r\n      {\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      })\r\n      .then(response => {\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n        // .then(() => {\r\n        //   location.reload(); });\r\n         form.resetForm('');\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  getStatusNames() {\r\n    Axios.get(this.baseService.baseUrl + 'secure/status/allStatus',{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n    })\r\n      .then(response => { \r\n        if (response.data.status) {\r\n          this.statusNames = response.data.data;\r\n          console.log(this.statusNames);\r\n          console.log(response.data);\r\n          if(this.tableStatus)\r\n          {\r\n            this.tableStatus=false;\r\n          this.dtTrigger.next();\r\n          }\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      }) \r\n  }\r\n\r\n  open(content,selObj) {\r\n    console.log(selObj);\r\n    this.selectedObj = selObj;\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      console.log(\"LLLLLLL\",result);\r\n      Axios.put(this.baseService.baseUrl + 'secure/status/update_status/'+result._id,result,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n        \r\n      })\r\n        .then(response => {        \r\n          console.log(response)\r\n          if (response.data. status) {\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'success',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n          // .then(() => {\r\n          //   location.reload(); });\r\n          this.getStatusNames();\r\n          }\r\n          else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n          {\r\n            \r\n          }\r\n          else{\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'error',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n           }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error)\r\n        })\r\n    }, (reason) => {\r\n      console.log(\"OOOOOOOOOOo\",);\r\n      \r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n\r\n  deleteDept(id)\r\n  {\r\n    if(confirm(\"Are You Sure To Delete This Record\"))\r\n    {\r\n    Axios.delete(this.baseService.baseUrl + 'secure/status/delete_status/'+id,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      })\r\n      .then(response => {        \r\n        console.log(response)\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n        // .then(() => {\r\n        //   location.reload(); });\r\n        this.getStatusNames();\r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n    }\r\n  }\r\n  \r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"card col-md-6 float-center\">\r\n        <div class=\"card-body\">\r\n            <form #statusForm='ngForm' novalidate (ngSubmit)=\"formSubmit(statusForm)\">\r\n           <div class=\"form-group form-row\">\r\n               <label class=\"col-md-4 col-sm-4 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Status Name</label>\r\n        \r\n               <div class=\"col-md-6 col-sm-8 mb-3\">\r\n                   <input type=\"text\" class=\"form-control form-control-sm\"  name='status_name'\r\n                       [(ngModel)]=\"status.status_name\" #status_name=\"ngModel\" required>\r\n       \r\n                   <div *ngIf=\"status_name.invalid && (status_name.dirty || status_name.touched)\" class=\"form-text text-danger\">\r\n                       <div *ngIf=\"status_name.errors.required\"> status Name is required. </div>\r\n                   </div>\r\n               </div>\r\n        </div>\r\n        <div class=\"row\">\r\n             <div class=\"col-md-12\">\r\n                 <button class=\"btn btn-primary offset-4\" [disabled]=\"statusForm.invalid\">Add</button>\r\n             </div>\r\n        </div>\r\n       </form>\r\n    </div>\r\n   </div>\r\n\r\n   \r\n<div class=\"table-responsive\">\r\n    <table datatable   [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover\" class=\"table table-bordered table-striped\">\r\n        <thead style=\"background-color:#fb9013;\">\r\n            <tr>\r\n                <th>\r\n                    S NO\r\n                </th>\r\n                <th>\r\n                    Status Name\r\n             </th>\r\n             <th>\r\n                    Create Date\r\n              </th>\r\n              <th>\r\n                Actions\r\n           </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let status of statusNames;let i = index;\">\r\n                <td>{{i+1}}</td>\r\n                <td>{{status?.status_name}}</td>\r\n                <td>{{status?.creationDate | date: 'dd/MM/yyyy'}}</td>\r\n                <td>\r\n                    <img  src=\"assets/images/icon/edit.png\" class=\"switchbtn\"  height=\"30px\"  (click)=\"open(content , status)\"/>\r\n                    <img  src=\"assets/images/icon/delete.png\" class=\"switchbtn\"  height=\"30px\"  (click)=\"deleteDept(status._id)\"/>  \r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n\r\n    <ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n        <div class=\"modal-header\">\r\n          <h4 class=\"modal-title\" id=\"modal-basic-title\">Status</h4>\r\n          <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n             <form>\r\n                <div class=\"form-group\">\r\n                  <label for=\"recipient-name\" class=\"col-form-label\">Status Name</label>\r\n                  <input type=\"text\" class=\"form-control\"  name='status_name'\r\n                  [(ngModel)]=\"selectedObj.status_name\" required>\r\n                </div>\r\n              </form>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c(selectedObj)\">Save</button>\r\n        </div>\r\n      </ng-template>\r\n\r\n </div> ","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-sign-out',\r\n  templateUrl: './sign-out.component.html',\r\n  styleUrls: ['./sign-out.component.scss']\r\n})\r\nexport class SignOutComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { \r\n    if(confirm(\"Do You Want Sign Out\"))\r\n    {\r\n        window.localStorage.clear();\r\n       this.router.navigate(['/signin'])\r\n    }\r\n    else\r\n    {\r\n      \r\n      this.router.navigate(['/ticket/ticket-list'])\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>sign-out works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { Router } from \"@angular/router\"\r\nimport { BaseServiceService } from '@app/services/base-service.service';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\ndeclare var $ :any;\r\n\r\n@Component({\r\n  selector: 'app-inactive-userlist',\r\n  templateUrl: './inactive-userlist.component.html',\r\n  styleUrls: ['./inactive-userlist.component.scss']\r\n})\r\nexport class InactiveUserlistComponent implements OnInit {\r\n  userListData: any;\r\n  status: boolean = false ;\r\n  temp:any;\r\n  constructor(\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private baseService: BaseServiceService\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getUserList();    \r\n    this.getScreen();\r\n  }\r\n\r\n  getScreen()\r\n {\r\n  $(window).resize(function() {\r\n    console.log(window.screen.width+\"  \"+window.screen.height)\r\n    if(window.screen.width>=360 || window.screen.height>640 )\r\n    {\r\n      this.status=false;\r\n       console.log(\"If Block\");\r\n    }\r\n    else\r\n   {\r\n    this.status=true;\r\n    console.log(\"else Block\");\r\n   }\r\n});\r\n }\r\n\r\n\r\n  getUserList() {\r\n    axios.get(this.baseService.baseUrl + 'secure/users/inactive-user_data', {\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n    })\r\n      .then(response => {\r\n         console.log(response);\r\n         if(response.data.status)\r\n         {\r\n         this.userListData=response.data.data;\r\n         this.temp = this.userListData;\r\n         }\r\n         else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n         {\r\n           \r\n         }\r\n         else{\r\n           Swal.fire({\r\n             position: 'center',\r\n             icon: 'error',\r\n             title: response.data[\"message\"],\r\n             showConfirmButton: false,\r\n             timer: 3000\r\n         })\r\n       }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  changeStatus(data) {\r\n    axios.post(this.baseService.baseUrl + 'secure/users/user_status',{_id:data._id,isActive:!data.isActive},{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n    })\r\n    .then(response => {        \r\n      console.log(response)\r\n      if (response.data.status) {\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: response.data[\"message\"],\r\n          showConfirmButton: false,\r\n          timer: 3000\r\n      })\r\n      // .then(() => {\r\n      //   location.reload(); });\r\n      this.getUserList();\r\n      }\r\n      else{\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'error',\r\n          title: response.data[\"message\"],\r\n          showConfirmButton: false,\r\n          timer: 3000\r\n      })\r\n       }\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n  // deleteUser(id)\r\n  // {\r\n  //   axios.delete(this.baseService.baseUrl + 'secure/users/user_status'+id,{\r\n  //     headers: {\r\n  //       'x-auth' : this.baseService.authToken\r\n  //     },\r\n  //   })\r\n  //   .then(response => {        \r\n  //     console.log(response)\r\n  //     if (response.data.status) {\r\n  //       Swal.fire({\r\n  //         position: 'center',\r\n  //         icon: 'success',\r\n  //         title: response.data[\"message\"],\r\n  //         showConfirmButton: false,\r\n  //         timer: 3000\r\n  //     }).then(() => {\r\n  //       location.reload(); });\r\n  //     }\r\n  //     else{\r\n  //       Swal.fire({\r\n  //         position: 'center',\r\n  //         icon: 'error',\r\n  //         title: response.data[\"message\"],\r\n  //         showConfirmButton: false,\r\n  //         timer: 3000\r\n  //     })\r\n  //      }\r\n  //   })\r\n  //   .catch(function (error) {\r\n  //     console.log(error)\r\n  //   })\r\n  // }\r\n\r\n  deleteUser(id)\r\n  {\r\n    if(confirm(\"Are You Sure To Delete This Record\"))\r\n    {\r\n      axios.delete(this.baseService.baseUrl + 'secure/users/user_data/'+id,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      })\r\n      .then(response => {        \r\n        console.log(response)\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n        // .then(() => {\r\n        //   location.reload(); });\r\n        this.getUserList();\r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  //////////Searching\r\n  updateFilter(event) {\r\nconsole.log(event)\r\n    const val = event.target.value.toLowerCase();\r\n\r\n    // filter our data\r\n    const temp = this.temp.filter(function(d) {\r\n      return d.name.toLowerCase().indexOf(val) !== -1 ||\r\n      d.email.toLowerCase().indexOf(val) !== -1 || !val\r\n\r\n    });\r\n\r\n    // update the rows\r\n    this.userListData = temp;\r\n    // Whenever the filter changes, always go back to the first page\r\n \r\n  }\r\n\r\n\r\n  p: number = 1;\r\n  pageChange(event){console.log(\"pageChanged\")}\r\n\r\n  editUser(id)\r\n  {\r\n    this.router.navigate(['/master/user-edit'],{queryParams: {id: id}})\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"row mb-4\">\r\n    <div class=\"col-md-12 text-center mt-2\">\r\n       <h1 class=\"heading\">IN ACTIVE USER DETAILS</h1>\r\n    </div>\r\n</div>\r\n<div class=\"row mb-4\">\r\n   <div class=\"col-md-2  col-sm-12 ml-4 mr-4\">\r\n    <input type=\"text\" class=\"form-control form-control-sm\"  placeholder=\"Searching...\"   (keyup)=\"updateFilter($event)\">\r\n   </div>\r\n</div>\r\n    <div class=\"row\" >\r\n      <div class=\"col-md-12\">\r\n       <div class=\"card\"   *ngFor=\"let data of userListData  | paginate: { itemsPerPage: 10, currentPage: p };let i = index;\">\r\n         <div class=\"row\">\r\n           <div class=\"col-md-6\">\r\n             <div class=\"name\">\r\n               {{data.name}}\r\n             </div>\r\n           </div>\r\n           <div class=\"col-md-6\">\r\n             <div class=\"switchbtn\" >\r\n               <div class=\"switchToggle\">\r\n                 <input type=\"checkbox\" (change)=\"changeStatus(data)\" [checked]=\"data.isActive\"  id=\"switch{{i}}\">\r\n                 <label for=\"switch{{i}}\"></label>\r\n               </div>\r\n             </div>\r\n           </div>\r\n           \r\n         </div>\r\n         \r\n       <div class=\"row d-flex\">\r\n          <div class=\"col-md-8  col-sm-8 \">\r\n            <div class=\"m-2\">{{data.email}}</div>\r\n           </div>\r\n           <div class=\"col-md-3  col-sm-3\">\r\n            <!-- <button class=\"btn btn-warning switchbtn\" >Edit</button> -->\r\n            <img  src=\"https://ticket-management.happimobiles.com/assets/images/icon/edit.png\"   height=\"30px\"  (click)=\"editUser(data._id)\"/>\r\n            <img  src=\"https://ticket-management.happimobiles.com/assets/images/icon/delete.png\"  height=\"30px\"  (click)=\"deleteUser(data._id)\"/>\r\n         </div>\r\n          \r\n       </div>\r\n     </div>\r\n      </div>\r\n     \r\n    </div>\r\n      <div class=\"col-md-12 col-sm-12 col-xl-12\">\r\n                   <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\r\n      </div>\r\n   \r\n   ","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ModalDismissReasons, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BaseServiceService } from '@app/services/base-service.service';\r\nimport Axios from 'axios';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Subject } from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\nimport { NgForm } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-store',\r\n  templateUrl: './store.component.html',\r\n  styleUrls: ['./store.component.scss']\r\n})\r\nexport class StoreComponent implements OnInit {\r\n  model: NgbDateStruct;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n  store:any={}\r\n  storeNames: any;\r\n  tableStatus:boolean=true;\r\n  closeResult = '';\r\n  selectedObj:any = {};\r\n  constructor(private router: Router, private baseService: BaseServiceService,config: NgbModalConfig, private modalService: NgbModal) {\r\n    this.getStoreNames();\r\n  }\r\n\r\n  formSubmit(form:NgForm) {\r\n   \r\n    Axios.post(\r\n      this.baseService.baseUrl + 'secure/store/addStore', this.store,\r\n      {\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      })\r\n      .then(response => {\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n        // .then(() => {\r\n        //   location.reload(); }); \r\n        form.resetForm(\"\");\r\n        this.getStoreNames();\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  getStoreNames() {\r\n    Axios.get(this.baseService.baseUrl + 'secure/store/allStore',{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n    })\r\n      .then(response => { \r\n        if (response.data.status) {\r\n          this.storeNames = response.data.data;\r\n          console.log(this.storeNames);\r\n          console.log(response.data);\r\n          if(this.tableStatus)\r\n          {\r\n            this.dtTrigger.next();\r\n            this.tableStatus=false;\r\n          }\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  open(content,selObj) {\r\n    console.log(selObj);\r\n    this.selectedObj = selObj;\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      console.log(\"LLLLLLL\",result);\r\n      Axios.put(this.baseService.baseUrl + 'secure/store/update_store/'+result._id,result,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n        \r\n      })\r\n        .then(response => {        \r\n          console.log(response)\r\n          if (response.data. status) {\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'success',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n          // .then(() => {\r\n            // location.reload(); });\r\n            this.getStoreNames();\r\n          }\r\n          else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n          {\r\n            \r\n          }\r\n          else{\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'error',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n           }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error)\r\n        })\r\n    }, (reason) => {\r\n      console.log(\"OOOOOOOOOOo\",);\r\n      \r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n\r\n  deleteDept(id)\r\n  {\r\n    if(confirm(\"Are You Sure To Delete This Record\"))\r\n    {\r\n    Axios.delete(this.baseService.baseUrl + 'secure/store/delete_store/'+id,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      })\r\n      .then(response => {        \r\n        console.log(response)\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n        // .then(() => {\r\n        //   location.reload(); });\r\n        this.getStoreNames();\r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  \r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"card col-md-6 float-center\">\r\n        <div class=\"card-body\">\r\n            <form #statusForm='ngForm' novalidate (ngSubmit)=\"formSubmit(statusForm)\">\r\n           <div class=\"form-group form-row\">\r\n               <label class=\"col-md-4 col-sm-4 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Store Name</label>\r\n        \r\n               <div class=\"col-md-6 col-sm-8 mb-3\">\r\n                   <input type=\"text\" class=\"form-control form-control-sm\"  name='store_name'\r\n                       [(ngModel)]=\"store.store_name\" #store_name=\"ngModel\" required>\r\n       \r\n                   <div *ngIf=\"store_name.invalid && (store_name.dirty || store_name.touched)\" class=\"form-text text-danger\">\r\n                       <div *ngIf=\"store_name.errors.required\"> Store Name is required. </div>\r\n                   </div>\r\n               </div>\r\n        </div>\r\n        <div class=\"row\">\r\n             <div class=\"col-md-12\">\r\n                 <button class=\"btn btn-primary offset-4\" [disabled]=\"statusForm.invalid\">Add</button>\r\n             </div>\r\n        </div>\r\n       </form>\r\n    </div>\r\n   </div>\r\n\r\n   \r\n<div class=\"table-responsive\">\r\n    <table  datatable   [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover\" class=\"table table-bordered table-striped\">\r\n        <thead style=\"background-color:#fb9013;\">\r\n            <tr>\r\n                <th>\r\n                    S NO\r\n                </th>\r\n                <th>\r\n                    Store Name\r\n             </th>\r\n             <th>\r\n                    Create Date\r\n              </th>\r\n              <th>\r\n                Actions\r\n           </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let store of storeNames;let i = index;\">\r\n                <td>{{i+1}}</td>\r\n                <td>{{store?.store_name}}</td>\r\n                <td>{{store?.creationDate | date: 'dd/MM/yyyy'}}</td>\r\n                <td>\r\n                    <img  src=\"assets/images/icon/edit.png\" class=\"switchbtn\"  height=\"30px\"  (click)=\"open(content,store)\"/>\r\n                    <img  src=\"assets/images/icon/delete.png\" class=\"switchbtn\"  height=\"30px\"  (click)=\"deleteDept(store._id)\"/>  \r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n </div> \r\n   \r\n <ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n    <div class=\"modal-header\">\r\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">Store</h4>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n         <form>\r\n            <div class=\"form-group\">\r\n              <label for=\"recipient-name\" class=\"col-form-label\">Store Name</label>\r\n              <input type=\"text\" class=\"form-control\"  name='store_name'\r\n              [(ngModel)]=\"selectedObj.store_name\" required>\r\n            </div>\r\n          </form>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c(selectedObj)\">Save</button>\r\n    </div>\r\n  </ng-template>\r\n\r\n</div>\r\n ","import { NgModule,CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\r\nimport { TagsComponent } from './tags/tags.component';\r\nimport { StatusComponent } from './status/status.component';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { AssignComponent } from './assign/assign.component';\r\nimport { IssuesComponent } from './issues/issues.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { DeptComponent } from './dept/dept.component';\r\nimport { UserListComponent } from './user-list/user-list.component';\r\nimport { SignOutComponent } from './sign-out/sign-out.component';\r\nimport { StoreComponent } from './store/store.component';\r\nimport { EditUserComponent } from './edit-user/edit-user.component';\r\nimport {NgxCSVtoJSONModule} from 'ngx-csvto-json';\r\nimport { InactiveUserlistComponent } from './inactive-userlist/inactive-userlist.component';\r\n\r\nconst appsRoutes: Routes = [\r\n  {\r\n    path: 'tag-entry',\r\n    component: TagsComponent\r\n  },\r\n  {\r\n    path: 'status-entry',\r\n    component: StatusComponent\r\n  },\r\n  {\r\n    path: 'assign-entry',\r\n    component: AssignComponent\r\n  },\r\n  {\r\n    path: 'department-entry',\r\n    component: DeptComponent\r\n  },\r\n  {\r\n    path: 'issue-entry',\r\n    component: IssuesComponent\r\n  },\r\n  {\r\n    path: 'add-user',\r\n    component: UserComponent\r\n  },\r\n  {\r\n    path: 'add-store',\r\n    component: StoreComponent\r\n  },\r\n  {\r\n    path: 'user-list',\r\n    component: UserListComponent\r\n  },\r\n  {\r\n    path: 'inactive-users',\r\n    component: InactiveUserlistComponent\r\n  },\r\n  {\r\n    path: 'user-edit',\r\n    component: EditUserComponent\r\n  },\r\n  {\r\n    path: 'signout',\r\n    component: SignOutComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [TagsComponent, StatusComponent, AssignComponent, IssuesComponent, UserComponent, DeptComponent, UserListComponent, SignOutComponent, StoreComponent, EditUserComponent, InactiveUserlistComponent],\r\n  imports: [\r\n    CommonModule,\r\n    NgxPaginationModule,\r\n    ReactiveFormsModule,\r\n    AngularMultiSelectModule,\r\n    NgxCSVtoJSONModule,\r\n    FormsModule,\r\n    DataTablesModule,\r\n   \r\n    RouterModule.forChild(appsRoutes)\r\n  ],\r\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\r\n  exports:[TagsComponent, StatusComponent, SignOutComponent,StoreComponent, AssignComponent,IssuesComponent,DeptComponent,UserComponent,UserListComponent,SignOutComponent,EditUserComponent,InactiveUserlistComponent]\r\n})\r\nexport class MasterDataModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BaseServiceService } from '@app/services/base-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\nimport Axios from 'axios';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss']\r\n})\r\nexport class UserComponent implements OnInit {\r\n  model: NgbDateStruct;\r\n  csvStatus:boolean = false;\r\n  newUser:any = {\r\n    user_type:\"Corporate\"\r\n  };\r\n  roleStatus:boolean=true;\r\n  deptNames: any;\r\n  storeNames: any;\r\n  dropdownList = [];\r\n  formModel = {\r\n    \"selectedItems\": []\r\n  };\r\n\tdropdownSettings = {};\r\n  // selectedFiles: FileList;\r\n  convertedObj: any = '';\r\n  sel:boolean = false;\r\n  constructor(private router: Router, private cdRef:ChangeDetectorRef, private baseService:BaseServiceService) { \r\n    this.dropdownSettings = {\r\n\t\t\tsingleSelection: true,\r\n\t\t\ttext: \"Select Menu List\",\r\n\t\t\tselectAllText: 'Select All',\r\n\t\t\tunSelectAllText: 'UnSelect All',\r\n\t\t\tenableSearchFilter: true,\r\n\t\t\tclasses: \"myclass custom-class\"\r\n    };\r\n    this.getDept();\r\n    this.getStore();\r\n  }\r\n\r\n  getDept() {\r\n    console.log(\"Dept\");\r\n    Axios.get(this.baseService.baseUrl + 'secure/department/get_dept',{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n      \r\n    })\r\n      .then(response => {        \r\n       \r\n        if (response.data.status) {\r\n          console.log(\"Issue List\");\r\n          this.deptNames = response.data.data;\r\n          console.log(this.deptNames);\r\n          console.log(response.data);\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  getStore() {\r\n    console.log(\"Store\");\r\n    Axios.get(this.baseService.baseUrl + 'secure/store/allStore',{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n      \r\n    })\r\n      .then(response => {        \r\n       \r\n        if (response.data.status) {\r\n          console.log(\"Issue List\");\r\n          this.storeNames = response.data.data;\r\n          let tmp = [];\r\n          for(let i=0; i < this.storeNames .length; i++) {\r\n            tmp.push({ id: this.storeNames[i]._id, itemName: this.storeNames[i].store_name });\r\n          }\r\n          this.dropdownList = tmp;\r\n        console.log(\"DropDown Data\");\r\n        console.log(this.dropdownList);\r\n          console.log(this.storeNames);\r\n          console.log(response.data);\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  \r\n  convert(objArray){\r\n    // console.log(objArray);\r\n    this.sel = true;\r\n    this.convertedObj = JSON.stringify(objArray, null, 2);\r\n   }\r\n   onError(err){\r\n     console.log(err);\r\n     this.convertedObj = err;\r\n    //  this.toaster.error(err)\r\n   }\r\n\r\n   save() {\r\n    let finalObj = JSON.parse(this.convertedObj);\r\n    console.log(finalObj.store_id);\r\n    console.log(finalObj);\r\n    Axios.post(this.baseService.baseUrl + 'secure/users/usercsv', finalObj,{\r\n\t\t  headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n\t\t})\r\n\t\t\t.then(response => {\r\n      console.log(response);\r\n\t       if(response.data.status){\r\n\t\t\t  //  this.toaster.success(response.data.message)\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: response.data[\"message\"],\r\n          showConfirmButton: false,\r\n          timer: 3000\r\n      })\r\n\t\t   }else {\r\n\t\t\t    // this.toaster.error(response.data.message)\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n\t\t   }\r\n\t\t\t   \r\n\t\t\t   \r\n\t\t\t}).catch(function (error) {\r\n\t\t\t\t// handle error\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t})\r\n\t\t\t.finally(function () {\r\n\t\t\t\t// always executed\r\n\t\t\t});\r\n}\r\n\r\n\r\n  showCsv()\r\n  {\r\n    this.csvStatus=!this.csvStatus;\r\n  }\r\n\r\n  userTypeData(data)\r\n  {\r\n   if(data==\"Store\")\r\n   {\r\n    this.roleStatus=false;\r\n    this.newUser.user_type=\"Store\";\r\n    // this.newUser.role={\r\n    //   isAdmin:false,\r\n    //   isUser:true\r\n    // }\r\n   }\r\n   else if(data == \"Corporate\")\r\n   {\r\n    this.roleStatus=true;\r\n    this.newUser.user_type=\"Corporate\";\r\n   }\r\n   else\r\n   {\r\n    this.dropdownSettings = {\r\n\t\t\tsingleSelection: false,\r\n\t\t\ttext: \"Select Menu List\",\r\n\t\t\tselectAllText: 'Select All',\r\n\t\t\tunSelectAllText: 'UnSelect All',\r\n\t\t\tenableSearchFilter: true,\r\n\t\t\tclasses: \"myclass custom-class\"\r\n    };\r\n    this.newUser.user_type=\"Sales\";\r\n   }\r\n  }\r\n\r\n  ngAfterViewChecked()\r\n  {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  formSubmit(form:NgForm)\r\n  {\r\n    this.newUser.store_id=[];\r\n    for(let i=0;i<this.formModel.selectedItems.length;i++)\r\n    {\r\n      this.newUser.store_id.push(this.formModel.selectedItems[i].id)\r\n    }\r\n    console.log(this.newUser);\r\n    Axios.post(this.baseService.baseUrl + 'secure/users/add_User',this.newUser,{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n      \r\n    })\r\n      .then(response => {        \r\n        console.log(response)\r\n        if (response.data. status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n        // .then(() => {\r\n        //   location.reload();\r\n        //  });\r\n         form.resetForm(\"\");\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onItemSelect(item: any) {\r\n    console.log(\"on Select Item...\");\r\n    console.log(this.formModel.selectedItems);\r\n    // for(let i=0;i<this.formModel.selectedItems.length;i++)\r\n    // {\r\n    // this.newTicket.tags.push(this.formModel.selectedItems[i].id);\r\n    // }\r\n    console.log(\"Tag Names\");\r\n    // this.newTicket.tags.push(this.formModel.selectedItems)\r\n\t\t// console.log(this.formModel.selectedItems);\r\n\t}\r\n\tOnItemDeSelect(item: any) {\r\n\t\tconsole.log(item);\r\n\t\t// console.log(this.formModel.selectedItems);\r\n\t}\r\n\tonSelectAll(items: any) {\r\n    console.log(\"On Select All\");\r\n    console.log(this.formModel.selectedItems);\r\n    // this.tags.push(this.formModel.selectedItems);\r\n\t}\r\n\tonDeSelectAll(items: any) {\r\n\t\tconsole.log(items);\r\n\t}\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"usercard\">\r\n        <div class=\"card-header cheader\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12 text-center\">\r\n            <h1 style=\"color: white;\">New User </h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n             <input type=\"checkbox\" class=\"mt-4 ml-4 mr-3\" name=\"csv\" (change)=\"showCsv()\">Csv Upload\r\n            <div class=\"row mb-2 \" *ngIf=\"csvStatus\">\r\n                <div class=\"col-md-12 \">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-8 mb-2\">\r\n                          <Ngx-CSVtoJSON (onConvert)=\"convert($event)\" (onFail)=\"onError($event)\"></Ngx-CSVtoJSON>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <button class=\"btn btn-primary offset-4\" (click)=\"save()\"  [disabled]=\"!sel\">Submit</button>\r\n                        </div>\r\n                      </div>\r\n                </div>\r\n           </div>\r\n            <form #userForm='ngForm' novalidate (ngSubmit)=\"formSubmit(userForm)\">\r\n                <div class=\"form-group \">\r\n                    <div class=\"row\">\r\n                    <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Name</label>                     \r\n                     <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                        <input type=\"text\" class=\"form-control form-control-sm\"  name='name'\r\n                        [(ngModel)]=\"newUser.name\" #name=\"ngModel\" required >\r\n                        <div *ngIf=\"name.invalid && (name.dirty || name.touched)\"\r\n                            class=\"form-text text-danger\">\r\n                            <div *ngIf=\"name.errors.required\">Name is required. </div>\r\n                        </div>\r\n                    </div>\r\n                </div>   \r\n                <div class=\"col\">\r\n                    <div class=\"form-group m-t-15 custom-radio-ml ml-2\">\r\n                      <!-- <div class=\"radio radio-primary\" > -->\r\n                        <input id=\"Corporate\" type=\"radio\"  name='user_type' value=\"Corporate\"\r\n                        [(ngModel)]=\"newUser.user_type\" #user_type=\"ngModel\"  required \r\n                        (change)=\"userTypeData($event.target.value)\" >\r\n                        <label for=\"Corporate\" class=\"ml-1\">Corporate</label>\r\n                      <!-- </div> -->\r\n                      <!-- <div class=\"radio radio-secondary\"> -->\r\n                        <input id=\"Store\" type=\"radio\"  class=\"ml-4\" name='user_type' value=\"Store\"\r\n                        [(ngModel)]=\"newUser.user_type\" #user_type=\"ngModel\" required\r\n                        (change)=\"userTypeData($event.target.value)\" >\r\n                        <label for=\"Store\" class=\"ml-1\">Store</label>\r\n\r\n                        <input id=\"Sales\" type=\"radio\"  class=\"ml-4\" name='user_type' value=\"Sales\"\r\n                        [(ngModel)]=\"newUser.user_type\" #user_type=\"ngModel\" required\r\n                        (change)=\"userTypeData($event.target.value)\" >\r\n                        <label for=\"Sales\" class=\"ml-1\">Sales</label>\r\n                      <!-- </div>      -->\r\n                      </div>\r\n                      <div *ngIf=\"user_type.invalid &&  (user_type.dirty || user_type.touched)\"\r\n                      class=\"form-text text-danger\">\r\n                      <div *ngIf=\"user_type.errors.required\">User Type is required. </div>\r\n                  </div>\r\n                </div>         \r\n                    <div class=\"row\" *ngIf=\"roleStatus || newUser.user_type=='Sales'\">     \r\n                                          <label class=\"col-md-2 col-sm-2 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Role</label>                     \r\n                        <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <select name=\"role\"  [(ngModel)]=\"newUser.role\" #role=\"ngModel\" required class=\"form-control\" >\r\n                                <option *ngFor=\"let dept of deptNames\" value=\"{{dept._id}}\">{{dept.dept_name}}</option>\r\n                                <!-- <option>Type 1</option>\r\n                                <option>Type 2</option>\r\n                                <option>Type 3</option> -->\r\n                              </select>\r\n                              <div *ngIf=\"role.invalid && (role.dirty || role.touched)\"\r\n                              class=\"form-text text-danger\">\r\n                              <div *ngIf=\"role.errors.required\">Role  is required. </div>\r\n                          </div>\r\n                          </div>\r\n                    </div>\r\n                    <div class=\"row\"  *ngIf=\"!roleStatus || newUser.user_type=='Sales'\">\r\n                        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Store</label>                     \r\n                        <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <div class=\"form-group\">\r\n                                <!-- <label for=\"name\">Slect Tag Name</label> -->\r\n                                <angular2-multiselect [data]=\"dropdownList\" [(ngModel)]=\"formModel.selectedItems\"\r\n                                    [settings]=\"dropdownSettings\" (onSelect)=\"onItemSelect($event)\"\r\n                                    (onDeSelect)=\"OnItemDeSelect($event)\" (onSelectAll)=\"onSelectAll($event)\"\r\n                                    (onDeSelectAll)=\"onDeSelectAll($event)\" name=\"selectedItems\" #selectedItems=\"ngModel\"\r\n                                    >\r\n                                </angular2-multiselect>\r\n                            </div>\r\n                          </div>\r\n                    </div>\r\n                    <!-- <div class=\"row\" *ngIf=\"!roleStatus\">\r\n                        <label class=\"col-md-2 col-sm-2 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Store</label>                     \r\n                        <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <select name=\"role\"  [(ngModel)]=\"newUser.store_id\" #store_id=\"ngModel\" required class=\"form-control\" >\r\n                                <option *ngFor=\"let store of storeNames\" value=\"{{store._id}}\">{{store.store_name}}</option>\r\n                              </select>\r\n                              <div *ngIf=\"store_id.invalid && (store_id.dirty || store_id.touched)\"\r\n                              class=\"form-text text-danger\">\r\n                              <div *ngIf=\"store_id.errors.required\">Store  is required. </div>\r\n                          </div>\r\n                          </div>\r\n                    </div> -->\r\n                    <div class=\"row\">\r\n                        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Email</label>                     \r\n                         <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <input type=\"email\" class=\"form-control form-control-sm\"  name='email'\r\n                            [(ngModel)]=\"newUser.email\" #email=\"ngModel\" required >\r\n                            <div *ngIf=\"email.invalid && (email.dirty || email.touched)\"\r\n                                class=\"form-text text-danger\">\r\n                                <div *ngIf=\"email.errors.required\"> Email is required. </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>        \r\n                    <div class=\"row\">\r\n                        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Password</label>                     \r\n                         <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <input type=\"password\" class=\"form-control form-control-sm\"  name='password'\r\n                            [(ngModel)]=\"newUser.password\" #password=\"ngModel\" required >\r\n                            <div *ngIf=\"password.invalid && (password.dirty || password.touched)\"\r\n                                class=\"form-text text-danger\">\r\n                                <div *ngIf=\"password.errors.required\"> Password is required. </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>   \r\n                    <div class=\"row\">\r\n                        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Phone</label>                     \r\n                         <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <input type=\"number\" class=\"form-control form-control-sm\"  name='phone'\r\n                            [(ngModel)]=\"newUser.phone\" #phone=\"ngModel\" required >\r\n                            <div *ngIf=\"phone.invalid && (phone.dirty || phone.touched)\"\r\n                                class=\"form-text text-danger\">\r\n                                <div *ngIf=\"phone.errors.required\"> Phone is required. </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>   \r\n                    <div class=\"row d-flex\">\r\n                        <label class=\"col-md-2 col-sm-2 col-form-label col-form-label-md text-sm-right \"  for=\"normal-input-1\">Is Active</label>                     \r\n                         <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <input type=\"checkbox\" class=\"form-control form-control-sm\"  name='isActive'\r\n                            [(ngModel)]=\"newUser.isActive\" #isActive=\"ngModel\"  >\r\n                            <!-- <div *ngIf=\"isActive.invalid && (isActive.dirty || isActive.touched)\"\r\n                                class=\"form-text text-danger\">\r\n                                <div *ngIf=\"isActive.errors.required\">  is required. </div>\r\n                            </div> -->\r\n                        </div>\r\n                       \r\n                    </div>   \r\n                    \r\n                    <div class=\"row\">\r\n                        <button class=\"btn btn-primary offset-3 \" [disabled]=\"userForm.invalid\">Submit</button>\r\n                        <button type=\"reset\" class=\"btn btn-danger ml-2\">Clear</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ModalDismissReasons, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BaseServiceService } from '@app/services/base-service.service';\r\nimport Axios from 'axios';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport { Subject } from 'rxjs';\r\n@Component({\r\n  selector: 'app-assign',\r\n  templateUrl: './assign.component.html',\r\n  styleUrls: ['./assign.component.scss']\r\n})\r\nexport class AssignComponent implements OnInit {\r\n  model: NgbDateStruct;\r\n  assign:any={};\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n  assignList: any;\r\n  authToken: string;\r\n  closeResult = '';\r\n  selectedObj:any = {};\r\n  constructor(private router: Router, private baseService: BaseServiceService,config: NgbModalConfig, private modalService: NgbModal) { \r\n  \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAssignList();\r\n  }\r\n\r\n  formSubmit() {\r\n   \r\n    Axios.post(\r\n      this.baseService.baseUrl + 'secure/assign/addAssignName', this.assign,\r\n      {\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      })\r\n      .then(response => {\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        }).then(() => {\r\n          location.reload(); });\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  getAssignList() {\r\n    Axios.get(this.baseService.baseUrl + 'secure/assign/getAssignName',{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },      \r\n    })\r\n      .then(response => {        \r\n        if (response.status) {\r\n          this.assignList = response.data.data;\r\n          console.log(\"Assign List\");\r\n          \r\n          console.log(this.assignList);\r\n          console.log(response.data);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  open(content,selObj) {\r\n    console.log(selObj);\r\n    this.selectedObj = selObj;\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      console.log(\"LLLLLLL\",result);\r\n      Axios.put(this.baseService.baseUrl + 'secure/assign/update_assign/'+result._id,result,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n        \r\n      })\r\n        .then(response => {        \r\n          console.log(response)\r\n          if (response.data. status) {\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'success',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          }).then(() => {\r\n            location.reload(); });\r\n          }\r\n          else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n          {\r\n            \r\n          }\r\n          else{\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'error',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n           }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error)\r\n        })\r\n    }, (reason) => {\r\n      console.log(\"OOOOOOOOOOo\",);\r\n      \r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n\r\n  deleteDept(id)\r\n  {\r\n    if(confirm(\"Are You Sure To Delete This Record\"))\r\n    {\r\n    Axios.delete(this.baseService.baseUrl + 'secure/assign/delete_assign/'+id,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      })\r\n      .then(response => {        \r\n        console.log(response)\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n        .then(() => {\r\n          location.reload(); });\r\n        // this.getDept();\r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"card col-md-6 float-center\">\r\n        <div class=\"card-body\">\r\n            <form #statusForm='ngForm' novalidate (ngSubmit)=\"formSubmit()\">\r\n           <div class=\"form-group form-row\">\r\n               <label class=\"col-md-4 col-sm-4 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Assign Name</label>\r\n        \r\n               <div class=\"col-md-6 col-sm-8 mb-3\">\r\n                   <input type=\"text\" class=\"form-control form-control-sm\"  name='assign_name'\r\n                       [(ngModel)]=\"assign.assign_name\" #assign_name=\"ngModel\" required>\r\n       \r\n                   <div *ngIf=\"assign_name.invalid && (assign_name.dirty || assign_name.touched)\" class=\"form-text text-danger\">\r\n                       <div *ngIf=\"assign_name.errors.required\"> Assign Name is required. </div>\r\n                   </div>\r\n               </div>\r\n        </div>\r\n        <div class=\"row\">\r\n             <div class=\"col-md-12\">\r\n                 <button class=\"btn btn-primary offset-4\" [disabled]=\"statusForm.invalid\">Add</button>\r\n             </div>\r\n        </div>\r\n       </form>\r\n    </div>\r\n   </div>\r\n\r\n   <div class=\"table-responsive\">\r\n    <table datatable   [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover table table-bordered table-striped\">\r\n        <thead style=\"background-color:#fb9013;\">\r\n            <tr>\r\n                <th>\r\n                    S NO\r\n                </th>\r\n                <th>\r\n                    Assign Name\r\n             </th>\r\n             <th>\r\n                    Create Date\r\n              </th>\r\n              <th>\r\n                Actions\r\n           </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let tag of assignList;let i = index;\">\r\n                <td>{{i+1}}</td>\r\n                <td>{{tag?.assign_name}}</td>\r\n                <td>{{tag?.creationDate | date: 'dd/MM/yyyy'}}</td>\r\n                <td>\r\n                    <!-- <img  src=\"assets/images/icon/edit.png\" class=\"switchbtn\"  height=\"30px\"  (click)=\"open(content,dept)\"/>\r\n                    <img  src=\"assets/images/icon/delete.png\" class=\"switchbtn\"  height=\"30px\"  (click)=\"deleteDept(dept._id)\"/>   -->\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n </div> \r\n\r\n <ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n    <div class=\"modal-header\">\r\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">Department</h4>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n         <form>\r\n            <div class=\"form-group\">\r\n              <label for=\"recipient-name\" class=\"col-form-label\">Department Name</label>\r\n              <input type=\"text\" class=\"form-control\"  name='dept_name'\r\n              [(ngModel)]=\"selectedObj.dept_name\" required>\r\n            </div>\r\n          </form>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c(selectedObj)\">Save</button>\r\n    </div>\r\n  </ng-template>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { BaseServiceService } from '@app/services/base-service.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\nimport Axios from 'axios';\r\n\r\n@Component({\r\n  selector: 'app-edit-user',\r\n  templateUrl: './edit-user.component.html',\r\n  styleUrls: ['./edit-user.component.scss']\r\n})\r\nexport class EditUserComponent implements OnInit {\r\n  model: NgbDateStruct;\r\n  newUser:any = {\r\n  };\r\n  deptNames: any;\r\n  storeNames: any;\r\n  dropdownList = [];\r\n  formModel = {\r\n    \"selectedItems\": []\r\n  };\r\n\tdropdownSettings = {};\r\n  id: any;\r\n  roleStatus: boolean = false;\r\n  constructor(private router: Router,private _router:ActivatedRoute,  private cdRef:ChangeDetectorRef,private baseService:BaseServiceService) { \r\n    this.id = this._router.snapshot.queryParamMap.get('id');\r\n    this.dropdownSettings = {\r\n\t\t\tsingleSelection: true,\r\n\t\t\ttext: \"Select Menu List\",\r\n\t\t\tselectAllText: 'Select All',\r\n\t\t\tunSelectAllText: 'UnSelect All',\r\n\t\t\tenableSearchFilter: true,\r\n\t\t\tclasses: \"myclass custom-class\"\r\n    };\r\n    this.getDept();\r\n    this.getStore();\r\n  }\r\n\r\n  getUserById() {\r\n    console.log(\"userBy ID\");\r\n    Axios.get(this.baseService.baseUrl + 'secure/users/user_data/'+this.id,{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n      \r\n    })\r\n      .then(response => {        \r\n       console.log(\"Testing\");\r\n       console.log(response);\r\n        if (response.data.status)\r\n         {\r\n          console.log(\"Issue List\");\r\n          this.newUser = response.data.data;\r\n          let tmp = [];\r\n          for (let i = 0; i < this.newUser.store_id.length; i++) {\r\n             this.storeNames.filter(store=>{\r\n                if(store._id == this.newUser.store_id[i])\r\n                tmp.push({ id: store._id, itemName: store.store_name });\r\n             })\r\n          }\r\n          this.formModel.selectedItems = tmp;\r\n          console.log( this.formModel.selectedItems);\r\n          console.log(response.data);\r\n          if(this.newUser.user_type == 'Corporate')\r\n          this.roleStatus = false;\r\n          else if(this.newUser.user_type == 'Sales')\r\n          {\r\n            this.dropdownSettings = {\r\n              singleSelection: false,\r\n              text: \"Select Menu List\",\r\n              selectAllText: 'Select All',\r\n              unSelectAllText: 'UnSelect All',\r\n              enableSearchFilter: true,\r\n              classes: \"myclass custom-class\"\r\n          }\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n        }\r\n         })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  userTypeData(data)\r\n  {\r\n   if(data==\"Store\")\r\n   {\r\n    this.roleStatus=true;\r\n    this.newUser.user_type=\"Store\"\r\n    // this.newUser.role={\r\n    //   isAdmin:false,\r\n    //   isUser:true\r\n    // }\r\n   }\r\n   else if(data == \"Corporate\")\r\n   {\r\n    this.roleStatus=false;\r\n    this.newUser.user_type=\"Corporate\";\r\n   }\r\n   else\r\n   {\r\n    this.dropdownSettings = {\r\n\t\t\tsingleSelection: false,\r\n\t\t\ttext: \"Select Menu List\",\r\n\t\t\tselectAllText: 'Select All',\r\n\t\t\tunSelectAllText: 'UnSelect All',\r\n\t\t\tenableSearchFilter: true,\r\n\t\t\tclasses: \"myclass custom-class\"\r\n    };\r\n    this.newUser.user_type=\"Sales\";\r\n   }\r\n  }\r\n\r\n  getDept() {\r\n    console.log(\"Dept\");\r\n    Axios.get(this.baseService.baseUrl + 'secure/department/get_dept',{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n    })\r\n      .then(response => {        \r\n       \r\n        if (response.data.status) {\r\n          console.log(\"Issue List\");\r\n          this.deptNames = response.data.data;\r\n          console.log(this.deptNames);\r\n          console.log(response.data);\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  getStore() {\r\n    console.log(\"Store\");\r\n    Axios.get(this.baseService.baseUrl + 'secure/store/allStore',{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n      \r\n    })\r\n      .then(response => {        \r\n        if (response.data.status) {\r\n          console.log(\"Issue List\");\r\n          this.storeNames = response.data.data;\r\n          this.storeNames = response.data.data;\r\n          this.getUserById();\r\n          let tmp = [];\r\n          for(let i=0; i < this.storeNames .length; i++) {\r\n            tmp.push({ id: this.storeNames[i]._id, itemName: this.storeNames[i].store_name });\r\n          }\r\n          this.dropdownList = tmp;\r\n          console.log(this.storeNames);\r\n          console.log(response.data);\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  formSubmit()\r\n  {\r\n    this.newUser.store_id=[];\r\n    for(let i=0;i<this.formModel.selectedItems.length;i++)\r\n    {\r\n      this.newUser.store_id.push(this.formModel.selectedItems[i].id)\r\n    }\r\n    console.log(this.newUser);\r\n    Axios.put(this.baseService.baseUrl + 'secure/users/user_data/'+this.id,this.newUser,{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n      \r\n    })\r\n      .then(response => {        \r\n        console.log(response)\r\n        if (response.data. status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n        this.getUserById();\r\n        // .then(() => {\r\n        //   location.reload(); });\r\n        }\r\n        // else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        // {\r\n          \r\n        // }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewChecked()\r\n  {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  \r\n  onItemSelect(item: any) {\r\n    console.log(\"on Select Item...\");\r\n    console.log(this.formModel.selectedItems);\r\n    // for(let i=0;i<this.formModel.selectedItems.length;i++)\r\n    // {\r\n    // this.newTicket.tags.push(this.formModel.selectedItems[i].id);\r\n    // }\r\n    console.log(\"Tag Names\");\r\n    // this.newTicket.tags.push(this.formModel.selectedItems)\r\n\t\t// console.log(this.formModel.selectedItems);\r\n\t}\r\n\tOnItemDeSelect(item: any) {\r\n\t\tconsole.log(item);\r\n\t\t// console.log(this.formModel.selectedItems);\r\n\t}\r\n\tonSelectAll(items: any) {\r\n    console.log(\"On Select All\");\r\n    console.log(this.formModel.selectedItems);\r\n    // this.tags.push(this.formModel.selectedItems);\r\n\t}\r\n\tonDeSelectAll(items: any) {\r\n\t\tconsole.log(items);\r\n\t}\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"card\">\r\n        <div class=\"card-header cheader\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12 text-center\">\r\n            <h3>Edit User Details </h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <form #ticketForm='ngForm' novalidate (ngSubmit)=\"formSubmit()\">\r\n                <div class=\"form-group mt-2 \">\r\n                    <div class=\"row\">\r\n                    <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Name</label>                     \r\n                     <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                        <input type=\"text\" class=\"form-control form-control-sm\"  name='name'\r\n                        [(ngModel)]=\"newUser.name\" #name=\"ngModel\" required >\r\n                        <div *ngIf=\"name.invalid && (name.dirty || name.touched)\"\r\n                            class=\"form-text text-danger\">\r\n                            <div *ngIf=\"name.errors.required\"> Name is required. </div>\r\n                        </div>\r\n                    </div>\r\n                </div>       \r\n                <div class=\"row ml-5\">\r\n                    <div class=\"form-group m-t-15 custom-radio-ml ml-2\">\r\n                      <!-- <div class=\"radio radio-primary\" > -->\r\n                        <input id=\"Corporate\" type=\"radio\"  name='user_type' value=\"Corporate\"\r\n                        [(ngModel)]=\"newUser.user_type\" #user_type=\"ngModel\" required \r\n                        (change)=\"userTypeData($event.target.value)\" >\r\n                        <label for=\"Corporate\" class=\"ml-1\">Corporate</label>\r\n                      <!-- </div> -->\r\n                      <!-- <div class=\"radio radio-secondary\"> -->\r\n                        <input id=\"Store\" type=\"radio\"  class=\"ml-4\" name='user_type' value=\"Store\"\r\n                        [(ngModel)]=\"newUser.user_type\" #user_type=\"ngModel\" required\r\n                        (change)=\"userTypeData($event.target.value)\" >\r\n                        <label for=\"Store\" class=\"ml-1\">Store</label>\r\n                        <input id=\"Sales\" type=\"radio\"  class=\"ml-4\" name='user_type' value=\"Sales\"\r\n                        [(ngModel)]=\"newUser.user_type\" #user_type=\"ngModel\" required\r\n                        (change)=\"userTypeData($event.target.value)\" >\r\n                        <label for=\"Sales\" class=\"ml-1\">Sales</label>\r\n                      <!-- </div>      -->\r\n                      </div>\r\n                      <div *ngIf=\"user_type.invalid &&  (user_type.dirty || user_type.touched)\"\r\n                      class=\"form-text text-danger\">\r\n                      <div *ngIf=\"user_type.errors.required\">User Type is required. </div>\r\n                  </div>\r\n                </div>             \r\n                    <div class=\"row\" *ngIf=\"!roleStatus || newUser.user_type=='Sales'\" >\r\n                        <label class=\"col-md-2 col-sm-2 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Role</label>                     \r\n                        <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <select name=\"role\"  [(ngModel)]=\"newUser.role\" #role=\"ngModel\" required class=\"form-control\" >\r\n                                <option *ngFor=\"let dept of deptNames\" value=\"{{dept._id}}\">{{dept.dept_name}}</option>\r\n                                <!-- <option>Type 1</option>\r\n                                <option>Type 2</option>\r\n                                <option>Type 3</option> -->\r\n                              </select>\r\n                              <div *ngIf=\"role.invalid && (role.dirty || role.touched)\"\r\n                              class=\"form-text text-danger\">\r\n                              <div *ngIf=\"role.errors.required\">Role  is required. </div>\r\n                          </div>\r\n                          </div>\r\n                    </div>\r\n                    <div class=\"row\"  *ngIf=\"roleStatus || newUser.user_type=='Sales'\">\r\n                        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Store</label>                     \r\n                        <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <div class=\"form-group\">\r\n                                <!-- <label for=\"name\">Slect Tag Name</label> -->\r\n                                <angular2-multiselect [data]=\"dropdownList\" [(ngModel)]=\"formModel.selectedItems\"\r\n                                    [settings]=\"dropdownSettings\" (onSelect)=\"onItemSelect($event)\"\r\n                                    (onDeSelect)=\"OnItemDeSelect($event)\" (onSelectAll)=\"onSelectAll($event)\"\r\n                                    (onDeSelectAll)=\"onDeSelectAll($event)\" name=\"selectedItems\" #selectedItems=\"ngModel\"\r\n                                    >\r\n                                </angular2-multiselect>\r\n                            </div>\r\n                          </div>\r\n                    </div>\r\n                    <!-- <div class=\"row\" *ngIf=\"roleStatus\">\r\n                        <label class=\"col-md-2 col-sm-2 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Store</label>                     \r\n                        <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <select name=\"store_id\"  [(ngModel)]=\"newUser.store_id\" #store_id=\"ngModel\" required class=\"form-control\" >\r\n                                <option *ngFor=\"let store of storeNames\" value=\"{{store._id}}\">{{store.store_name}}</option>\r\n                              </select>\r\n                              <div *ngIf=\"store_id.invalid && (store_id.dirty || store_id.touched)\"\r\n                              class=\"form-text text-danger\">\r\n                              <div *ngIf=\"store_id.errors.required\">Store  is required. </div>\r\n                          </div>\r\n                          </div>\r\n                    </div> -->\r\n                    <div class=\"row\">\r\n                        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Email</label>                     \r\n                         <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <input type=\"email\" class=\"form-control form-control-sm\"  name='email'\r\n                            [(ngModel)]=\"newUser.email\" #email=\"ngModel\" required >\r\n                            <div *ngIf=\"email.invalid && (email.dirty || email.touched)\"\r\n                                class=\"form-text text-danger\">\r\n                                <div *ngIf=\"email.errors.required\"> Email is required. </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>        \r\n                    <!-- <div class=\"row\">\r\n                        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Password</label>                     \r\n                         <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <input type=\"password\" class=\"form-control form-control-sm\"  name='password'\r\n                            [(ngModel)]=\"newUser.password\" #password=\"ngModel\" required >\r\n                            <div *ngIf=\"password.invalid && (password.dirty || password.touched)\"\r\n                                class=\"form-text text-danger\">\r\n                                <div *ngIf=\"password.errors.required\"> Password is required. </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>    -->\r\n                    <div class=\"row\">\r\n                        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Phone</label>                     \r\n                         <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <input type=\"number\" class=\"form-control form-control-sm\"  name='phone'\r\n                            [(ngModel)]=\"newUser.phone\" #phone=\"ngModel\" required >\r\n                            <div *ngIf=\"phone.invalid && (phone.dirty || phone.touched)\"\r\n                                class=\"form-text text-danger\">\r\n                                <div *ngIf=\"phone.errors.required\"> Phone is required. </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>   \r\n                    <div class=\"row d-flex\">\r\n                        <label class=\"col-md-2 col-sm-2 col-form-label col-form-label-md text-sm-right \"  for=\"normal-input-1\">Is Active</label>                     \r\n                         <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <input type=\"checkbox\" class=\"form-control form-control-sm\"  name='isActive'\r\n                            [(ngModel)]=\"newUser.isActive\" #isActive=\"ngModel\" required >\r\n                            <!-- <div *ngIf=\"isActive.invalid && (isActive.dirty || isActive.touched)\"\r\n                                class=\"form-text text-danger\">\r\n                                <div *ngIf=\"isActive.errors.required\">  is required. </div>\r\n                            </div> -->\r\n                        </div>\r\n                       \r\n                    </div>   \r\n                    \r\n                    <div class=\"row\">\r\n                        <button class=\"btn btn-primary offset-3\">Submit</button>\r\n                        <button class=\"btn btn-danger\">Clear</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { ɵɵdefineInjectable, Injectable, EventEmitter, Component, Output, NgModule } from '@angular/core';\n\nimport * as ɵngcc0 from '@angular/core';\nclass NgxCSVtoJSONService {\r\n    constructor() { }\r\n}\nNgxCSVtoJSONService.ɵfac = function NgxCSVtoJSONService_Factory(t) { return new (t || NgxCSVtoJSONService)(); };\r\nNgxCSVtoJSONService.ɵprov = ɵɵdefineInjectable({ factory: function NgxCSVtoJSONService_Factory() { return new NgxCSVtoJSONService(); }, token: NgxCSVtoJSONService, providedIn: \"root\" });\r\nNgxCSVtoJSONService.ctorParameters = () => [];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxCSVtoJSONService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\n\n//ng build NgxCSVtoJSON\r\nclass NgxCSVtoJSONComponent {\r\n    constructor() {\r\n        this.convertedArray = [];\r\n        this.properties = \"\";\r\n        this.onConvert = new EventEmitter();\r\n        this.onFail = new EventEmitter();\r\n    }\r\n    ngOnInit() {\r\n    }\r\n    //Click Action for Input File Control\r\n    onFileSelect(input) {\r\n        const files = input.files;\r\n        var fileTypes = ['csv']; //acceptable file types\r\n        if (files && files.length) {\r\n            var extension = input.files[0].name.split('.').pop().toLowerCase(), //file extension from input file\r\n            //Validating type of File Uploaded\r\n            isSuccess = fileTypes.indexOf(extension) > -1; //is extension in acceptable types\r\n            //console.log(isSuccess);\r\n            //console.log(\"Filename: \" + files[0].name);\r\n            // console.log(\"Type: \" + files[0].type);\r\n            //  console.log(\"Size: \" + files[0].size + \" bytes\");\r\n            var that = this;\r\n            //Flag to check the Validation Result\r\n            if (isSuccess) {\r\n                const fileToRead = files[0];\r\n                const fileReader = new FileReader();\r\n                fileReader.onload = function (fileLoadedEvent) {\r\n                    const textFromFileLoaded = fileLoadedEvent.target.result;\r\n                    that.csvContent = textFromFileLoaded;\r\n                    //Flag is for extracting first line\r\n                    let flag = false;\r\n                    // Main Data\r\n                    let objarray = [];\r\n                    //Properties\r\n                    let prop = [];\r\n                    //Total Length\r\n                    let size = 0;\r\n                    for (const line of that.csvContent.split(/[\\r\\n]+/)) {\r\n                        if (flag) {\r\n                            let obj = {};\r\n                            for (let k = 0; k < size; k++) {\r\n                                //Dynamic Object Properties\r\n                                obj[prop[k]] = line.split(',')[k];\r\n                            }\r\n                            objarray.push(obj);\r\n                        }\r\n                        else {\r\n                            //First Line of CSV will be having Properties\r\n                            for (let k = 0; k < line.split(',').length; k++) {\r\n                                size = line.split(',').length;\r\n                                //Removing all the spaces to make them usefull\r\n                                prop.push(line.split(',')[k].replace(/ /g, ''));\r\n                            }\r\n                            flag = true;\r\n                        }\r\n                    }\r\n                    //All the values converted from CSV to JSON Array\r\n                    that.convertedArray = objarray;\r\n                    that.properties = [];\r\n                    //Object Keys of Converted JSON Array\r\n                    that.properties = prop;\r\n                    let finalResult = {\r\n                        properties: that.properties,\r\n                        result: that.convertedArray\r\n                    };\r\n                    //On Convert Success \r\n                    that.onConvert.emit(finalResult);\r\n                };\r\n                fileReader.readAsText(fileToRead, \"UTF-8\");\r\n            }\r\n            else {\r\n                that.onFail.emit(\"Invalid File Format!\");\r\n            }\r\n        }\r\n    }\r\n}\nNgxCSVtoJSONComponent.ɵfac = function NgxCSVtoJSONComponent_Factory(t) { return new (t || NgxCSVtoJSONComponent)(); };\nNgxCSVtoJSONComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxCSVtoJSONComponent, selectors: [[\"Ngx-CSVtoJSON\"]], outputs: { onConvert: \"onConvert\", onFail: \"onFail\" }, decls: 2, vars: 0, consts: [[1, \"form-group\"], [\"accept\", \".csv\", \"id\", \"csv\", \"type\", \"file\", \"name\", \"myfile\", 1, \"form-control\", 3, \"change\"]], template: function NgxCSVtoJSONComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"input\", 1);\n        ɵngcc0.ɵɵlistener(\"change\", function NgxCSVtoJSONComponent_Template_input_change_1_listener($event) { return ctx.onFileSelect($event.target); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2 });\r\nNgxCSVtoJSONComponent.ctorParameters = () => [];\r\nNgxCSVtoJSONComponent.propDecorators = {\r\n    onConvert: [{ type: Output }],\r\n    onFail: [{ type: Output }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxCSVtoJSONComponent, [{\n        type: Component,\n        args: [{\n                selector: 'Ngx-CSVtoJSON',\n                template: `\n  <div class=\"form-group\">\n  <input class=\"form-control\" accept=\".csv\" id=\"csv\" type=\"file\" \n  (change)=\"onFileSelect($event.target)\" name=\"myfile\">\n  </div>\n  `\n            }]\n    }], function () { return []; }, { onConvert: [{\n            type: Output\n        }], onFail: [{\n            type: Output\n        }] }); })();\n\nclass NgxCSVtoJSONModule {\r\n}\nNgxCSVtoJSONModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxCSVtoJSONModule });\nNgxCSVtoJSONModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxCSVtoJSONModule_Factory(t) { return new (t || NgxCSVtoJSONModule)(); }, imports: [[]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxCSVtoJSONModule, { declarations: [NgxCSVtoJSONComponent], exports: [NgxCSVtoJSONComponent] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxCSVtoJSONModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NgxCSVtoJSONComponent],\n                imports: [],\n                exports: [NgxCSVtoJSONComponent]\n            }]\n    }], null, null); })();\n\n/*\r\n * Public API Surface of ngx-csvto-json\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgxCSVtoJSONComponent, NgxCSVtoJSONModule, NgxCSVtoJSONService };\n\n//# sourceMappingURL=ngx-csvto-json.js.map","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ModalDismissReasons, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BaseServiceService } from '@app/services/base-service.service';\r\nimport { Subject } from 'rxjs';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport Axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-issues',\r\n  templateUrl: './issues.component.html',\r\n  styleUrls: ['./issues.component.scss']\r\n})\r\nexport class IssuesComponent implements OnInit {\r\n  model: NgbDateStruct;\r\n  dept:any={}\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n  issue:any={}\r\n  mainDeptNames:any;\r\n  tableStatus:boolean=true;\r\n  deptNames: any;\r\n  issuesNames:any;\r\n  closeResult = '';\r\n  selectedObj:any = {};\r\n  constructor(private router: Router, private baseService: BaseServiceService,config: NgbModalConfig, private modalService: NgbModal) {\r\n    this.getDept();\r\n     this.getIssues();\r\n     this.getMainDept();\r\n   }\r\n  formSubmit(form:NgForm) {\r\n    Axios.post(\r\n      this.baseService.baseUrl + 'secure/typeofIssue/add_issue', this.issue,\r\n      {\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      })\r\n      .then(response => {\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n            \r\n        })\r\n        // .then(() => {\r\n        //   location.reload(); });\r\n        form.resetForm(\"\");\r\n        this.getIssues();\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n /////////Get Main Dept\r\n getMainDept() {\r\n  console.log(\"Dept\");\r\n  Axios.get(this.baseService.baseUrl + 'secure/mainDept/allMainDept',{\r\n    headers: {\r\n      'x-auth' : this.baseService.authToken\r\n    },\r\n    \r\n  })\r\n    .then(response => {        \r\n     \r\n      if (response.data.status) {\r\n        console.log(\"Issue List\");\r\n        this.mainDeptNames = response.data.data;\r\n      }\r\n      else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n      {\r\n        \r\n      }\r\n      else{\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'error',\r\n          title: response.data[\"message\"],\r\n          showConfirmButton: false,\r\n          timer: 3000\r\n      })\r\n       }\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error)\r\n    })\r\n}\r\n\r\n  getDept() {\r\n    Axios.get(this.baseService.baseUrl + 'secure/department/get_dept',{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n    })\r\n      .then(response => {        \r\n       \r\n        if (response.data.status) {\r\n          console.log(\"Dept List\");\r\n          this.deptNames = response.data.data;\r\n          console.log(this.deptNames);\r\n          console.log(response.data);\r\n          \r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  getIssues() {\r\n    Axios.get(this.baseService.baseUrl + 'secure/typeofIssue/get_issue',{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n    })\r\n      .then(response => {        \r\n       \r\n        if (response.status) {\r\n          this.issuesNames = response.data.data;\r\n          console.log(this.issuesNames);\r\n          console.log(response.data);\r\n          if(this.tableStatus)\r\n          {\r\n            this.dtTrigger.next();\r\n                 this.tableStatus=false;\r\n          }\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  open(content,selObj) {\r\n    console.log(selObj);\r\n    this.selectedObj = selObj;\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      console.log(\"LLLLLLL\",result);\r\n      Axios.put(this.baseService.baseUrl + 'secure/typeofIssue/update_issue/'+result._id,result,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n        \r\n      })\r\n        .then(response => {        \r\n          console.log(response)\r\n          if (response.data. status) {\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'success',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n          // .then(() => {\r\n          //   location.reload(); });\r\n          this.getIssues();\r\n          }\r\n          else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n          {\r\n            \r\n          }\r\n          else{\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'error',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n           }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error)\r\n        })\r\n    }, (reason) => {\r\n      console.log(\"OOOOOOOOOOo\",);\r\n      \r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n\r\n  deleteDept(id)\r\n  {\r\n    if(confirm(\"Are You Sure To Delete This Record\"))\r\n    {\r\n    Axios.delete(this.baseService.baseUrl + 'secure/typeofIssue/delete_issue/'+id,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      })\r\n      .then(response => {        \r\n        console.log(response)\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n        // .then(() => {\r\n        //   location.reload(); });\r\n        this.getIssues();\r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"card col-md-6 float-center\">\r\n        <div class=\"card-body\">\r\n            <form #statusForm='ngForm' novalidate (ngSubmit)=\"formSubmit(statusForm)\">\r\n                <!-- <div class=\"row\">\r\n                    <label class=\"col-md-4 col-sm-5 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Deapatment Name </label>                     \r\n                    <div class=\"col-md-8 col-sm-9 mb-3\">\r\n                        <select name=\"dept_id\"  [(ngModel)]=\"issue.dept_id\" #dept_id=\"ngModel\" required class=\"form-control\" >\r\n                            <option *ngFor=\"let dept of deptNames\" value=\"{{dept._id}}\">{{dept.dept_name}}</option> -->\r\n                            <!-- <option>Type 1</option>\r\n                            <option>Type 2</option>\r\n                            <option>Type 3</option> -->\r\n                          <!-- </select>\r\n                          <div *ngIf=\"dept_id.invalid && (dept_id.dirty || dept_id.touched)\"\r\n                          class=\"form-text text-danger\">\r\n                          <div *ngIf=\"dept_id.errors.required\">Department  is required. </div>\r\n                      </div>\r\n                      </div> -->\r\n                      <div class=\"row\">\r\n                            <label class=\"col-md-4 col-sm-4 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Department </label>\r\n                            <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                               <select   class=\"form-control\" name='deptName'\r\n                               [(ngModel)]=\"issue.deptName\" #deptName=\"ngModel\" required>\r\n                               <option value=\"\">-Select-</option>\r\n                               <option *ngFor=\"let mainDept of mainDeptNames\">{{mainDept?.mainDeptName}}</option>\r\n                               <!-- <option value=\"\">-Select-</option>\r\n                                 <option>IT</option>\r\n                                 <option>Finance</option> \r\n                                 <option>Projects</option>\r\n                                 <option>SCM</option>\r\n                                 <option>HR</option>\r\n                                 <option>Marketing</option>\r\n                                 <option>Sales</option>\r\n                                 <option>Call Center</option> -->\r\n                               </select>\r\n                                <div *ngIf=\"deptName.invalid && (deptName.dirty || deptName.touched)\" class=\"form-text text-danger\">\r\n                                    <div *ngIf=\"deptName.errors.required\"> Department Name is required. </div>\r\n                                </div>\r\n                      </div>  \r\n                    </div>\r\n           <div class=\"form-group form-row\">\r\n               <label class=\"col-md-4 col-sm-4 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Type Of Issue</label>\r\n        \r\n               <div class=\"col-md-8 col-sm-9 mb-3\">\r\n                   <input type=\"text\" class=\"form-control form-control-sm\"  name='issue_name'\r\n                       [(ngModel)]=\"issue.issue_name\" #issue_name=\"ngModel\" required>\r\n       \r\n                   <div *ngIf=\"issue_name.invalid && (issue_name.dirty || issue_name.touched)\" class=\"form-text text-danger\">\r\n                       <div *ngIf=\"issue_name.errors.required\"> Issue Name is required. </div>\r\n                   </div>\r\n               </div>\r\n        </div>\r\n        <div class=\"row\"> \r\n             <div class=\"col-md-12\">\r\n                 <button class=\"btn btn-primary offset-4\" [disabled]=\"statusForm.invalid\">Add</button>\r\n             </div>\r\n        </div>\r\n       </form>\r\n       </div>\r\n    </div>\r\n   </div>\r\n\r\n   \r\n<div class=\"table-responsive\">\r\n    <table datatable   [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover\" class=\"table table-bordered table-striped\">\r\n        <thead style=\"background-color:#fb9013\">\r\n            <tr>\r\n                <th>\r\n                    S NO\r\n                </th>\r\n                <th>\r\n                    Department Name\r\n             </th>\r\n              <th>\r\n                    Issue\r\n              </th>\r\n              <th>\r\n                Actions\r\n           </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let issue of issuesNames;let i = index;\">\r\n                <td>{{i+1}}</td>\r\n                <td>{{issue?.deptName}}</td>\r\n                <td>{{issue?.issue_name}}</td>\r\n                <td>\r\n                    <img  src=\"assets/images/icon/edit.png\" class=\"switchbtn\"  height=\"30px\"  (click)=\"open(content,issue)\"/>\r\n                    <img  src=\"assets/images/icon/delete.png\" class=\"switchbtn\"  height=\"30px\"  (click)=\"deleteDept(issue._id)\"/>  \r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n </div> \r\n\r\n <ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n    <div class=\"modal-header\">\r\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">Issues</h4>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n         <form>\r\n            <div class=\"row\">\r\n                <label class=\"col-md-12 col-sm-12 col-form-label col-form-label-sm text-sm-left\" for=\"normal-input-1\">Department Name</label>\r\n                <div class=\"col-md-12 col-sm-12 mb-3\">\r\n                   <select   class=\"form-control\" name='deptName'\r\n                   [(ngModel)]=\"selectedObj.deptName\" #deptName=\"ngModel\" required>\r\n                   <option value=\"\">-Select-</option>\r\n                   <option *ngFor=\"let mainDept of mainDeptNames\">{{mainDept?.mainDeptName}}</option>\r\n                   <!-- <option value=\"\">-Select-</option>\r\n                     <option>IT</option>\r\n                     <option>Finance</option> \r\n                     <option>Projects</option>\r\n                     <option>SCM</option>\r\n                     <option>HR</option>\r\n                     <option>Marketing</option>\r\n                     <option>Sales</option>\r\n                     <option>Call Center</option> -->\r\n                   </select>\r\n                    <div *ngIf=\"deptName.invalid && (deptName.dirty || deptName.touched)\" class=\"form-text text-danger\">\r\n                        <div *ngIf=\"deptName.errors.required\"> Department Name is required. </div>\r\n                    </div>\r\n          </div>  \r\n        </div>\r\n           <div class=\"form-group\">\r\n           <!--   <label for=\"recipient-name\" class=\"col-form-label\">Department Name</label>\r\n              <select name=\"dept_id\"  [(ngModel)]=\"selectedObj.dept_id._id\" #dept_id=\"ngModel\" required class=\"form-control\" >\r\n                <option *ngFor=\"let dept of deptNames\" value=\"{{dept._id}}\">{{dept.dept_name}}</option> -->\r\n                <!-- <option>Type 1</option>\r\n                <option>Type 2</option>\r\n                <option>Type 3</option> \r\n              </select>-->\r\n\r\n              <label for=\"recipient-name\" class=\"col-form-label\">Issue Name</label>\r\n              <input type=\"text\" class=\"form-control\"  name='issue_name'\r\n              [(ngModel)]=\"selectedObj.issue_name\" required>\r\n            </div>\r\n          </form>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c(selectedObj)\">Save</button>\r\n    </div>\r\n  </ng-template>\r\n  "],"sourceRoot":"webpack:///"}