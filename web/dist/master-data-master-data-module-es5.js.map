{"version":3,"sources":["webpack:///src/app/content/pages/master-data/user-list/user-list.component.ts","webpack:///src/app/content/pages/master-data/user-list/user-list.component.html","webpack:///src/app/content/pages/master-data/dept/dept.component.ts","webpack:///src/app/content/pages/master-data/dept/dept.component.html","webpack:///src/app/content/pages/master-data/tags/tags.component.ts","webpack:///src/app/content/pages/master-data/tags/tags.component.html","webpack:///src/app/content/pages/master-data/status/status.component.ts","webpack:///src/app/content/pages/master-data/status/status.component.html","webpack:///src/app/content/pages/master-data/sign-out/sign-out.component.ts","webpack:///src/app/content/pages/master-data/sign-out/sign-out.component.html","webpack:///src/app/content/pages/master-data/inactive-userlist/inactive-userlist.component.ts","webpack:///src/app/content/pages/master-data/inactive-userlist/inactive-userlist.component.html","webpack:///src/app/content/pages/master-data/store/store.component.ts","webpack:///src/app/content/pages/master-data/store/store.component.html","webpack:///src/app/content/pages/master-data/master-data.module.ts","webpack:///src/app/content/pages/master-data/user/user.component.ts","webpack:///src/app/content/pages/master-data/user/user.component.html","webpack:///src/app/content/pages/master-data/assign/assign.component.ts","webpack:///src/app/content/pages/master-data/assign/assign.component.html","webpack:///src/app/content/pages/master-data/edit-user/edit-user.component.ts","webpack:///src/app/content/pages/master-data/edit-user/edit-user.component.html","webpack:///node_modules/ngx-csvto-json/__ivy_ngcc__/fesm2015/ngx-csvto-json.js","webpack:///src/app/content/pages/master-data/issues/issues.component.ts","webpack:///src/app/content/pages/master-data/issues/issues.component.html"],"names":["DataTablesResponse","snippets","UserListComponent","router","config","modalService","http","baseService","dtOptions","dtTrigger","status","p","pagingType","pageLength","getUserList","getScreen","$","window","resize","console","log","screen","width","height","a","get","baseUrl","headers","authToken","then","response","data","userListData","temp","checkToken","message","fire","position","icon","title","showConfirmButton","timer","error","email","split","join","post","_id","isActive","content","selObj","selectedObj","id","open","ariaLabelledBy","result","closeResult","put","reason","getDismissReason","ESC","BACKDROP_CLICK","confirm","event","val","target","value","toLowerCase","filter","d","name","indexOf","navigate","queryParams","unsubscribe","updateFilter","selector","templateUrl","styleUrls","DeptComponent","dept_name_edit","tableStatus","dept","convertedObj","sel","selectedObj1","getMainDept","getDept","location","reload","mainDeptNames","deptNames","next","objArray","JSON","stringify","err","finalObj","parse","openDept","formSubmit","convert","onError","save","TagsComponent","tag","tagNames","getTags","form","resetForm","StatusComponent","getStatusNames","statusNames","SignOutComponent","localStorage","clear","InactiveUserlistComponent","StoreComponent","store","getStoreNames","storeNames","appsRoutes","path","component","MasterDataModule","forChild","declarations","imports","schemas","exports","UserComponent","cdRef","csvStatus","newUser","user_type","roleStatus","dropdownList","formModel","dropdownSettings","singleSelection","text","selectAllText","unSelectAllText","enableSearchFilter","classes","getStore","tmp","i","length","push","itemName","store_name","store_id","detectChanges","selectedItems","item","items","showCsv","userTypeData","AssignComponent","assign","getAssignList","assignList","EditUserComponent","_router","snapshot","queryParamMap","getUserById","NgxCSVtoJSONService","ɵfac","NgxCSVtoJSONService_Factory","t","ɵprov","factory","token","providedIn","ctorParameters","type","args","NgxCSVtoJSONComponent","convertedArray","properties","onConvert","onFail","input","files","fileTypes","extension","pop","isSuccess","that","fileToRead","fileReader","FileReader","onload","fileLoadedEvent","textFromFileLoaded","csvContent","flag","objarray","prop","size","line","obj","k","replace","finalResult","emit","readAsText","NgxCSVtoJSONComponent_Factory","ɵcmp","selectors","outputs","decls","vars","consts","template","NgxCSVtoJSONComponent_Template","rf","ctx","NgxCSVtoJSONComponent_Template_input_change_1_listener","$event","onFileSelect","encapsulation","propDecorators","NgxCSVtoJSONModule","ɵmod","ɵinj","NgxCSVtoJSONModule_Factory","ngJitMode","IssuesComponent","issue","getIssues","issuesNames"],"mappings":"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","file":"master-data-master-data-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { Router } from \"@angular/router\"\r\nimport { BaseServiceService } from '@app/services/base-service.service';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport { ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\ndeclare var $ :any;\r\nclass DataTablesResponse {\r\n  data: any[];\r\n  snippets: string = '';\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.scss']\r\n})\r\nexport class UserListComponent implements OnInit {\r\n  dtOptions: DataTables.Settings = {};\r\n  // We use this trigger because fetching the list of persons can be quite long,\r\n  // thus we ensure the data is fetched before rendering\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n  userListData: any;\r\n  temp:any;\r\n  selectedObj:any;\r\n  status: boolean = false ;\r\n  closeResult: string;\r\n  constructor(\r\n    private router: Router,\r\n    config: NgbModalConfig,\r\n     private modalService: NgbModal,\r\n    private http: HttpClient,\r\n    private baseService: BaseServiceService\r\n  ) {}\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      pageLength: 10\r\n    };\r\n\r\n  \r\n\r\n    // if(window.screen.width>= 360 || window.screen.height>=960 )\r\n    // {\r\n    //   this.status=false;\r\n    // }\r\n    this.getUserList();    \r\n    this.getScreen();\r\n  }\r\n\r\n getScreen()\r\n {\r\n  $(window).resize(function() {\r\n    console.log(window.screen.width+\"  \"+window.screen.height)\r\n    if(window.screen.width>=360 || window.screen.height>640 )\r\n    {\r\n      this.status=false;\r\n       console.log(\"If Block\");\r\n    }\r\n    else\r\n   {\r\n    this.status=true;\r\n    console.log(\"else Block\");\r\n   }\r\n});\r\n }\r\n\r\n\r\n  getUserList() {\r\n    axios.get(this.baseService.baseUrl + 'secure/users/active-user_data', {\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n    })\r\n      .then(response => {\r\n         console.log(response);\r\n         if(response.data.status)\r\n         {\r\n         this.userListData=response.data.data;\r\n         this.temp = this.userListData;\r\n\r\n         }\r\n         else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n         {\r\n           \r\n         }\r\n         else{\r\n           Swal.fire({\r\n             position: 'center',\r\n             icon: 'error',\r\n             title: response.data[\"message\"],\r\n             showConfirmButton: false,\r\n             timer: 3000\r\n         })\r\n       }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  ////////////EMail Split\r\n  emailSplit(email)\r\n  {\r\n   return email.split(\",\").join(\"\\n\");   \r\n  }\r\n\r\n  changeStatus(data) {\r\n    axios.post(this.baseService.baseUrl + 'secure/users/user_status',{_id:data._id,isActive:!data.isActive},{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n    })\r\n    .then(response => {        \r\n      console.log(response)\r\n      if (response.data.status) {\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: response.data[\"message\"],\r\n          showConfirmButton: false,\r\n          timer: 3000\r\n      })\r\n      // .then(() => {\r\n      //   location.reload(); });\r\n      this.getUserList();\r\n      }\r\n      else{\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'error',\r\n          title: response.data[\"message\"],\r\n          showConfirmButton: false,\r\n          timer: 3000\r\n      })\r\n       }\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n  // deleteUser(id)\r\n  // {\r\n  //   axios.delete(this.baseService.baseUrl + 'secure/users/user_status'+id,{\r\n  //     headers: {\r\n  //       'x-auth' : this.baseService.authToken\r\n  //     },\r\n  //   })\r\n  //   .then(response => {        \r\n  //     console.log(response)\r\n  //     if (response.data.status) {\r\n  //       Swal.fire({\r\n  //         position: 'center',\r\n  //         icon: 'success',\r\n  //         title: response.data[\"message\"],\r\n  //         showConfirmButton: false,\r\n  //         timer: 3000\r\n  //     }).then(() => {\r\n  //       location.reload(); });\r\n  //     }\r\n  //     else{\r\n  //       Swal.fire({\r\n  //         position: 'center',\r\n  //         icon: 'error',\r\n  //         title: response.data[\"message\"],\r\n  //         showConfirmButton: false,\r\n  //         timer: 3000\r\n  //     })\r\n  //      }\r\n  //   })\r\n  //   .catch(function (error) {\r\n  //     console.log(error)\r\n  //   })\r\n  // }\r\n\r\n  /////////Change Password\r\n  open(content,selObj) {\r\n    console.log(selObj);\r\n    this.selectedObj = selObj;\r\n    this.selectedObj.id=selObj._id;\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      console.log(\"LLLLLLL\",result);\r\n      axios.put(this.baseService.baseUrl + 'secure/users/changePassword',this.selectedObj,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n        \r\n      })\r\n        .then(response => {        \r\n          console.log(response)\r\n          if (response.data. status) {\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'success',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n          // .then(() => {\r\n          //   location.reload(); });\r\n          }\r\n          else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n          {\r\n            \r\n          }\r\n          else{\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'error',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n           }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error)\r\n        })\r\n    }, (reason) => {\r\n      console.log(\"OOOOOOOOOOo\",);\r\n      \r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n  deleteUser(id)\r\n  {\r\n    if(confirm(\"Are You Sure To Delete This Record\"))\r\n    {\r\n      axios.delete(this.baseService.baseUrl + 'secure/users/user_data/'+id,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      })\r\n      .then(response => {        \r\n        console.log(response)\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n        // .then(() => {\r\n        //   location.reload(); });\r\n        this.getUserList();\r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n    //////////Searching\r\n    updateFilter(event) {\r\n      console.log(event)\r\n          const val = event.target.value.toLowerCase();\r\n      \r\n          // filter our data\r\n          const temp = this.temp.filter(function(d) {\r\n            return d.name.toLowerCase().indexOf(val) !== -1 ||\r\n            d.email.toLowerCase().indexOf(val) !== -1 || !val\r\n      \r\n          });\r\n      \r\n          // update the rows\r\n          this.userListData = temp;\r\n          // Whenever the filter changes, always go back to the first page\r\n       \r\n        }\r\n      \r\n\r\n\r\n  p: number = 1;\r\n  pageChange(event){console.log(\"pageChanged\")}\r\n\r\n  editUser(id)\r\n  {\r\n    this.router.navigate(['/master/user-edit'],{queryParams: {id: id}})\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n}\r\n"," <div class=\"row mb-4\">\r\n     <div class=\"col-md-12 text-center mt-2\">\r\n        <h1 class=\"heading\">USER DETAILS</h1>\r\n     </div>\r\n </div>\r\n <div class=\"row mb-4\">\r\n  <div class=\"col-md-2  col-sm-12 ml-4 mr-4\">\r\n   <input type=\"text\" class=\"form-control form-control-sm\"  placeholder=\"Searching...\"   (keyup)=\"updateFilter($event)\">\r\n  </div>\r\n</div>\r\n     <div class=\"row\" >\r\n       <div class=\"col-md-12\">\r\n        <div class=\"card\"   *ngFor=\"let data of userListData  | paginate: { itemsPerPage: 10, currentPage: p };let i = index;\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"name\">\r\n                {{data.name}}\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <div class=\"switchbtn\" >\r\n                <div class=\"switchToggle\">\r\n                  <input type=\"checkbox\" (change)=\"changeStatus(data)\" [checked]=\"data.isActive\"  id=\"switch{{i}}\">\r\n                  <label for=\"switch{{i}}\"></label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n          </div>\r\n          \r\n        <div class=\"row d-flex\">\r\n           <div class=\"col-md-8  col-sm-8\">\r\n             <div class=\"\">{{emailSplit(data.email)}}</div>\r\n            </div>\r\n            <div class=\"col-md-3  col-sm-3 \">\r\n             <!-- <button class=\"btn btn-warning switchbtn\" >Edit</button> -->\r\n             <img  src=\"https://ticket-management.happimobiles.com/assets/images/icon/edit.png\"   height=\"30px\"  (click)=\"editUser(data._id)\"/>\r\n             <img  src=\"https://ticket-management.happimobiles.com/assets/images/icon/key.png\"   height=\"30px\"  (click)=\"open(content,data)\"/>\r\n             <img  src=\"https://ticket-management.happimobiles.com/assets/images/icon/delete.png\"  height=\"30px\"  (click)=\"deleteUser(data._id)\"/>\r\n          </div>\r\n           \r\n        </div>\r\n      </div>\r\n       </div>\r\n      \r\n     </div>\r\n       <div class=\"col-md-12 col-sm-12 col-xl-12\">\r\n                    <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\r\n       </div>\r\n    \r\n\r\n\r\n       <ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n        <div class=\"modal-header\">\r\n          <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Reset Password Of {{selectedObj.name}}</h4>\r\n          <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n             <form>\r\n                <div class=\"form-group\">\r\n                  <label for=\"recipient-name\" class=\"col-form-label\">New Password</label>\r\n                  <input type=\"text\" class=\"form-control\"  name='newPassword'\r\n                  [(ngModel)]=\"selectedObj.newPassword\" #newPassword=\"ngModel\" required>\r\n                </div>\r\n              </form>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c(selectedObj)\">Save</button>\r\n        </div>\r\n      </ng-template>\r\n             \r\n    ","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ModalDismissReasons, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { BaseServiceService } from '@app/services/base-service.service';\r\nimport Axios from 'axios';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\ndeclare var $:any;\r\n@Component({\r\n  selector: 'app-dept',\r\n  templateUrl: './dept.component.html',\r\n  styleUrls: ['./dept.component.scss']\r\n})\r\nexport class DeptComponent implements OnInit {\r\n  model: NgbDateStruct;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n  deptNames: any;\r\n  dept_name_edit:any='';\r\n  tableStatus:boolean=true;\r\n  dept:any={};\r\n  closeResult = '';\r\n  selectedFiles: FileList;\r\n  mainDeptNames:any;\r\n  convertedObj: any = '';\r\n  sel:boolean = false;\r\n  selectedObj:any = {};\r\n  selectedObj1:any = {};\r\n  constructor(private router: Router, private baseService: BaseServiceService,config: NgbModalConfig, private modalService: NgbModal) {     \r\n    this.getMainDept();\r\n    this.getDept();\r\n    \r\n\r\n  }\r\n  formSubmit() {\r\n   \r\n    Axios.post(\r\n      this.baseService.baseUrl + 'secure/department/add_dept', this.dept,\r\n      {\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      \r\n      })\r\n      .then(response => {\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        }).then(() => {\r\n          location.reload(); });\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n /////////Get Main Dept\r\n getMainDept() {\r\n  console.log(\"Dept\");\r\n  Axios.get(this.baseService.baseUrl + 'secure/mainDept/allMainDept',{\r\n    headers: {\r\n      'x-auth' : this.baseService.authToken\r\n    },\r\n    \r\n  })\r\n    .then(response => {        \r\n     \r\n      if (response.data.status) {\r\n        console.log(\"Issue List\");\r\n        this.mainDeptNames = response.data.data;\r\n      }\r\n      else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n      {\r\n        \r\n      }\r\n      else{\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'error',\r\n          title: response.data[\"message\"],\r\n          showConfirmButton: false,\r\n          timer: 3000\r\n      })\r\n       }\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error)\r\n    })\r\n}\r\n\r\n\r\n  getDept() {\r\n    console.log(\"Dept\");\r\n    Axios.get(this.baseService.baseUrl + 'secure/department/get_dept',{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n      \r\n    })\r\n      .then(response => {        \r\n       \r\n        if (response.data.status) {\r\n          console.log(\"Issue List\");\r\n          this.deptNames = response.data.data;\r\n          console.log(this.deptNames);\r\n          console.log(response.data);\r\n          if(this.tableStatus)\r\n          {\r\n            this.dtTrigger.next();\r\n            this.tableStatus=false;\r\n          }\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  open(content,selObj) {\r\n    console.log(selObj);\r\n    this.selectedObj = selObj;\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      console.log(\"LLLLLLL\",result);\r\n      Axios.put(this.baseService.baseUrl + 'secure/department/update_dept/'+result._id,result,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n        \r\n      })\r\n        .then(response => {        \r\n          console.log(response)\r\n          if (response.data. status) {\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'success',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n          this.getDept();\r\n          }\r\n          else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n          {\r\n            \r\n          }\r\n          else{\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'error',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n           }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error)\r\n        })\r\n    }, (reason) => {\r\n      console.log(\"OOOOOOOOOOo\",);\r\n      \r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n  /////////Main Dept\r\n\r\n  openDept(content) {\r\n    // console.log(selObj);\r\n    // this.selectedObj = selObj;\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      console.log(\"LLLLLLL\",result);\r\n      Axios.post(this.baseService.baseUrl + 'secure/mainDept/addMainDept',this.selectedObj1,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n        \r\n      })\r\n        .then(response => {        \r\n          console.log(response)\r\n          if (response.data.status) {\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'success',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n          this.getMainDept();\r\n          }\r\n          else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n          {\r\n            \r\n          }\r\n          else{\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'error',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n           }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error)\r\n        })\r\n    }, (reason) => {\r\n      console.log(\"OOOOOOOOOOo\",);\r\n      \r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n\r\n\r\n  deleteDept(id)\r\n  {\r\n    if(confirm(\"Are You Sure To Delete This Record\"))\r\n    {\r\n    Axios.delete(this.baseService.baseUrl + 'secure/department/delete_dept/'+id,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      })\r\n      .then(response => {        \r\n        console.log(response)\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n        // .then(() => {\r\n        //   location.reload(); });\r\n        this.getDept();\r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  convert(objArray){\r\n    // console.log(objArray);\r\n    this.sel = true;\r\n    this.convertedObj = JSON.stringify(objArray, null, 2);\r\n   }\r\n   onError(err){\r\n     console.log(err);\r\n     this.convertedObj = err;\r\n    //  this.toaster.error(err)\r\n   }\r\n\r\n   save() {\r\n    let finalObj = JSON.parse(this.convertedObj);\r\n    console.log(finalObj);\r\n    Axios.post(this.baseService.baseUrl + 'secure/department/csv', finalObj,{\r\n\t\t  headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n\t\t})\r\n\t\t\t.then(response => {\r\n      console.log(response);\r\n\t       if(response.data.status){\r\n\t\t\t  //  this.toaster.success(response.data.message)\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: response.data[\"message\"],\r\n          showConfirmButton: false,\r\n          timer: 3000\r\n      })\r\n\t\t   }else {\r\n\t\t\t    // this.toaster.error(response.data.message)\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n\t\t   }\r\n\t\t\t   \r\n\t\t\t   \r\n\t\t\t}).catch(function (error) {\r\n\t\t\t\t// handle error\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t})\r\n\t\t\t.finally(function () {\r\n\t\t\t\t// always executed\r\n\t\t\t});\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    \r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      pageLength: 10\r\n    };\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <button class=\"btn btn-warning\" style=\"float: right;margin-bottom:5px;\" (click)=\"openDept(contentOne)\">+ Department</button>  \r\n    <div class=\"card col-md-6 float-center\">\r\n        <div class=\"card-body\">\r\n            <form #deptForm='ngForm' novalidate (ngSubmit)=\"formSubmit()\">\r\n              <div class=\"form-group form-row\">\r\n                <label class=\"col-md-4 col-sm-12 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Department Name</label>\r\n         \r\n                <div class=\"col-md-6 col-sm-12 mb-3\">\r\n                   <select   class=\"form-control\" name='mainDeptName'\r\n                   [(ngModel)]=\"dept.mainDeptName\" #mainDeptName=\"ngModel\" required>\r\n                     <option value=\"\">-Select-</option>\r\n                     <option *ngFor=\"let mainDept of mainDeptNames\">{{mainDept?.mainDeptName}}</option>\r\n                     <!-- <option>IT</option>\r\n                     <option>Finance</option> \r\n                     <option>Projects</option>\r\n                     <option>SCM</option>\r\n                     <option>HR</option>\r\n                     <option>Marketing</option>\r\n                     <option>Sales</option>\r\n                     <option>Call Center</option> -->\r\n                   </select>\r\n                    <div *ngIf=\"mainDeptName.invalid && (mainDeptName.dirty || mainDeptName.touched)\" class=\"form-text text-danger\">\r\n                        <div *ngIf=\"mainDeptName.errors.required\"> Department Name is required. </div>\r\n                    </div>\r\n                </div>\r\n          </div>  \r\n           <div class=\"form-group form-row\">\r\n               <label class=\"col-md-4 col-sm-12 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Designation Name</label>\r\n        \r\n               <div class=\"col-md-6 col-sm-12 mb-3\">\r\n                   <input type=\"text\" class=\"form-control form-control-sm\"  name='dept_name'\r\n                       [(ngModel)]=\"dept.dept_name\" #dept_name=\"ngModel\" required>\r\n       \r\n                   <div *ngIf=\"dept_name.invalid && (dept_name.dirty || dept_name.touched)\" class=\"form-text text-danger\">\r\n                       <div *ngIf=\"dept_name.errors.required\"> Designation is required. </div>\r\n                   </div>\r\n               </div>\r\n         </div>\r\n         <div class=\"form-group form-row\">\r\n          <label class=\"col-md-4 col-sm-4 col-form-label text-sm-right\" for=\"normal-input-1\">Super Admin</label>\r\n   \r\n          <div class=\"col-md-4 col-sm-4 mb-3\">\r\n              <input type=\"checkbox\" class=\"form-control form-control-sm\"  name='isSuperAdmin'\r\n                  [(ngModel)]=\"dept.isSuperAdmin\" #isSuperAdmin=\"ngModel\">\r\n          </div>\r\n    </div>\r\n         <div class=\"form-group form-row\">\r\n          <label class=\"col-md-4 col-sm-4 col-form-label text-sm-right\" for=\"normal-input-1\">Admin</label>\r\n   \r\n          <div class=\"col-md-4 col-sm-4 mb-3\">\r\n              <input type=\"checkbox\" class=\"form-control form-control-sm\"  name='isAdmin'\r\n                  [(ngModel)]=\"dept.isAdmin\" #isAdmin=\"ngModel\">\r\n          </div>\r\n    </div>\r\n    <div class=\"form-group form-row\">\r\n      <label class=\"col-md-4 col-sm-4 col-form-label text-sm-right\" for=\"normal-input-1\">Ticket Allocator</label>\r\n\r\n      <div class=\"col-md-4 col-sm-4 mb-3\">\r\n          <input type=\"checkbox\" class=\"form-control form-control-sm\"  name='ticketAllocator'\r\n              [(ngModel)]=\"dept.ticketAllocator\" #ticketAllocator=\"ngModel\">\r\n      </div>\r\n</div>\r\n<div class=\"form-group form-row\">\r\n  <label class=\"col-md-4 col-sm-4 col-form-label text-sm-right\" for=\"normal-input-1\">User</label>\r\n\r\n  <div class=\"col-md-4 col-sm-4 mb-3\">\r\n      <input type=\"checkbox\" class=\"form-control form-control-sm\"  name='isUser'\r\n          [(ngModel)]=\"dept.isUser\" #isUser=\"ngModel\">\r\n  </div>\r\n</div>\r\n        <div class=\"row mb-2\">\r\n             <div class=\"col-md-12 \">\r\n                 <button class=\"btn btn-primary\" style=\"margin-left:40%;\" [disabled]=\"deptForm.invalid\">Add</button>\r\n             </div>\r\n        </div>\r\n       </form>\r\n       <div class=\"row\">\r\n        <div class=\"col-md-8 mb-2\">\r\n          <Ngx-CSVtoJSON (onConvert)=\"convert($event)\" (onFail)=\"onError($event)\"></Ngx-CSVtoJSON>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n          <button class=\"btn btn-primary\"  style=\"margin-left:40%;\"  (click)=\"save()\"  [disabled]=\"!sel\">Submit</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n   </div>\r\n\r\n   \r\n<div class=\"table-responsive\">\r\n    <table datatable   [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover\" class=\"table table-bordered table-striped\">\r\n        <thead style=\"background-color:#fb9013\">\r\n            <tr>\r\n                <th>\r\n                    S NO\r\n                </th>\r\n                <th>\r\n                    Department Name\r\n             </th>\r\n             <th>\r\n                    Create Date\r\n              </th>\r\n              <th>\r\n                   Actions\r\n              </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let dept of deptNames;let i = index;\">\r\n                <td>{{i+1}}</td>\r\n                <td>{{dept?.dept_name}}</td>\r\n                <td>{{dept?.creationDate | date: 'dd/MM/yyyy'}}</td>\r\n                <td>\r\n                    <img  src=\"assets/images/icon/edit.png\" class=\"switchbtn\"  height=\"30px\"  (click)=\"open(content,dept)\"/>\r\n                    <img  src=\"assets/images/icon/delete.png\" class=\"switchbtn\"  height=\"30px\"  (click)=\"deleteDept(dept._id)\"/>  \r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n </div> \r\n\r\n\r\n<!-- <button class=\"btn btn-lg btn-outline-primary\" (click)=\"open(content)\">Launch demo modal</button> -->\r\n  \r\n <ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n    <div class=\"modal-header\">\r\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">Department</h4>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n         <form>\r\n                <div class=\"form-group form-row\">\r\n                <label class=\"col-md-12 col-sm-12 col-form-label col-form-label-sm text-sm-left\" for=\"normal-input-1\">Department Name</label>\r\n         \r\n                <div class=\"col-md-12 col-sm-12 mb-3\">\r\n                   <select   class=\"form-control\" name='mainDeptName'\r\n                   [(ngModel)]=\"selectedObj.mainDeptName\" #mainDeptName=\"ngModel\" required>\r\n                     <option value=\"\">-Select-</option>\r\n                     <option *ngFor=\"let mainDept of mainDeptNames\">{{mainDept?.mainDeptName}}</option>\r\n                     <!-- <option>Finance</option> \r\n                     <option>Projects</option>\r\n                     <option>SCM</option>\r\n                     <option>HR</option>\r\n                     <option>Marketing</option>\r\n                     <option>Sales</option>\r\n                     <option>Call Center</option> -->\r\n                   </select>\r\n                    <div *ngIf=\"mainDeptName.invalid && (mainDeptName.dirty || mainDeptName.touched)\" class=\"form-text text-danger\">\r\n                        <div *ngIf=\"mainDeptName.errors.required\"> Department Name is required. </div>\r\n                    </div>\r\n                </div>\r\n          </div>  \r\n            <div class=\"form-group form-row mb-2\">\r\n              <label for=\"recipient-name\" class=\"col-form-label\">Designation Name</label>\r\n              <input type=\"text\" class=\"form-control\"  name='dept_name'\r\n              [(ngModel)]=\"selectedObj.dept_name\" required>\r\n            </div>\r\n            <div class=\"form-group form-row\">\r\n              <label class=\"col-md-4 col-sm-4 col-form-label text-sm-right\" for=\"normal-input-1\">Super Admin</label>\r\n       \r\n              <div class=\"col-md-4 col-sm-4 mb-3\">\r\n                  <input type=\"checkbox\" class=\"form-control form-control-sm\"  name='isSuperAdmin'\r\n                      [(ngModel)]=\"selectedObj.isSuperAdmin\" #isSuperAdmin=\"ngModel\">\r\n              </div>\r\n        </div>\r\n            <div class=\"form-group form-row mb-2\">\r\n              <label class=\"col-md-4 col-sm-4 col-form-label text-sm-right\" for=\"normal-input-1\">Admin</label>\r\n       \r\n              <div class=\"col-md-4 col-sm-4 mb-3\">\r\n                  <input type=\"checkbox\" class=\"form-control form-control-sm\"  name='isAdmin'\r\n                      [(ngModel)]=\"selectedObj.isAdmin\"  #isAdmin=\"ngModel\">\r\n              </div>\r\n        </div>\r\n        <div class=\"form-group form-row\">\r\n          <label class=\"col-md-4 col-sm-4 col-form-label text-sm-right\" for=\"normal-input-1\">Ticket Allocator</label>\r\n    \r\n          <div class=\"col-md-4 col-sm-4 mb-3\">\r\n              <input type=\"checkbox\" class=\"form-control form-control-sm\"  name='ticketAllocator'\r\n                  [(ngModel)]=\"selectedObj.ticketAllocator\" #ticketAllocator=\"ngModel\">\r\n          </div>\r\n    </div>\r\n    <div class=\"form-group form-row\">\r\n      <label class=\"col-md-4 col-sm-4 col-form-label text-sm-right\" for=\"normal-input-1\">User</label>\r\n    \r\n      <div class=\"col-md-4 col-sm-4 mb-3\">\r\n          <input type=\"checkbox\" class=\"form-control form-control-sm\"  name='isUser'\r\n              [(ngModel)]=\"selectedObj.isUser\" #isUser=\"ngModel\">\r\n      </div>\r\n    </div>\r\n          </form>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c(selectedObj)\">Save</button>\r\n    </div>\r\n  </ng-template>\r\n  \r\n  <!---Add New Designation-->\r\n    \r\n <ng-template #contentOne let-c=\"close\" let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Department</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n       <form>\r\n          <div class=\"form-group form-row mb-2\">\r\n            <label for=\"recipient-name\" class=\"col-form-label\">Department Name</label>\r\n            <input type=\"text\" class=\"form-control\"  name='mainDeptName'\r\n            [(ngModel)]=\"selectedObj1.mainDeptName\" required>\r\n            <!-- <div *ngIf=\"mainDeptName.invalid && (mainDeptName.dirty || mainDeptName.touched)\" class=\"form-text text-danger\">\r\n              <div *ngIf=\"mainDeptName.errors.required\"> Designation Name is required. </div>\r\n          </div> -->\r\n          </div>\r\n\r\n        </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c(selectedObj)\">Add</button>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ModalDismissReasons, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BaseServiceService } from '@app/services/base-service.service';\r\nimport Axios from 'axios';\r\nimport { Subject } from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-tags',\r\n  templateUrl: './tags.component.html',\r\n  styleUrls: ['./tags.component.scss']\r\n})\r\nexport class TagsComponent implements OnInit {\r\n  model: NgbDateStruct;\r\n  dtOptions: DataTables.Settings = {};\r\n  closeResult = '';\r\n  selectedObj:any = {};\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n  tag:any={}\r\n  tagNames: any=[];\r\n  constructor(private router: Router, private baseService: BaseServiceService,config: NgbModalConfig, private modalService: NgbModal) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      pageLength: 10\r\n    };\r\n   this.getTags(); \r\n  }\r\n\r\n  formSubmit(form:NgForm) {\r\n   console.log(this.baseService.authToken)\r\n    Axios.post(\r\n      this.baseService.baseUrl + 'secure/tags/addTag_Name', this.tag,\r\n      {\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      })\r\n      .then(response => {\r\n        console.log(response);\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n        // .then(() => {\r\n        //   location.reload();  });  //\r\n        form.resetForm('');\r\n        this.getTags();\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n  getTags() {\r\n    Axios.get(this.baseService.baseUrl + 'secure/tags/allTags',{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n      \r\n    })\r\n      .then(response => {        \r\n        if (response.data.status) {\r\n          this.tagNames = response.data.data;\r\n          console.log(this.tagNames);\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  open(content,selObj) {\r\n    console.log(selObj);\r\n    this.selectedObj = selObj;\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      console.log(\"LLLLLLL\",result);\r\n      Axios.put(this.baseService.baseUrl + 'secure/tags/update_tags/'+result._id,result,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n        \r\n      })\r\n        .then(response => {        \r\n          console.log(response)\r\n          if (response.data. status) {\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'success',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n          // .then(() => {\r\n          //   location.reload(); });\r\n          this.getTags();\r\n          }\r\n          else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n          {\r\n            \r\n          }\r\n          else{\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'error',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n           }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error)\r\n        })\r\n    }, (reason) => {\r\n      console.log(\"OOOOOOOOOOo\",);\r\n      \r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n\r\n  deleteDept(id)\r\n  {\r\n    if(confirm(\"Are You Sure To Delete This Record\"))\r\n    {\r\n    Axios.delete(this.baseService.baseUrl + 'secure/tags/delete_tags/'+id,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      })\r\n      .then(response => {        \r\n        console.log(response)\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n        // .then(() => {\r\n        //   location.reload(); });\r\n        this.getTags();\r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n <div class=\"card col-md-6 float-center\">\r\n     <div class=\"card-body\">\r\n         <form #TagForm='ngForm' novalidate (ngSubmit)=\"formSubmit(TagForm)\">\r\n        <div class=\"form-group form-row\">\r\n            <label class=\"col-md-4 col-sm-4 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Tag Name</label>\r\n     \r\n            <div class=\"col-md-6 col-sm-8 mb-3\">\r\n                <input type=\"text\" class=\"form-control form-control-sm\"  name='tag_name'\r\n                    [(ngModel)]=\"tag.tag_name\" #tag_name=\"ngModel\" required>\r\n    \r\n                <div *ngIf=\"tag_name.invalid && (tag_name.dirty || tag_name.touched)\" class=\"form-text text-danger\">\r\n                    <div *ngIf=\"tag_name.errors.required\"> Tag Name is required. </div>\r\n                </div>\r\n            </div>\r\n     </div>\r\n     <div class=\"row\">\r\n          <div class=\"col-md-12\">\r\n              <button class=\"btn btn-primary offset-4\">Add</button>\r\n          </div>\r\n     </div>\r\n    </form>\r\n </div>\r\n</div>\r\n\r\n<div class=\"table-responsive\">\r\n   <table datatable   [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover\" class=\"table table-bordered table-striped\">\r\n       <thead style=\"background-color:#fb9013\">\r\n           <tr>\r\n               <th>\r\n                   S NO\r\n               </th>\r\n               <th>\r\n                   Tag Name\r\n            </th>\r\n            <th>\r\n                   Create Date\r\n             </th>\r\n             <th>\r\n                Actions\r\n           </th>\r\n           </tr>\r\n       </thead>\r\n       <tbody>\r\n           <tr *ngFor=\"let tag of tagNames;let i = index;\">\r\n               <td>{{i+1}}</td>\r\n               <td>{{tag?.tag_name}}</td>\r\n               <td>{{tag?.creationDate | date: 'dd/MM/yyyy'}}</td>\r\n               <td>\r\n                <img  src=\"assets/images/icon/edit.png\" class=\"switchbtn\"  height=\"30px\"  (click)=\"open(content,tag)\"/>\r\n                <img  src=\"assets/images/icon/delete.png\" class=\"switchbtn\"  height=\"30px\"  (click)=\"deleteDept(tag._id)\"/>  \r\n            </td>\r\n           </tr>\r\n       </tbody>\r\n   </table>\r\n</div> \r\n\r\n<ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n    <div class=\"modal-header\">\r\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">Tags</h4>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n         <form>\r\n            <div class=\"form-group\">\r\n              <label for=\"recipient-name\" class=\"col-form-label\">Department Name</label>\r\n              <input type=\"text\" class=\"form-control\"  name='tag_name'\r\n              [(ngModel)]=\"selectedObj.tag_name\" required>\r\n            </div>\r\n          </form>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c(selectedObj)\">Save</button>\r\n    </div>\r\n  </ng-template>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ModalDismissReasons, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BaseServiceService } from '@app/services/base-service.service';\r\nimport Axios from 'axios';\r\nimport { Subject } from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-status',\r\n  templateUrl: './status.component.html',\r\n  styleUrls: ['./status.component.scss']\r\n})\r\nexport class StatusComponent implements OnInit {\r\n  model: NgbDateStruct;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n  status:any={}\r\n  statusNames: any;\r\n  tableStatus:boolean=true;\r\n  closeResult = '';\r\n  selectedObj:any = {};\r\n  constructor(private router: Router, private baseService: BaseServiceService,config: NgbModalConfig, private modalService: NgbModal) { \r\n    this.getStatusNames();\r\n  }\r\n\r\n  formSubmit(form:NgForm) {\r\n   \r\n    Axios.post(\r\n      this.baseService.baseUrl + 'secure/status/addStatus', this.status,\r\n      {\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      })\r\n      .then(response => {\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n        // .then(() => {\r\n        //   location.reload(); });\r\n         form.resetForm('');\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  getStatusNames() {\r\n    Axios.get(this.baseService.baseUrl + 'secure/status/allStatus',{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n    })\r\n      .then(response => { \r\n        if (response.data.status) {\r\n          this.statusNames = response.data.data;\r\n          console.log(this.statusNames);\r\n          console.log(response.data);\r\n          if(this.tableStatus)\r\n          {\r\n            this.tableStatus=false;\r\n          this.dtTrigger.next();\r\n          }\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      }) \r\n  }\r\n\r\n  open(content,selObj) {\r\n    console.log(selObj);\r\n    this.selectedObj = selObj;\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      console.log(\"LLLLLLL\",result);\r\n      Axios.put(this.baseService.baseUrl + 'secure/status/update_status/'+result._id,result,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n        \r\n      })\r\n        .then(response => {        \r\n          console.log(response)\r\n          if (response.data. status) {\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'success',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n          // .then(() => {\r\n          //   location.reload(); });\r\n          this.getStatusNames();\r\n          }\r\n          else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n          {\r\n            \r\n          }\r\n          else{\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'error',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n           }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error)\r\n        })\r\n    }, (reason) => {\r\n      console.log(\"OOOOOOOOOOo\",);\r\n      \r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n\r\n  deleteDept(id)\r\n  {\r\n    if(confirm(\"Are You Sure To Delete This Record\"))\r\n    {\r\n    Axios.delete(this.baseService.baseUrl + 'secure/status/delete_status/'+id,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      })\r\n      .then(response => {        \r\n        console.log(response)\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n        // .then(() => {\r\n        //   location.reload(); });\r\n        this.getStatusNames();\r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n    }\r\n  }\r\n  \r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"card col-md-6 float-center\">\r\n        <div class=\"card-body\">\r\n            <form #statusForm='ngForm' novalidate (ngSubmit)=\"formSubmit(statusForm)\">\r\n           <div class=\"form-group form-row\">\r\n               <label class=\"col-md-4 col-sm-4 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Status Name</label>\r\n        \r\n               <div class=\"col-md-6 col-sm-8 mb-3\">\r\n                   <input type=\"text\" class=\"form-control form-control-sm\"  name='status_name'\r\n                       [(ngModel)]=\"status.status_name\" #status_name=\"ngModel\" required>\r\n       \r\n                   <div *ngIf=\"status_name.invalid && (status_name.dirty || status_name.touched)\" class=\"form-text text-danger\">\r\n                       <div *ngIf=\"status_name.errors.required\"> status Name is required. </div>\r\n                   </div>\r\n               </div>\r\n        </div>\r\n        <div class=\"row\">\r\n             <div class=\"col-md-12\">\r\n                 <button class=\"btn btn-primary offset-4\" [disabled]=\"statusForm.invalid\">Add</button>\r\n             </div>\r\n        </div>\r\n       </form>\r\n    </div>\r\n   </div>\r\n\r\n   \r\n<div class=\"table-responsive\">\r\n    <table datatable   [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover\" class=\"table table-bordered table-striped\">\r\n        <thead style=\"background-color:#fb9013;\">\r\n            <tr>\r\n                <th>\r\n                    S NO\r\n                </th>\r\n                <th>\r\n                    Status Name\r\n             </th>\r\n             <th>\r\n                    Create Date\r\n              </th>\r\n              <th>\r\n                Actions\r\n           </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let status of statusNames;let i = index;\">\r\n                <td>{{i+1}}</td>\r\n                <td>{{status?.status_name}}</td>\r\n                <td>{{status?.creationDate | date: 'dd/MM/yyyy'}}</td>\r\n                <td>\r\n                    <img  src=\"assets/images/icon/edit.png\" class=\"switchbtn\"  height=\"30px\"  (click)=\"open(content , status)\"/>\r\n                    <img  src=\"assets/images/icon/delete.png\" class=\"switchbtn\"  height=\"30px\"  (click)=\"deleteDept(status._id)\"/>  \r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n\r\n    <ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n        <div class=\"modal-header\">\r\n          <h4 class=\"modal-title\" id=\"modal-basic-title\">Status</h4>\r\n          <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n             <form>\r\n                <div class=\"form-group\">\r\n                  <label for=\"recipient-name\" class=\"col-form-label\">Status Name</label>\r\n                  <input type=\"text\" class=\"form-control\"  name='status_name'\r\n                  [(ngModel)]=\"selectedObj.status_name\" required>\r\n                </div>\r\n              </form>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c(selectedObj)\">Save</button>\r\n        </div>\r\n      </ng-template>\r\n\r\n </div> ","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-sign-out',\r\n  templateUrl: './sign-out.component.html',\r\n  styleUrls: ['./sign-out.component.scss']\r\n})\r\nexport class SignOutComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { \r\n    if(confirm(\"Do You Want Sign Out\"))\r\n    {\r\n        window.localStorage.clear();\r\n       this.router.navigate(['/signin'])\r\n    }\r\n    else\r\n    {\r\n      \r\n      this.router.navigate(['/ticket/ticket-list'])\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>sign-out works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { Router } from \"@angular/router\"\r\nimport { BaseServiceService } from '@app/services/base-service.service';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\ndeclare var $ :any;\r\n\r\n@Component({\r\n  selector: 'app-inactive-userlist',\r\n  templateUrl: './inactive-userlist.component.html',\r\n  styleUrls: ['./inactive-userlist.component.scss']\r\n})\r\nexport class InactiveUserlistComponent implements OnInit {\r\n  userListData: any;\r\n  status: boolean = false ;\r\n  temp:any;\r\n  constructor(\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private baseService: BaseServiceService\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getUserList();    \r\n    this.getScreen();\r\n  }\r\n\r\n  getScreen()\r\n {\r\n  $(window).resize(function() {\r\n    console.log(window.screen.width+\"  \"+window.screen.height)\r\n    if(window.screen.width>=360 || window.screen.height>640 )\r\n    {\r\n      this.status=false;\r\n       console.log(\"If Block\");\r\n    }\r\n    else\r\n   {\r\n    this.status=true;\r\n    console.log(\"else Block\");\r\n   }\r\n});\r\n }\r\n\r\n\r\n  getUserList() {\r\n    axios.get(this.baseService.baseUrl + 'secure/users/inactive-user_data', {\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n    })\r\n      .then(response => {\r\n         console.log(response);\r\n         if(response.data.status)\r\n         {\r\n         this.userListData=response.data.data;\r\n         this.temp = this.userListData;\r\n         }\r\n         else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n         {\r\n           \r\n         }\r\n         else{\r\n           Swal.fire({\r\n             position: 'center',\r\n             icon: 'error',\r\n             title: response.data[\"message\"],\r\n             showConfirmButton: false,\r\n             timer: 3000\r\n         })\r\n       }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  changeStatus(data) {\r\n    axios.post(this.baseService.baseUrl + 'secure/users/user_status',{_id:data._id,isActive:!data.isActive},{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n    })\r\n    .then(response => {        \r\n      console.log(response)\r\n      if (response.data.status) {\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: response.data[\"message\"],\r\n          showConfirmButton: false,\r\n          timer: 3000\r\n      })\r\n      // .then(() => {\r\n      //   location.reload(); });\r\n      this.getUserList();\r\n      }\r\n      else{\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'error',\r\n          title: response.data[\"message\"],\r\n          showConfirmButton: false,\r\n          timer: 3000\r\n      })\r\n       }\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n  // deleteUser(id)\r\n  // {\r\n  //   axios.delete(this.baseService.baseUrl + 'secure/users/user_status'+id,{\r\n  //     headers: {\r\n  //       'x-auth' : this.baseService.authToken\r\n  //     },\r\n  //   })\r\n  //   .then(response => {        \r\n  //     console.log(response)\r\n  //     if (response.data.status) {\r\n  //       Swal.fire({\r\n  //         position: 'center',\r\n  //         icon: 'success',\r\n  //         title: response.data[\"message\"],\r\n  //         showConfirmButton: false,\r\n  //         timer: 3000\r\n  //     }).then(() => {\r\n  //       location.reload(); });\r\n  //     }\r\n  //     else{\r\n  //       Swal.fire({\r\n  //         position: 'center',\r\n  //         icon: 'error',\r\n  //         title: response.data[\"message\"],\r\n  //         showConfirmButton: false,\r\n  //         timer: 3000\r\n  //     })\r\n  //      }\r\n  //   })\r\n  //   .catch(function (error) {\r\n  //     console.log(error)\r\n  //   })\r\n  // }\r\n\r\n  deleteUser(id)\r\n  {\r\n    if(confirm(\"Are You Sure To Delete This Record\"))\r\n    {\r\n      axios.delete(this.baseService.baseUrl + 'secure/users/user_data/'+id,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      })\r\n      .then(response => {        \r\n        console.log(response)\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n        // .then(() => {\r\n        //   location.reload(); });\r\n        this.getUserList();\r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  //////////Searching\r\n  updateFilter(event) {\r\nconsole.log(event)\r\n    const val = event.target.value.toLowerCase();\r\n\r\n    // filter our data\r\n    const temp = this.temp.filter(function(d) {\r\n      return d.name.toLowerCase().indexOf(val) !== -1 ||\r\n      d.email.toLowerCase().indexOf(val) !== -1 || !val\r\n\r\n    });\r\n\r\n    // update the rows\r\n    this.userListData = temp;\r\n    // Whenever the filter changes, always go back to the first page\r\n \r\n  }\r\n\r\n\r\n  p: number = 1;\r\n  pageChange(event){console.log(\"pageChanged\")}\r\n\r\n  editUser(id)\r\n  {\r\n    this.router.navigate(['/master/user-edit'],{queryParams: {id: id}})\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"row mb-4\">\r\n    <div class=\"col-md-12 text-center mt-2\">\r\n       <h1 class=\"heading\">IN ACTIVE USER DETAILS</h1>\r\n    </div>\r\n</div>\r\n<div class=\"row mb-4\">\r\n   <div class=\"col-md-2  col-sm-12 ml-4 mr-4\">\r\n    <input type=\"text\" class=\"form-control form-control-sm\"  placeholder=\"Searching...\"   (keyup)=\"updateFilter($event)\">\r\n   </div>\r\n</div>\r\n    <div class=\"row\" >\r\n      <div class=\"col-md-12\">\r\n       <div class=\"card\"   *ngFor=\"let data of userListData  | paginate: { itemsPerPage: 10, currentPage: p };let i = index;\">\r\n         <div class=\"row\">\r\n           <div class=\"col-md-6\">\r\n             <div class=\"name\">\r\n               {{data.name}}\r\n             </div>\r\n           </div>\r\n           <div class=\"col-md-6\">\r\n             <div class=\"switchbtn\" >\r\n               <div class=\"switchToggle\">\r\n                 <input type=\"checkbox\" (change)=\"changeStatus(data)\" [checked]=\"data.isActive\"  id=\"switch{{i}}\">\r\n                 <label for=\"switch{{i}}\"></label>\r\n               </div>\r\n             </div>\r\n           </div>\r\n           \r\n         </div>\r\n         \r\n       <div class=\"row d-flex\">\r\n          <div class=\"col-md-8  col-sm-8 \">\r\n            <div class=\"m-2\">{{data.email}}</div>\r\n           </div>\r\n           <div class=\"col-md-3  col-sm-3\">\r\n            <!-- <button class=\"btn btn-warning switchbtn\" >Edit</button> -->\r\n            <img  src=\"https://ticket-management.happimobiles.com/assets/images/icon/edit.png\"   height=\"30px\"  (click)=\"editUser(data._id)\"/>\r\n            <img  src=\"https://ticket-management.happimobiles.com/assets/images/icon/delete.png\"  height=\"30px\"  (click)=\"deleteUser(data._id)\"/>\r\n         </div>\r\n          \r\n       </div>\r\n     </div>\r\n      </div>\r\n     \r\n    </div>\r\n      <div class=\"col-md-12 col-sm-12 col-xl-12\">\r\n                   <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\r\n      </div>\r\n   \r\n   ","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ModalDismissReasons, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BaseServiceService } from '@app/services/base-service.service';\r\nimport Axios from 'axios';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Subject } from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\nimport { NgForm } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-store',\r\n  templateUrl: './store.component.html',\r\n  styleUrls: ['./store.component.scss']\r\n})\r\nexport class StoreComponent implements OnInit {\r\n  model: NgbDateStruct;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n  store:any={}\r\n  storeNames: any;\r\n  tableStatus:boolean=true;\r\n  closeResult = '';\r\n  selectedObj:any = {};\r\n  constructor(private router: Router, private baseService: BaseServiceService,config: NgbModalConfig, private modalService: NgbModal) {\r\n    this.getStoreNames();\r\n  }\r\n\r\n  formSubmit(form:NgForm) {\r\n   \r\n    Axios.post(\r\n      this.baseService.baseUrl + 'secure/store/addStore', this.store,\r\n      {\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      })\r\n      .then(response => {\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n        // .then(() => {\r\n        //   location.reload(); }); \r\n        form.resetForm(\"\");\r\n        this.getStoreNames();\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  getStoreNames() {\r\n    Axios.get(this.baseService.baseUrl + 'secure/store/allStore',{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n    })\r\n      .then(response => { \r\n        if (response.data.status) {\r\n          this.storeNames = response.data.data;\r\n          console.log(this.storeNames);\r\n          console.log(response.data);\r\n          if(this.tableStatus)\r\n          {\r\n            this.dtTrigger.next();\r\n            this.tableStatus=false;\r\n          }\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  open(content,selObj) {\r\n    console.log(selObj);\r\n    this.selectedObj = selObj;\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      console.log(\"LLLLLLL\",result);\r\n      Axios.put(this.baseService.baseUrl + 'secure/store/update_store/'+result._id,result,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n        \r\n      })\r\n        .then(response => {        \r\n          console.log(response)\r\n          if (response.data. status) {\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'success',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n          // .then(() => {\r\n            // location.reload(); });\r\n            this.getStoreNames();\r\n          }\r\n          else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n          {\r\n            \r\n          }\r\n          else{\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'error',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n           }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error)\r\n        })\r\n    }, (reason) => {\r\n      console.log(\"OOOOOOOOOOo\",);\r\n      \r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n\r\n  deleteDept(id)\r\n  {\r\n    if(confirm(\"Are You Sure To Delete This Record\"))\r\n    {\r\n    Axios.delete(this.baseService.baseUrl + 'secure/store/delete_store/'+id,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      })\r\n      .then(response => {        \r\n        console.log(response)\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n        // .then(() => {\r\n        //   location.reload(); });\r\n        this.getStoreNames();\r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  \r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"card col-md-6 float-center\">\r\n        <div class=\"card-body\">\r\n            <form #statusForm='ngForm' novalidate (ngSubmit)=\"formSubmit(statusForm)\">\r\n           <div class=\"form-group form-row\">\r\n               <label class=\"col-md-4 col-sm-4 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Store Name</label>\r\n        \r\n               <div class=\"col-md-6 col-sm-8 mb-3\">\r\n                   <input type=\"text\" class=\"form-control form-control-sm\"  name='store_name'\r\n                       [(ngModel)]=\"store.store_name\" #store_name=\"ngModel\" required>\r\n       \r\n                   <div *ngIf=\"store_name.invalid && (store_name.dirty || store_name.touched)\" class=\"form-text text-danger\">\r\n                       <div *ngIf=\"store_name.errors.required\"> Store Name is required. </div>\r\n                   </div>\r\n               </div>\r\n        </div>\r\n        <div class=\"row\">\r\n             <div class=\"col-md-12\">\r\n                 <button class=\"btn btn-primary offset-4\" [disabled]=\"statusForm.invalid\">Add</button>\r\n             </div>\r\n        </div>\r\n       </form>\r\n    </div>\r\n   </div>\r\n\r\n   \r\n<div class=\"table-responsive\">\r\n    <table  datatable   [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover\" class=\"table table-bordered table-striped\">\r\n        <thead style=\"background-color:#fb9013;\">\r\n            <tr>\r\n                <th>\r\n                    S NO\r\n                </th>\r\n                <th>\r\n                    Store Name\r\n             </th>\r\n             <th>\r\n                    Create Date\r\n              </th>\r\n              <th>\r\n                Actions\r\n           </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let store of storeNames;let i = index;\">\r\n                <td>{{i+1}}</td>\r\n                <td>{{store?.store_name}}</td>\r\n                <td>{{store?.creationDate | date: 'dd/MM/yyyy'}}</td>\r\n                <td>\r\n                    <img  src=\"assets/images/icon/edit.png\" class=\"switchbtn\"  height=\"30px\"  (click)=\"open(content,store)\"/>\r\n                    <img  src=\"assets/images/icon/delete.png\" class=\"switchbtn\"  height=\"30px\"  (click)=\"deleteDept(store._id)\"/>  \r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n </div> \r\n   \r\n <ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n    <div class=\"modal-header\">\r\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">Store</h4>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n         <form>\r\n            <div class=\"form-group\">\r\n              <label for=\"recipient-name\" class=\"col-form-label\">Store Name</label>\r\n              <input type=\"text\" class=\"form-control\"  name='store_name'\r\n              [(ngModel)]=\"selectedObj.store_name\" required>\r\n            </div>\r\n          </form>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c(selectedObj)\">Save</button>\r\n    </div>\r\n  </ng-template>\r\n\r\n</div>\r\n ","import { NgModule,CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\r\nimport { TagsComponent } from './tags/tags.component';\r\nimport { StatusComponent } from './status/status.component';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { AssignComponent } from './assign/assign.component';\r\nimport { IssuesComponent } from './issues/issues.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { DeptComponent } from './dept/dept.component';\r\nimport { UserListComponent } from './user-list/user-list.component';\r\nimport { SignOutComponent } from './sign-out/sign-out.component';\r\nimport { StoreComponent } from './store/store.component';\r\nimport { EditUserComponent } from './edit-user/edit-user.component';\r\nimport {NgxCSVtoJSONModule} from 'ngx-csvto-json';\r\nimport { InactiveUserlistComponent } from './inactive-userlist/inactive-userlist.component';\r\n\r\nconst appsRoutes: Routes = [\r\n  {\r\n    path: 'tag-entry',\r\n    component: TagsComponent\r\n  },\r\n  {\r\n    path: 'status-entry',\r\n    component: StatusComponent\r\n  },\r\n  {\r\n    path: 'assign-entry',\r\n    component: AssignComponent\r\n  },\r\n  {\r\n    path: 'department-entry',\r\n    component: DeptComponent\r\n  },\r\n  {\r\n    path: 'issue-entry',\r\n    component: IssuesComponent\r\n  },\r\n  {\r\n    path: 'add-user',\r\n    component: UserComponent\r\n  },\r\n  {\r\n    path: 'add-store',\r\n    component: StoreComponent\r\n  },\r\n  {\r\n    path: 'user-list',\r\n    component: UserListComponent\r\n  },\r\n  {\r\n    path: 'inactive-users',\r\n    component: InactiveUserlistComponent\r\n  },\r\n  {\r\n    path: 'user-edit',\r\n    component: EditUserComponent\r\n  },\r\n  {\r\n    path: 'signout',\r\n    component: SignOutComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [TagsComponent, StatusComponent, AssignComponent, IssuesComponent, UserComponent, DeptComponent, UserListComponent, SignOutComponent, StoreComponent, EditUserComponent, InactiveUserlistComponent],\r\n  imports: [\r\n    CommonModule,\r\n    NgxPaginationModule,\r\n    ReactiveFormsModule,\r\n    AngularMultiSelectModule,\r\n    NgxCSVtoJSONModule,\r\n    FormsModule,\r\n    DataTablesModule,\r\n   \r\n    RouterModule.forChild(appsRoutes)\r\n  ],\r\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\r\n  exports:[TagsComponent, StatusComponent, SignOutComponent,StoreComponent, AssignComponent,IssuesComponent,DeptComponent,UserComponent,UserListComponent,SignOutComponent,EditUserComponent,InactiveUserlistComponent]\r\n})\r\nexport class MasterDataModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BaseServiceService } from '@app/services/base-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\nimport Axios from 'axios';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss']\r\n})\r\nexport class UserComponent implements OnInit {\r\n  model: NgbDateStruct;\r\n  csvStatus:boolean = false;\r\n  newUser:any = {\r\n    user_type:\"Corporate\"\r\n  };\r\n  roleStatus:boolean=true;\r\n  deptNames: any;\r\n  storeNames: any;\r\n  dropdownList = [];\r\n  formModel = {\r\n    \"selectedItems\": []\r\n  };\r\n\tdropdownSettings = {};\r\n  // selectedFiles: FileList;\r\n  convertedObj: any = '';\r\n  sel:boolean = false;\r\n  constructor(private router: Router, private cdRef:ChangeDetectorRef, private baseService:BaseServiceService) { \r\n    this.dropdownSettings = {\r\n\t\t\tsingleSelection: true,\r\n\t\t\ttext: \"Select Menu List\",\r\n\t\t\tselectAllText: 'Select All',\r\n\t\t\tunSelectAllText: 'UnSelect All',\r\n\t\t\tenableSearchFilter: true,\r\n\t\t\tclasses: \"myclass custom-class\"\r\n    };\r\n    this.getDept();\r\n    this.getStore();\r\n  }\r\n\r\n  getDept() {\r\n    console.log(\"Dept\");\r\n    Axios.get(this.baseService.baseUrl + 'secure/department/get_dept',{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n      \r\n    })\r\n      .then(response => {        \r\n       \r\n        if (response.data.status) {\r\n          console.log(\"Issue List\");\r\n          this.deptNames = response.data.data;\r\n          console.log(this.deptNames);\r\n          console.log(response.data);\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  getStore() {\r\n    console.log(\"Store\");\r\n    Axios.get(this.baseService.baseUrl + 'secure/store/allStore',{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n      \r\n    })\r\n      .then(response => {        \r\n       \r\n        if (response.data.status) {\r\n          console.log(\"Issue List\");\r\n          this.storeNames = response.data.data;\r\n          let tmp = [];\r\n          for(let i=0; i < this.storeNames .length; i++) {\r\n            tmp.push({ id: this.storeNames[i]._id, itemName: this.storeNames[i].store_name });\r\n          }\r\n          this.dropdownList = tmp;\r\n        console.log(\"DropDown Data\");\r\n        console.log(this.dropdownList);\r\n          console.log(this.storeNames);\r\n          console.log(response.data);\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  \r\n  convert(objArray){\r\n    // console.log(objArray);\r\n    this.sel = true;\r\n    this.convertedObj = JSON.stringify(objArray, null, 2);\r\n   }\r\n   onError(err){\r\n     console.log(err);\r\n     this.convertedObj = err;\r\n    //  this.toaster.error(err)\r\n   }\r\n\r\n   save() {\r\n    let finalObj = JSON.parse(this.convertedObj);\r\n    console.log(finalObj.store_id);\r\n    console.log(finalObj);\r\n    Axios.post(this.baseService.baseUrl + 'secure/users/usercsv', finalObj,{\r\n\t\t  headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n\t\t})\r\n\t\t\t.then(response => {\r\n      console.log(response);\r\n\t       if(response.data.status){\r\n\t\t\t  //  this.toaster.success(response.data.message)\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: response.data[\"message\"],\r\n          showConfirmButton: false,\r\n          timer: 3000\r\n      })\r\n\t\t   }else {\r\n\t\t\t    // this.toaster.error(response.data.message)\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n\t\t   }\r\n\t\t\t   \r\n\t\t\t   \r\n\t\t\t}).catch(function (error) {\r\n\t\t\t\t// handle error\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t})\r\n\t\t\t.finally(function () {\r\n\t\t\t\t// always executed\r\n\t\t\t});\r\n}\r\n\r\n\r\n  showCsv()\r\n  {\r\n    this.csvStatus=!this.csvStatus;\r\n  }\r\n\r\n  userTypeData(data)\r\n  {\r\n   if(data==\"Store\")\r\n   {\r\n    this.roleStatus=false;\r\n    this.newUser.user_type=\"Store\";\r\n    // this.newUser.role={\r\n    //   isAdmin:false,\r\n    //   isUser:true\r\n    // }\r\n   }\r\n   else if(data == \"Corporate\")\r\n   {\r\n    this.roleStatus=true;\r\n    this.newUser.user_type=\"Corporate\";\r\n   }\r\n   else\r\n   {\r\n    this.dropdownSettings = {\r\n\t\t\tsingleSelection: false,\r\n\t\t\ttext: \"Select Menu List\",\r\n\t\t\tselectAllText: 'Select All',\r\n\t\t\tunSelectAllText: 'UnSelect All',\r\n\t\t\tenableSearchFilter: true,\r\n\t\t\tclasses: \"myclass custom-class\"\r\n    };\r\n    this.newUser.user_type=\"Sales\";\r\n   }\r\n  }\r\n\r\n  ngAfterViewChecked()\r\n  {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  formSubmit(form:NgForm)\r\n  {\r\n    this.newUser.store_id=[];\r\n    for(let i=0;i<this.formModel.selectedItems.length;i++)\r\n    {\r\n      this.newUser.store_id.push(this.formModel.selectedItems[i].id)\r\n    }\r\n    console.log(this.newUser);\r\n    Axios.post(this.baseService.baseUrl + 'secure/users/add_User',this.newUser,{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n      \r\n    })\r\n      .then(response => {        \r\n        console.log(response)\r\n        if (response.data. status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n        // .then(() => {\r\n        //   location.reload();\r\n        //  });\r\n         form.resetForm(\"\");\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onItemSelect(item: any) {\r\n    console.log(\"on Select Item...\");\r\n    console.log(this.formModel.selectedItems);\r\n    // for(let i=0;i<this.formModel.selectedItems.length;i++)\r\n    // {\r\n    // this.newTicket.tags.push(this.formModel.selectedItems[i].id);\r\n    // }\r\n    console.log(\"Tag Names\");\r\n    // this.newTicket.tags.push(this.formModel.selectedItems)\r\n\t\t// console.log(this.formModel.selectedItems);\r\n\t}\r\n\tOnItemDeSelect(item: any) {\r\n\t\tconsole.log(item);\r\n\t\t// console.log(this.formModel.selectedItems);\r\n\t}\r\n\tonSelectAll(items: any) {\r\n    console.log(\"On Select All\");\r\n    console.log(this.formModel.selectedItems);\r\n    // this.tags.push(this.formModel.selectedItems);\r\n\t}\r\n\tonDeSelectAll(items: any) {\r\n\t\tconsole.log(items);\r\n\t}\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"usercard\">\r\n        <div class=\"card-header cheader\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12 text-center\">\r\n            <h1 style=\"color: white;\">New User </h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n             <input type=\"checkbox\" class=\"mt-4 ml-4 mr-3\" name=\"csv\" (change)=\"showCsv()\">Csv Upload\r\n            <div class=\"row mb-2 \" *ngIf=\"csvStatus\">\r\n                <div class=\"col-md-12 \">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-8 mb-2\">\r\n                          <Ngx-CSVtoJSON (onConvert)=\"convert($event)\" (onFail)=\"onError($event)\"></Ngx-CSVtoJSON>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <button class=\"btn btn-primary offset-4\" (click)=\"save()\"  [disabled]=\"!sel\">Submit</button>\r\n                        </div>\r\n                      </div>\r\n                </div>\r\n           </div>\r\n            <form #userForm='ngForm' novalidate (ngSubmit)=\"formSubmit(userForm)\">\r\n                <div class=\"form-group \">\r\n                    <div class=\"row\">\r\n                    <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Name</label>                     \r\n                     <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                        <input type=\"text\" class=\"form-control form-control-sm\"  name='name'\r\n                        [(ngModel)]=\"newUser.name\" #name=\"ngModel\" required >\r\n                        <div *ngIf=\"name.invalid && (name.dirty || name.touched)\"\r\n                            class=\"form-text text-danger\">\r\n                            <div *ngIf=\"name.errors.required\">Name is required. </div>\r\n                        </div>\r\n                    </div>\r\n                </div>   \r\n                <div class=\"col\">\r\n                    <div class=\"form-group m-t-15 custom-radio-ml ml-2\">\r\n                      <!-- <div class=\"radio radio-primary\" > -->\r\n                        <input id=\"Corporate\" type=\"radio\"  name='user_type' value=\"Corporate\"\r\n                        [(ngModel)]=\"newUser.user_type\" #user_type=\"ngModel\"  required \r\n                        (change)=\"userTypeData($event.target.value)\" >\r\n                        <label for=\"Corporate\" class=\"ml-1\">Corporate</label>\r\n                      <!-- </div> -->\r\n                      <!-- <div class=\"radio radio-secondary\"> -->\r\n                        <input id=\"Store\" type=\"radio\"  class=\"ml-4\" name='user_type' value=\"Store\"\r\n                        [(ngModel)]=\"newUser.user_type\" #user_type=\"ngModel\" required\r\n                        (change)=\"userTypeData($event.target.value)\" >\r\n                        <label for=\"Store\" class=\"ml-1\">Store</label>\r\n\r\n                        <input id=\"Sales\" type=\"radio\"  class=\"ml-4\" name='user_type' value=\"Sales\"\r\n                        [(ngModel)]=\"newUser.user_type\" #user_type=\"ngModel\" required\r\n                        (change)=\"userTypeData($event.target.value)\" >\r\n                        <label for=\"Sales\" class=\"ml-1\">Sales</label>\r\n                      <!-- </div>      -->\r\n                      </div>\r\n                      <div *ngIf=\"user_type.invalid &&  (user_type.dirty || user_type.touched)\"\r\n                      class=\"form-text text-danger\">\r\n                      <div *ngIf=\"user_type.errors.required\">User Type is required. </div>\r\n                  </div>\r\n                </div>         \r\n                    <div class=\"row\" *ngIf=\"roleStatus || newUser.user_type=='Sales'\">     \r\n                                          <label class=\"col-md-2 col-sm-2 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Role</label>                     \r\n                        <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <select name=\"role\"  [(ngModel)]=\"newUser.role\" #role=\"ngModel\" required class=\"form-control\" >\r\n                                <option *ngFor=\"let dept of deptNames\" value=\"{{dept._id}}\">{{dept.dept_name}}</option>\r\n                                <!-- <option>Type 1</option>\r\n                                <option>Type 2</option>\r\n                                <option>Type 3</option> -->\r\n                              </select>\r\n                              <div *ngIf=\"role.invalid && (role.dirty || role.touched)\"\r\n                              class=\"form-text text-danger\">\r\n                              <div *ngIf=\"role.errors.required\">Role  is required. </div>\r\n                          </div>\r\n                          </div>\r\n                    </div>\r\n                    <div class=\"row\"  *ngIf=\"!roleStatus || newUser.user_type=='Sales'\">\r\n                        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Store</label>                     \r\n                        <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <div class=\"form-group\">\r\n                                <!-- <label for=\"name\">Slect Tag Name</label> -->\r\n                                <angular2-multiselect [data]=\"dropdownList\" [(ngModel)]=\"formModel.selectedItems\"\r\n                                    [settings]=\"dropdownSettings\" (onSelect)=\"onItemSelect($event)\"\r\n                                    (onDeSelect)=\"OnItemDeSelect($event)\" (onSelectAll)=\"onSelectAll($event)\"\r\n                                    (onDeSelectAll)=\"onDeSelectAll($event)\" name=\"selectedItems\" #selectedItems=\"ngModel\"\r\n                                    >\r\n                                </angular2-multiselect>\r\n                            </div>\r\n                          </div>\r\n                    </div>\r\n                    <!-- <div class=\"row\" *ngIf=\"!roleStatus\">\r\n                        <label class=\"col-md-2 col-sm-2 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Store</label>                     \r\n                        <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <select name=\"role\"  [(ngModel)]=\"newUser.store_id\" #store_id=\"ngModel\" required class=\"form-control\" >\r\n                                <option *ngFor=\"let store of storeNames\" value=\"{{store._id}}\">{{store.store_name}}</option>\r\n                              </select>\r\n                              <div *ngIf=\"store_id.invalid && (store_id.dirty || store_id.touched)\"\r\n                              class=\"form-text text-danger\">\r\n                              <div *ngIf=\"store_id.errors.required\">Store  is required. </div>\r\n                          </div>\r\n                          </div>\r\n                    </div> -->\r\n                    <div class=\"row\">\r\n                        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Email</label>                     \r\n                         <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <input type=\"email\" class=\"form-control form-control-sm\"  name='email'\r\n                            [(ngModel)]=\"newUser.email\" #email=\"ngModel\" required >\r\n                            <div *ngIf=\"email.invalid && (email.dirty || email.touched)\"\r\n                                class=\"form-text text-danger\">\r\n                                <div *ngIf=\"email.errors.required\"> Email is required. </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>        \r\n                    <div class=\"row\">\r\n                        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Password</label>                     \r\n                         <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <input type=\"password\" class=\"form-control form-control-sm\"  name='password'\r\n                            [(ngModel)]=\"newUser.password\" #password=\"ngModel\" required >\r\n                            <div *ngIf=\"password.invalid && (password.dirty || password.touched)\"\r\n                                class=\"form-text text-danger\">\r\n                                <div *ngIf=\"password.errors.required\"> Password is required. </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>   \r\n                    <div class=\"row\">\r\n                        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Phone</label>                     \r\n                         <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <input type=\"number\" class=\"form-control form-control-sm\"  name='phone'\r\n                            [(ngModel)]=\"newUser.phone\" #phone=\"ngModel\" required >\r\n                            <div *ngIf=\"phone.invalid && (phone.dirty || phone.touched)\"\r\n                                class=\"form-text text-danger\">\r\n                                <div *ngIf=\"phone.errors.required\"> Phone is required. </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>   \r\n                    <div class=\"row d-flex\">\r\n                        <label class=\"col-md-2 col-sm-2 col-form-label col-form-label-md text-sm-right \"  for=\"normal-input-1\">Is Active</label>                     \r\n                         <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <input type=\"checkbox\" class=\"form-control form-control-sm\"  name='isActive'\r\n                            [(ngModel)]=\"newUser.isActive\" #isActive=\"ngModel\"  >\r\n                            <!-- <div *ngIf=\"isActive.invalid && (isActive.dirty || isActive.touched)\"\r\n                                class=\"form-text text-danger\">\r\n                                <div *ngIf=\"isActive.errors.required\">  is required. </div>\r\n                            </div> -->\r\n                        </div>\r\n                       \r\n                    </div>   \r\n                    \r\n                    <div class=\"row\">\r\n                        <button class=\"btn btn-primary offset-3 \" [disabled]=\"userForm.invalid\">Submit</button>\r\n                        <button type=\"reset\" class=\"btn btn-danger ml-2\">Clear</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ModalDismissReasons, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BaseServiceService } from '@app/services/base-service.service';\r\nimport Axios from 'axios';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport { Subject } from 'rxjs';\r\n@Component({\r\n  selector: 'app-assign',\r\n  templateUrl: './assign.component.html',\r\n  styleUrls: ['./assign.component.scss']\r\n})\r\nexport class AssignComponent implements OnInit {\r\n  model: NgbDateStruct;\r\n  assign:any={};\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n  assignList: any;\r\n  authToken: string;\r\n  closeResult = '';\r\n  selectedObj:any = {};\r\n  constructor(private router: Router, private baseService: BaseServiceService,config: NgbModalConfig, private modalService: NgbModal) { \r\n  \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAssignList();\r\n  }\r\n\r\n  formSubmit() {\r\n   \r\n    Axios.post(\r\n      this.baseService.baseUrl + 'secure/assign/addAssignName', this.assign,\r\n      {\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      })\r\n      .then(response => {\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        }).then(() => {\r\n          location.reload(); });\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  getAssignList() {\r\n    Axios.get(this.baseService.baseUrl + 'secure/assign/getAssignName',{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },      \r\n    })\r\n      .then(response => {        \r\n        if (response.status) {\r\n          this.assignList = response.data.data;\r\n          console.log(\"Assign List\");\r\n          \r\n          console.log(this.assignList);\r\n          console.log(response.data);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  open(content,selObj) {\r\n    console.log(selObj);\r\n    this.selectedObj = selObj;\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      console.log(\"LLLLLLL\",result);\r\n      Axios.put(this.baseService.baseUrl + 'secure/assign/update_assign/'+result._id,result,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n        \r\n      })\r\n        .then(response => {        \r\n          console.log(response)\r\n          if (response.data. status) {\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'success',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          }).then(() => {\r\n            location.reload(); });\r\n          }\r\n          else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n          {\r\n            \r\n          }\r\n          else{\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'error',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n           }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error)\r\n        })\r\n    }, (reason) => {\r\n      console.log(\"OOOOOOOOOOo\",);\r\n      \r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n\r\n  deleteDept(id)\r\n  {\r\n    if(confirm(\"Are You Sure To Delete This Record\"))\r\n    {\r\n    Axios.delete(this.baseService.baseUrl + 'secure/assign/delete_assign/'+id,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      })\r\n      .then(response => {        \r\n        console.log(response)\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n        .then(() => {\r\n          location.reload(); });\r\n        // this.getDept();\r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"card col-md-6 float-center\">\r\n        <div class=\"card-body\">\r\n            <form #statusForm='ngForm' novalidate (ngSubmit)=\"formSubmit()\">\r\n           <div class=\"form-group form-row\">\r\n               <label class=\"col-md-4 col-sm-4 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Assign Name</label>\r\n        \r\n               <div class=\"col-md-6 col-sm-8 mb-3\">\r\n                   <input type=\"text\" class=\"form-control form-control-sm\"  name='assign_name'\r\n                       [(ngModel)]=\"assign.assign_name\" #assign_name=\"ngModel\" required>\r\n       \r\n                   <div *ngIf=\"assign_name.invalid && (assign_name.dirty || assign_name.touched)\" class=\"form-text text-danger\">\r\n                       <div *ngIf=\"assign_name.errors.required\"> Assign Name is required. </div>\r\n                   </div>\r\n               </div>\r\n        </div>\r\n        <div class=\"row\">\r\n             <div class=\"col-md-12\">\r\n                 <button class=\"btn btn-primary offset-4\" [disabled]=\"statusForm.invalid\">Add</button>\r\n             </div>\r\n        </div>\r\n       </form>\r\n    </div>\r\n   </div>\r\n\r\n   <div class=\"table-responsive\">\r\n    <table datatable   [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover table table-bordered table-striped\">\r\n        <thead style=\"background-color:#fb9013;\">\r\n            <tr>\r\n                <th>\r\n                    S NO\r\n                </th>\r\n                <th>\r\n                    Assign Name\r\n             </th>\r\n             <th>\r\n                    Create Date\r\n              </th>\r\n              <th>\r\n                Actions\r\n           </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let tag of assignList;let i = index;\">\r\n                <td>{{i+1}}</td>\r\n                <td>{{tag?.assign_name}}</td>\r\n                <td>{{tag?.creationDate | date: 'dd/MM/yyyy'}}</td>\r\n                <td>\r\n                    <!-- <img  src=\"assets/images/icon/edit.png\" class=\"switchbtn\"  height=\"30px\"  (click)=\"open(content,dept)\"/>\r\n                    <img  src=\"assets/images/icon/delete.png\" class=\"switchbtn\"  height=\"30px\"  (click)=\"deleteDept(dept._id)\"/>   -->\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n </div> \r\n\r\n <ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n    <div class=\"modal-header\">\r\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">Department</h4>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n         <form>\r\n            <div class=\"form-group\">\r\n              <label for=\"recipient-name\" class=\"col-form-label\">Department Name</label>\r\n              <input type=\"text\" class=\"form-control\"  name='dept_name'\r\n              [(ngModel)]=\"selectedObj.dept_name\" required>\r\n            </div>\r\n          </form>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c(selectedObj)\">Save</button>\r\n    </div>\r\n  </ng-template>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { BaseServiceService } from '@app/services/base-service.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\nimport Axios from 'axios';\r\n\r\n@Component({\r\n  selector: 'app-edit-user',\r\n  templateUrl: './edit-user.component.html',\r\n  styleUrls: ['./edit-user.component.scss']\r\n})\r\nexport class EditUserComponent implements OnInit {\r\n  model: NgbDateStruct;\r\n  newUser:any = {\r\n  };\r\n  deptNames: any;\r\n  storeNames: any;\r\n  dropdownList = [];\r\n  formModel = {\r\n    \"selectedItems\": []\r\n  };\r\n\tdropdownSettings = {};\r\n  id: any;\r\n  roleStatus: boolean = false;\r\n  constructor(private router: Router,private _router:ActivatedRoute,  private cdRef:ChangeDetectorRef,private baseService:BaseServiceService) { \r\n    this.id = this._router.snapshot.queryParamMap.get('id');\r\n    this.dropdownSettings = {\r\n\t\t\tsingleSelection: true,\r\n\t\t\ttext: \"Select Menu List\",\r\n\t\t\tselectAllText: 'Select All',\r\n\t\t\tunSelectAllText: 'UnSelect All',\r\n\t\t\tenableSearchFilter: true,\r\n\t\t\tclasses: \"myclass custom-class\"\r\n    };\r\n    this.getDept();\r\n    this.getStore();\r\n  }\r\n\r\n  getUserById() {\r\n    console.log(\"userBy ID\");\r\n    Axios.get(this.baseService.baseUrl + 'secure/users/user_data/'+this.id,{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n      \r\n    })\r\n      .then(response => {        \r\n       console.log(\"Testing\");\r\n       console.log(response);\r\n        if (response.data.status)\r\n         {\r\n          console.log(\"Issue List\");\r\n          this.newUser = response.data.data;\r\n          let tmp = [];\r\n          for (let i = 0; i < this.newUser.store_id.length; i++) {\r\n             this.storeNames.filter(store=>{\r\n                if(store._id == this.newUser.store_id[i])\r\n                tmp.push({ id: store._id, itemName: store.store_name });\r\n             })\r\n          }\r\n          this.formModel.selectedItems = tmp;\r\n          console.log( this.formModel.selectedItems);\r\n          console.log(response.data);\r\n          if(this.newUser.user_type == 'Corporate')\r\n          this.roleStatus = false;\r\n          else if(this.newUser.user_type == 'Sales')\r\n          {\r\n            this.dropdownSettings = {\r\n              singleSelection: false,\r\n              text: \"Select Menu List\",\r\n              selectAllText: 'Select All',\r\n              unSelectAllText: 'UnSelect All',\r\n              enableSearchFilter: true,\r\n              classes: \"myclass custom-class\"\r\n          }\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n        }\r\n         })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  userTypeData(data)\r\n  {\r\n   if(data==\"Store\")\r\n   {\r\n    this.roleStatus=true;\r\n    this.newUser.user_type=\"Store\"\r\n    // this.newUser.role={\r\n    //   isAdmin:false,\r\n    //   isUser:true\r\n    // }\r\n   }\r\n   else if(data == \"Corporate\")\r\n   {\r\n    this.roleStatus=false;\r\n    this.newUser.user_type=\"Corporate\";\r\n   }\r\n   else\r\n   {\r\n    this.dropdownSettings = {\r\n\t\t\tsingleSelection: false,\r\n\t\t\ttext: \"Select Menu List\",\r\n\t\t\tselectAllText: 'Select All',\r\n\t\t\tunSelectAllText: 'UnSelect All',\r\n\t\t\tenableSearchFilter: true,\r\n\t\t\tclasses: \"myclass custom-class\"\r\n    };\r\n    this.newUser.user_type=\"Sales\";\r\n   }\r\n  }\r\n\r\n  getDept() {\r\n    console.log(\"Dept\");\r\n    Axios.get(this.baseService.baseUrl + 'secure/department/get_dept',{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n    })\r\n      .then(response => {        \r\n       \r\n        if (response.data.status) {\r\n          console.log(\"Issue List\");\r\n          this.deptNames = response.data.data;\r\n          console.log(this.deptNames);\r\n          console.log(response.data);\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  getStore() {\r\n    console.log(\"Store\");\r\n    Axios.get(this.baseService.baseUrl + 'secure/store/allStore',{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n      \r\n    })\r\n      .then(response => {        \r\n        if (response.data.status) {\r\n          console.log(\"Issue List\");\r\n          this.storeNames = response.data.data;\r\n          this.storeNames = response.data.data;\r\n          this.getUserById();\r\n          let tmp = [];\r\n          for(let i=0; i < this.storeNames .length; i++) {\r\n            tmp.push({ id: this.storeNames[i]._id, itemName: this.storeNames[i].store_name });\r\n          }\r\n          this.dropdownList = tmp;\r\n          console.log(this.storeNames);\r\n          console.log(response.data);\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  formSubmit()\r\n  {\r\n    this.newUser.store_id=[];\r\n    for(let i=0;i<this.formModel.selectedItems.length;i++)\r\n    {\r\n      this.newUser.store_id.push(this.formModel.selectedItems[i].id)\r\n    }\r\n    console.log(this.newUser);\r\n    Axios.put(this.baseService.baseUrl + 'secure/users/user_data/'+this.id,this.newUser,{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n      \r\n    })\r\n      .then(response => {        \r\n        console.log(response)\r\n        if (response.data. status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n        this.getUserById();\r\n        // .then(() => {\r\n        //   location.reload(); });\r\n        }\r\n        // else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        // {\r\n          \r\n        // }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewChecked()\r\n  {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  \r\n  onItemSelect(item: any) {\r\n    console.log(\"on Select Item...\");\r\n    console.log(this.formModel.selectedItems);\r\n    // for(let i=0;i<this.formModel.selectedItems.length;i++)\r\n    // {\r\n    // this.newTicket.tags.push(this.formModel.selectedItems[i].id);\r\n    // }\r\n    console.log(\"Tag Names\");\r\n    // this.newTicket.tags.push(this.formModel.selectedItems)\r\n\t\t// console.log(this.formModel.selectedItems);\r\n\t}\r\n\tOnItemDeSelect(item: any) {\r\n\t\tconsole.log(item);\r\n\t\t// console.log(this.formModel.selectedItems);\r\n\t}\r\n\tonSelectAll(items: any) {\r\n    console.log(\"On Select All\");\r\n    console.log(this.formModel.selectedItems);\r\n    // this.tags.push(this.formModel.selectedItems);\r\n\t}\r\n\tonDeSelectAll(items: any) {\r\n\t\tconsole.log(items);\r\n\t}\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"card\">\r\n        <div class=\"card-header cheader\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12 text-center\">\r\n            <h3>Edit User Details </h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <form #ticketForm='ngForm' novalidate (ngSubmit)=\"formSubmit()\">\r\n                <div class=\"form-group mt-2 \">\r\n                    <div class=\"row\">\r\n                    <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Name</label>                     \r\n                     <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                        <input type=\"text\" class=\"form-control form-control-sm\"  name='name'\r\n                        [(ngModel)]=\"newUser.name\" #name=\"ngModel\" required >\r\n                        <div *ngIf=\"name.invalid && (name.dirty || name.touched)\"\r\n                            class=\"form-text text-danger\">\r\n                            <div *ngIf=\"name.errors.required\"> Name is required. </div>\r\n                        </div>\r\n                    </div>\r\n                </div>       \r\n                <div class=\"row ml-5\">\r\n                    <div class=\"form-group m-t-15 custom-radio-ml ml-2\">\r\n                      <!-- <div class=\"radio radio-primary\" > -->\r\n                        <input id=\"Corporate\" type=\"radio\"  name='user_type' value=\"Corporate\"\r\n                        [(ngModel)]=\"newUser.user_type\" #user_type=\"ngModel\" required \r\n                        (change)=\"userTypeData($event.target.value)\" >\r\n                        <label for=\"Corporate\" class=\"ml-1\">Corporate</label>\r\n                      <!-- </div> -->\r\n                      <!-- <div class=\"radio radio-secondary\"> -->\r\n                        <input id=\"Store\" type=\"radio\"  class=\"ml-4\" name='user_type' value=\"Store\"\r\n                        [(ngModel)]=\"newUser.user_type\" #user_type=\"ngModel\" required\r\n                        (change)=\"userTypeData($event.target.value)\" >\r\n                        <label for=\"Store\" class=\"ml-1\">Store</label>\r\n                        <input id=\"Sales\" type=\"radio\"  class=\"ml-4\" name='user_type' value=\"Sales\"\r\n                        [(ngModel)]=\"newUser.user_type\" #user_type=\"ngModel\" required\r\n                        (change)=\"userTypeData($event.target.value)\" >\r\n                        <label for=\"Sales\" class=\"ml-1\">Sales</label>\r\n                      <!-- </div>      -->\r\n                      </div>\r\n                      <div *ngIf=\"user_type.invalid &&  (user_type.dirty || user_type.touched)\"\r\n                      class=\"form-text text-danger\">\r\n                      <div *ngIf=\"user_type.errors.required\">User Type is required. </div>\r\n                  </div>\r\n                </div>             \r\n                    <div class=\"row\" *ngIf=\"!roleStatus || newUser.user_type=='Sales'\" >\r\n                        <label class=\"col-md-2 col-sm-2 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Role</label>                     \r\n                        <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <select name=\"role\"  [(ngModel)]=\"newUser.role\" #role=\"ngModel\" required class=\"form-control\" >\r\n                                <option *ngFor=\"let dept of deptNames\" value=\"{{dept._id}}\">{{dept.dept_name}}</option>\r\n                                <!-- <option>Type 1</option>\r\n                                <option>Type 2</option>\r\n                                <option>Type 3</option> -->\r\n                              </select>\r\n                              <div *ngIf=\"role.invalid && (role.dirty || role.touched)\"\r\n                              class=\"form-text text-danger\">\r\n                              <div *ngIf=\"role.errors.required\">Role  is required. </div>\r\n                          </div>\r\n                          </div>\r\n                    </div>\r\n                    <div class=\"row\"  *ngIf=\"roleStatus || newUser.user_type=='Sales'\">\r\n                        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Store</label>                     \r\n                        <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <div class=\"form-group\">\r\n                                <!-- <label for=\"name\">Slect Tag Name</label> -->\r\n                                <angular2-multiselect [data]=\"dropdownList\" [(ngModel)]=\"formModel.selectedItems\"\r\n                                    [settings]=\"dropdownSettings\" (onSelect)=\"onItemSelect($event)\"\r\n                                    (onDeSelect)=\"OnItemDeSelect($event)\" (onSelectAll)=\"onSelectAll($event)\"\r\n                                    (onDeSelectAll)=\"onDeSelectAll($event)\" name=\"selectedItems\" #selectedItems=\"ngModel\"\r\n                                    >\r\n                                </angular2-multiselect>\r\n                            </div>\r\n                          </div>\r\n                    </div>\r\n                    <!-- <div class=\"row\" *ngIf=\"roleStatus\">\r\n                        <label class=\"col-md-2 col-sm-2 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Store</label>                     \r\n                        <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <select name=\"store_id\"  [(ngModel)]=\"newUser.store_id\" #store_id=\"ngModel\" required class=\"form-control\" >\r\n                                <option *ngFor=\"let store of storeNames\" value=\"{{store._id}}\">{{store.store_name}}</option>\r\n                              </select>\r\n                              <div *ngIf=\"store_id.invalid && (store_id.dirty || store_id.touched)\"\r\n                              class=\"form-text text-danger\">\r\n                              <div *ngIf=\"store_id.errors.required\">Store  is required. </div>\r\n                          </div>\r\n                          </div>\r\n                    </div> -->\r\n                    <div class=\"row\">\r\n                        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Email</label>                     \r\n                         <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <input type=\"email\" class=\"form-control form-control-sm\"  name='email'\r\n                            [(ngModel)]=\"newUser.email\" #email=\"ngModel\" required >\r\n                            <div *ngIf=\"email.invalid && (email.dirty || email.touched)\"\r\n                                class=\"form-text text-danger\">\r\n                                <div *ngIf=\"email.errors.required\"> Email is required. </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>        \r\n                    <!-- <div class=\"row\">\r\n                        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Password</label>                     \r\n                         <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <input type=\"password\" class=\"form-control form-control-sm\"  name='password'\r\n                            [(ngModel)]=\"newUser.password\" #password=\"ngModel\" required >\r\n                            <div *ngIf=\"password.invalid && (password.dirty || password.touched)\"\r\n                                class=\"form-text text-danger\">\r\n                                <div *ngIf=\"password.errors.required\"> Password is required. </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>    -->\r\n                    <div class=\"row\">\r\n                        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Phone</label>                     \r\n                         <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <input type=\"number\" class=\"form-control form-control-sm\"  name='phone'\r\n                            [(ngModel)]=\"newUser.phone\" #phone=\"ngModel\" required >\r\n                            <div *ngIf=\"phone.invalid && (phone.dirty || phone.touched)\"\r\n                                class=\"form-text text-danger\">\r\n                                <div *ngIf=\"phone.errors.required\"> Phone is required. </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>   \r\n                    <div class=\"row d-flex\">\r\n                        <label class=\"col-md-2 col-sm-2 col-form-label col-form-label-md text-sm-right \"  for=\"normal-input-1\">Is Active</label>                     \r\n                         <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                            <input type=\"checkbox\" class=\"form-control form-control-sm\"  name='isActive'\r\n                            [(ngModel)]=\"newUser.isActive\" #isActive=\"ngModel\" required >\r\n                            <!-- <div *ngIf=\"isActive.invalid && (isActive.dirty || isActive.touched)\"\r\n                                class=\"form-text text-danger\">\r\n                                <div *ngIf=\"isActive.errors.required\">  is required. </div>\r\n                            </div> -->\r\n                        </div>\r\n                       \r\n                    </div>   \r\n                    \r\n                    <div class=\"row\">\r\n                        <button class=\"btn btn-primary offset-3\">Submit</button>\r\n                        <button class=\"btn btn-danger\">Clear</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { ɵɵdefineInjectable, Injectable, EventEmitter, Component, Output, NgModule } from '@angular/core';\n\nimport * as ɵngcc0 from '@angular/core';\nclass NgxCSVtoJSONService {\r\n    constructor() { }\r\n}\nNgxCSVtoJSONService.ɵfac = function NgxCSVtoJSONService_Factory(t) { return new (t || NgxCSVtoJSONService)(); };\r\nNgxCSVtoJSONService.ɵprov = ɵɵdefineInjectable({ factory: function NgxCSVtoJSONService_Factory() { return new NgxCSVtoJSONService(); }, token: NgxCSVtoJSONService, providedIn: \"root\" });\r\nNgxCSVtoJSONService.ctorParameters = () => [];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxCSVtoJSONService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\n\n//ng build NgxCSVtoJSON\r\nclass NgxCSVtoJSONComponent {\r\n    constructor() {\r\n        this.convertedArray = [];\r\n        this.properties = \"\";\r\n        this.onConvert = new EventEmitter();\r\n        this.onFail = new EventEmitter();\r\n    }\r\n    ngOnInit() {\r\n    }\r\n    //Click Action for Input File Control\r\n    onFileSelect(input) {\r\n        const files = input.files;\r\n        var fileTypes = ['csv']; //acceptable file types\r\n        if (files && files.length) {\r\n            var extension = input.files[0].name.split('.').pop().toLowerCase(), //file extension from input file\r\n            //Validating type of File Uploaded\r\n            isSuccess = fileTypes.indexOf(extension) > -1; //is extension in acceptable types\r\n            //console.log(isSuccess);\r\n            //console.log(\"Filename: \" + files[0].name);\r\n            // console.log(\"Type: \" + files[0].type);\r\n            //  console.log(\"Size: \" + files[0].size + \" bytes\");\r\n            var that = this;\r\n            //Flag to check the Validation Result\r\n            if (isSuccess) {\r\n                const fileToRead = files[0];\r\n                const fileReader = new FileReader();\r\n                fileReader.onload = function (fileLoadedEvent) {\r\n                    const textFromFileLoaded = fileLoadedEvent.target.result;\r\n                    that.csvContent = textFromFileLoaded;\r\n                    //Flag is for extracting first line\r\n                    let flag = false;\r\n                    // Main Data\r\n                    let objarray = [];\r\n                    //Properties\r\n                    let prop = [];\r\n                    //Total Length\r\n                    let size = 0;\r\n                    for (const line of that.csvContent.split(/[\\r\\n]+/)) {\r\n                        if (flag) {\r\n                            let obj = {};\r\n                            for (let k = 0; k < size; k++) {\r\n                                //Dynamic Object Properties\r\n                                obj[prop[k]] = line.split(',')[k];\r\n                            }\r\n                            objarray.push(obj);\r\n                        }\r\n                        else {\r\n                            //First Line of CSV will be having Properties\r\n                            for (let k = 0; k < line.split(',').length; k++) {\r\n                                size = line.split(',').length;\r\n                                //Removing all the spaces to make them usefull\r\n                                prop.push(line.split(',')[k].replace(/ /g, ''));\r\n                            }\r\n                            flag = true;\r\n                        }\r\n                    }\r\n                    //All the values converted from CSV to JSON Array\r\n                    that.convertedArray = objarray;\r\n                    that.properties = [];\r\n                    //Object Keys of Converted JSON Array\r\n                    that.properties = prop;\r\n                    let finalResult = {\r\n                        properties: that.properties,\r\n                        result: that.convertedArray\r\n                    };\r\n                    //On Convert Success \r\n                    that.onConvert.emit(finalResult);\r\n                };\r\n                fileReader.readAsText(fileToRead, \"UTF-8\");\r\n            }\r\n            else {\r\n                that.onFail.emit(\"Invalid File Format!\");\r\n            }\r\n        }\r\n    }\r\n}\nNgxCSVtoJSONComponent.ɵfac = function NgxCSVtoJSONComponent_Factory(t) { return new (t || NgxCSVtoJSONComponent)(); };\nNgxCSVtoJSONComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxCSVtoJSONComponent, selectors: [[\"Ngx-CSVtoJSON\"]], outputs: { onConvert: \"onConvert\", onFail: \"onFail\" }, decls: 2, vars: 0, consts: [[1, \"form-group\"], [\"accept\", \".csv\", \"id\", \"csv\", \"type\", \"file\", \"name\", \"myfile\", 1, \"form-control\", 3, \"change\"]], template: function NgxCSVtoJSONComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"input\", 1);\n        ɵngcc0.ɵɵlistener(\"change\", function NgxCSVtoJSONComponent_Template_input_change_1_listener($event) { return ctx.onFileSelect($event.target); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2 });\r\nNgxCSVtoJSONComponent.ctorParameters = () => [];\r\nNgxCSVtoJSONComponent.propDecorators = {\r\n    onConvert: [{ type: Output }],\r\n    onFail: [{ type: Output }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxCSVtoJSONComponent, [{\n        type: Component,\n        args: [{\n                selector: 'Ngx-CSVtoJSON',\n                template: `\n  <div class=\"form-group\">\n  <input class=\"form-control\" accept=\".csv\" id=\"csv\" type=\"file\" \n  (change)=\"onFileSelect($event.target)\" name=\"myfile\">\n  </div>\n  `\n            }]\n    }], function () { return []; }, { onConvert: [{\n            type: Output\n        }], onFail: [{\n            type: Output\n        }] }); })();\n\nclass NgxCSVtoJSONModule {\r\n}\nNgxCSVtoJSONModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxCSVtoJSONModule });\nNgxCSVtoJSONModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxCSVtoJSONModule_Factory(t) { return new (t || NgxCSVtoJSONModule)(); }, imports: [[]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxCSVtoJSONModule, { declarations: [NgxCSVtoJSONComponent], exports: [NgxCSVtoJSONComponent] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxCSVtoJSONModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NgxCSVtoJSONComponent],\n                imports: [],\n                exports: [NgxCSVtoJSONComponent]\n            }]\n    }], null, null); })();\n\n/*\r\n * Public API Surface of ngx-csvto-json\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgxCSVtoJSONComponent, NgxCSVtoJSONModule, NgxCSVtoJSONService };\n\n//# sourceMappingURL=ngx-csvto-json.js.map","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ModalDismissReasons, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BaseServiceService } from '@app/services/base-service.service';\r\nimport { Subject } from 'rxjs';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport Axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-issues',\r\n  templateUrl: './issues.component.html',\r\n  styleUrls: ['./issues.component.scss']\r\n})\r\nexport class IssuesComponent implements OnInit {\r\n  model: NgbDateStruct;\r\n  dept:any={}\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n  issue:any={}\r\n  mainDeptNames:any;\r\n  tableStatus:boolean=true;\r\n  deptNames: any;\r\n  issuesNames:any;\r\n  closeResult = '';\r\n  selectedObj:any = {};\r\n  constructor(private router: Router, private baseService: BaseServiceService,config: NgbModalConfig, private modalService: NgbModal) {\r\n    this.getDept();\r\n     this.getIssues();\r\n     this.getMainDept();\r\n   }\r\n  formSubmit(form:NgForm) {\r\n    Axios.post(\r\n      this.baseService.baseUrl + 'secure/typeofIssue/add_issue', this.issue,\r\n      {\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      })\r\n      .then(response => {\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n            \r\n        })\r\n        // .then(() => {\r\n        //   location.reload(); });\r\n        form.resetForm(\"\");\r\n        this.getIssues();\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n /////////Get Main Dept\r\n getMainDept() {\r\n  console.log(\"Dept\");\r\n  Axios.get(this.baseService.baseUrl + 'secure/mainDept/allMainDept',{\r\n    headers: {\r\n      'x-auth' : this.baseService.authToken\r\n    },\r\n    \r\n  })\r\n    .then(response => {        \r\n     \r\n      if (response.data.status) {\r\n        console.log(\"Issue List\");\r\n        this.mainDeptNames = response.data.data;\r\n      }\r\n      else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n      {\r\n        \r\n      }\r\n      else{\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'error',\r\n          title: response.data[\"message\"],\r\n          showConfirmButton: false,\r\n          timer: 3000\r\n      })\r\n       }\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error)\r\n    })\r\n}\r\n\r\n  getDept() {\r\n    Axios.get(this.baseService.baseUrl + 'secure/department/get_dept',{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n    })\r\n      .then(response => {        \r\n       \r\n        if (response.data.status) {\r\n          console.log(\"Dept List\");\r\n          this.deptNames = response.data.data;\r\n          console.log(this.deptNames);\r\n          console.log(response.data);\r\n          \r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  getIssues() {\r\n    Axios.get(this.baseService.baseUrl + 'secure/typeofIssue/get_issue',{\r\n      headers: {\r\n        'x-auth' : this.baseService.authToken\r\n      },\r\n    })\r\n      .then(response => {        \r\n       \r\n        if (response.status) {\r\n          this.issuesNames = response.data.data;\r\n          console.log(this.issuesNames);\r\n          console.log(response.data);\r\n          if(this.tableStatus)\r\n          {\r\n            this.dtTrigger.next();\r\n                 this.tableStatus=false;\r\n          }\r\n        }\r\n        else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n        {\r\n          \r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  open(content,selObj) {\r\n    console.log(selObj);\r\n    this.selectedObj = selObj;\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      console.log(\"LLLLLLL\",result);\r\n      Axios.put(this.baseService.baseUrl + 'secure/typeofIssue/update_issue/'+result._id,result,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n        \r\n      })\r\n        .then(response => {        \r\n          console.log(response)\r\n          if (response.data. status) {\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'success',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n          // .then(() => {\r\n          //   location.reload(); });\r\n          this.getIssues();\r\n          }\r\n          else if(this.baseService.checkToken(response.data.message , response.data.status))\r\n          {\r\n            \r\n          }\r\n          else{\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'error',\r\n              title: response.data[\"message\"],\r\n              showConfirmButton: false,\r\n              timer: 3000\r\n          })\r\n           }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error)\r\n        })\r\n    }, (reason) => {\r\n      console.log(\"OOOOOOOOOOo\",);\r\n      \r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n\r\n  deleteDept(id)\r\n  {\r\n    if(confirm(\"Are You Sure To Delete This Record\"))\r\n    {\r\n    Axios.delete(this.baseService.baseUrl + 'secure/typeofIssue/delete_issue/'+id,{\r\n        headers: {\r\n          'x-auth' : this.baseService.authToken\r\n        },\r\n      })\r\n      .then(response => {        \r\n        console.log(response)\r\n        if (response.data.status) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n        // .then(() => {\r\n        //   location.reload(); });\r\n        this.getIssues();\r\n        }\r\n        else{\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: response.data[\"message\"],\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n        })\r\n         }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"card col-md-6 float-center\">\r\n        <div class=\"card-body\">\r\n            <form #statusForm='ngForm' novalidate (ngSubmit)=\"formSubmit(statusForm)\">\r\n                <!-- <div class=\"row\">\r\n                    <label class=\"col-md-4 col-sm-5 col-form-label col-form-label-md text-sm-right\" for=\"normal-input-1\">Deapatment Name </label>                     \r\n                    <div class=\"col-md-8 col-sm-9 mb-3\">\r\n                        <select name=\"dept_id\"  [(ngModel)]=\"issue.dept_id\" #dept_id=\"ngModel\" required class=\"form-control\" >\r\n                            <option *ngFor=\"let dept of deptNames\" value=\"{{dept._id}}\">{{dept.dept_name}}</option> -->\r\n                            <!-- <option>Type 1</option>\r\n                            <option>Type 2</option>\r\n                            <option>Type 3</option> -->\r\n                          <!-- </select>\r\n                          <div *ngIf=\"dept_id.invalid && (dept_id.dirty || dept_id.touched)\"\r\n                          class=\"form-text text-danger\">\r\n                          <div *ngIf=\"dept_id.errors.required\">Department  is required. </div>\r\n                      </div>\r\n                      </div> -->\r\n                      <div class=\"row\">\r\n                            <label class=\"col-md-4 col-sm-4 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Department </label>\r\n                            <div class=\"col-md-8 col-sm-8 mb-3\">\r\n                               <select   class=\"form-control\" name='deptName'\r\n                               [(ngModel)]=\"issue.deptName\" #deptName=\"ngModel\" required>\r\n                               <option value=\"\">-Select-</option>\r\n                               <option *ngFor=\"let mainDept of mainDeptNames\">{{mainDept?.mainDeptName}}</option>\r\n                               <!-- <option value=\"\">-Select-</option>\r\n                                 <option>IT</option>\r\n                                 <option>Finance</option> \r\n                                 <option>Projects</option>\r\n                                 <option>SCM</option>\r\n                                 <option>HR</option>\r\n                                 <option>Marketing</option>\r\n                                 <option>Sales</option>\r\n                                 <option>Call Center</option> -->\r\n                               </select>\r\n                                <div *ngIf=\"deptName.invalid && (deptName.dirty || deptName.touched)\" class=\"form-text text-danger\">\r\n                                    <div *ngIf=\"deptName.errors.required\"> Department Name is required. </div>\r\n                                </div>\r\n                      </div>  \r\n                    </div>\r\n           <div class=\"form-group form-row\">\r\n               <label class=\"col-md-4 col-sm-4 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Type Of Issue</label>\r\n        \r\n               <div class=\"col-md-8 col-sm-9 mb-3\">\r\n                   <input type=\"text\" class=\"form-control form-control-sm\"  name='issue_name'\r\n                       [(ngModel)]=\"issue.issue_name\" #issue_name=\"ngModel\" required>\r\n       \r\n                   <div *ngIf=\"issue_name.invalid && (issue_name.dirty || issue_name.touched)\" class=\"form-text text-danger\">\r\n                       <div *ngIf=\"issue_name.errors.required\"> Issue Name is required. </div>\r\n                   </div>\r\n               </div>\r\n        </div>\r\n        <div class=\"row\"> \r\n             <div class=\"col-md-12\">\r\n                 <button class=\"btn btn-primary offset-4\" [disabled]=\"statusForm.invalid\">Add</button>\r\n             </div>\r\n        </div>\r\n       </form>\r\n       </div>\r\n    </div>\r\n   </div>\r\n\r\n   \r\n<div class=\"table-responsive\">\r\n    <table datatable   [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover\" class=\"table table-bordered table-striped\">\r\n        <thead style=\"background-color:#fb9013\">\r\n            <tr>\r\n                <th>\r\n                    S NO\r\n                </th>\r\n                <th>\r\n                    Department Name\r\n             </th>\r\n              <th>\r\n                    Issue\r\n              </th>\r\n              <th>\r\n                Actions\r\n           </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let issue of issuesNames;let i = index;\">\r\n                <td>{{i+1}}</td>\r\n                <td>{{issue?.deptName}}</td>\r\n                <td>{{issue?.issue_name}}</td>\r\n                <td>\r\n                    <img  src=\"assets/images/icon/edit.png\" class=\"switchbtn\"  height=\"30px\"  (click)=\"open(content,issue)\"/>\r\n                    <img  src=\"assets/images/icon/delete.png\" class=\"switchbtn\"  height=\"30px\"  (click)=\"deleteDept(issue._id)\"/>  \r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n </div> \r\n\r\n <ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n    <div class=\"modal-header\">\r\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">Issues</h4>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n         <form>\r\n            <div class=\"row\">\r\n                <label class=\"col-md-12 col-sm-12 col-form-label col-form-label-sm text-sm-left\" for=\"normal-input-1\">Department Name</label>\r\n                <div class=\"col-md-12 col-sm-12 mb-3\">\r\n                   <select   class=\"form-control\" name='deptName'\r\n                   [(ngModel)]=\"selectedObj.deptName\" #deptName=\"ngModel\" required>\r\n                   <option value=\"\">-Select-</option>\r\n                   <option *ngFor=\"let mainDept of mainDeptNames\">{{mainDept?.mainDeptName}}</option>\r\n                   <!-- <option value=\"\">-Select-</option>\r\n                     <option>IT</option>\r\n                     <option>Finance</option> \r\n                     <option>Projects</option>\r\n                     <option>SCM</option>\r\n                     <option>HR</option>\r\n                     <option>Marketing</option>\r\n                     <option>Sales</option>\r\n                     <option>Call Center</option> -->\r\n                   </select>\r\n                    <div *ngIf=\"deptName.invalid && (deptName.dirty || deptName.touched)\" class=\"form-text text-danger\">\r\n                        <div *ngIf=\"deptName.errors.required\"> Department Name is required. </div>\r\n                    </div>\r\n          </div>  \r\n        </div>\r\n           <div class=\"form-group\">\r\n           <!--   <label for=\"recipient-name\" class=\"col-form-label\">Department Name</label>\r\n              <select name=\"dept_id\"  [(ngModel)]=\"selectedObj.dept_id._id\" #dept_id=\"ngModel\" required class=\"form-control\" >\r\n                <option *ngFor=\"let dept of deptNames\" value=\"{{dept._id}}\">{{dept.dept_name}}</option> -->\r\n                <!-- <option>Type 1</option>\r\n                <option>Type 2</option>\r\n                <option>Type 3</option> \r\n              </select>-->\r\n\r\n              <label for=\"recipient-name\" class=\"col-form-label\">Issue Name</label>\r\n              <input type=\"text\" class=\"form-control\"  name='issue_name'\r\n              [(ngModel)]=\"selectedObj.issue_name\" required>\r\n            </div>\r\n          </form>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c(selectedObj)\">Save</button>\r\n    </div>\r\n  </ng-template>\r\n  "]}