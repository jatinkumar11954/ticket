{"version":3,"sources":["webpack:///src/app/content/pages/main-block/entry-form/truck-entry-form/truck-entry-form.component.ts","webpack:///src/app/content/pages/main-block/entry-form/truck-entry-form/truck-entry-form.component.html","webpack:///src/app/content/pages/main-block/entry-form/order-entry-form/order-entry-form.component.ts","webpack:///src/app/content/pages/main-block/entry-form/order-entry-form/order-entry-form.component.html","webpack:///src/app/content/pages/main-block/main-block.module.ts","webpack:///src/app/content/pages/main-block/entry-form/entry-form.component.ts","webpack:///src/app/content/pages/main-block/entry-form/entry-form.component.html"],"names":["TruckEntryFormComponent","router","baseService","truckData","keyword","truckList","truckNumberSelected","getTrucksList","a","console","log","getTruckById","truck_number","get","baseUrl","then","response","data","error","obj","status","put","_id","location","reload","post","patch","formSubmit","truckSelected","resetForm","selector","templateUrl","styleUrls","OrderEntryFormComponent","appsRoutes","path","component","MainBlockModule","forChild","declarations","imports","exports","EntryFormComponent","snippets","navsAlignment","navsOrientation","active"],"mappings":"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","file":"main-block-main-block-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BaseServiceService } from '@app/services/base-service.service';\r\nimport Axios from 'axios'\r\n\r\n@Component({\r\n  selector: 'app-truck-entry-form',\r\n  templateUrl: './truck-entry-form.component.html',\r\n  styleUrls: ['./truck-entry-form.component.scss']\r\n})\r\nexport class TruckEntryFormComponent implements OnInit {\r\n  model: NgbDateStruct;\r\n  truckData:any = {};\r\n  keyword = 'truck_number';\r\n  truckList:any = [];\r\n  truckNumberSelected = '';\r\n  \r\n  constructor(private router: Router, private baseService: BaseServiceService,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getTrucksList();\r\n  }\r\n\r\n  truckSelected(a) {\r\n    console.log(a);\r\n    this.getTruckById(a);\r\n    this.truckNumberSelected  = a.truck_number;\r\n  }\r\n  getTrucksList() {\r\n    Axios.get(this.baseService.baseUrl + 'api/truck',{\r\n      \r\n    })\r\n      .then(response => {  \r\n        console.log(response);\r\n              \r\n        this.truckList = response.data.data;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n  getTruckById(obj) {\r\n    Axios.get(this.baseService.baseUrl + 'api/truck/' + obj.truck_number,{\r\n      \r\n    })\r\n      .then(response => {        \r\n       \r\n        if (response.status) {\r\n          this.truckData = response.data.data;\r\n          console.log(this.truckData);\r\n          console.log(response.data);\r\n          \r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n\r\n  resetForm(){\r\n    this.truckData = {};\r\n  }\r\n\r\n  formSubmit() {\r\n    Axios.put(\r\n      this.baseService.baseUrl + 'api/truck/'+  this.truckData._id,\r\n      this.truckData,\r\n      {\r\n        // headers: {\r\n        //   \"Authorization\": `Bearer ${this.authS.userValue.jwtToken}`\r\n        // }\r\n      }\r\n    )\r\n      .then(response => {\r\n        console.log('resp: ', response);\r\n        location.reload();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\npost() {\r\n  let obj = {};\r\n  Axios.post(this.baseService.baseUrl + '', obj,{\r\n    // headers: {\r\n    //   \"Authorization\": `Bearer ${this.authS.userValue.jwtToken}`\r\n    // }\r\n  })\r\n    .then(response => {\r\n      console.log('resp: ', response)\r\n\r\n     \r\n    })\r\n    .catch(function (error) {\r\n      console.log(error)\r\n    })\r\n}\r\n  patch() {\r\n    let obj = {};\r\n    Axios.patch(\r\n      this.baseService.baseUrl + '',\r\n      obj,\r\n      {\r\n        // headers: {\r\n        //   \"Authorization\": `Bearer ${this.authS.userValue.jwtToken}`\r\n        // }\r\n      }\r\n    )\r\n      .then(response => {\r\n        console.log('resp: ', response)\r\n\r\n       \r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n","\r\n\r\n<form #truckForm='ngForm' novalidate (ngSubmit)=\"formSubmit()\">\r\n\r\n\r\n    <div class=\"form-group form-row\">\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Truck\r\n            Number</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <!-- <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Truck Number\" name='truckNumber'\r\n                [(ngModel)]=\"truckData.truckNumber\" #truckNumber=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"truckNumber.invalid && (truckNumber.dirty || truckNumber.touched)\"\r\n                class=\"form-text text-danger\">\r\n                <div *ngIf=\"truckNumber.errors.required\"> Truck Number is required. </div>\r\n            </div> -->\r\n            <div class=\"ng-autocomplete\" style=\"width: auto;\">\r\n                <ng-autocomplete [data]=\"truckList\" [searchKeyword]=\"keyword\"\r\n                    historyIdentifier=\"truckList\"\r\n                    [itemTemplate]=\"itemTemplate\" [notFoundTemplate]=\"notFoundTemplate\" (selected)='truckSelected($event)' >\r\n                </ng-autocomplete>\r\n\r\n                <ng-template #itemTemplate let-item>\r\n                    <div class=\"item\">\r\n                        <small>{{item.truck_number}}</small>\r\n                    </div>\r\n                </ng-template>\r\n\r\n                <ng-template #notFoundTemplate let-notFound>\r\n                    <div [innerHTML]=\"notFound\"></div>\r\n                </ng-template>\r\n            </div>\r\n        </div>\r\n\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Transporter\r\n            Name</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\"  name='transporter_name'\r\n                [(ngModel)]=\"truckData.transporter_name\" #transporter_name=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"transporter_name.invalid && (transporter_name.dirty || transporter_name.touched)\"\r\n                class=\"form-text text-danger\">\r\n                <div *ngIf=\"transporter_name.errors.required\"> Transporter Name is required. </div>\r\n            </div>\r\n        </div>\r\n\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Product\r\n            Code</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\"  name='product_code'\r\n                [(ngModel)]=\"truckData.product_code\" #product_code=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"product_code.invalid && (product_code.dirty || product_code.touched)\"\r\n                class=\"form-text text-danger\">\r\n                <div *ngIf=\"product_code.errors.required\"> Product Code is required. </div>\r\n            </div>\r\n        </div>\r\n\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Product\r\n            Name</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\"  name='product_name'\r\n                [(ngModel)]=\"truckData.product_name\" #product_name=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"product_name.invalid && (product_name.dirty || product_name.touched)\"\r\n                class=\"form-text text-danger\">\r\n                <div *ngIf=\"product_name.errors.required\"> Product Name is required. </div>\r\n            </div>\r\n        </div>\r\n\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Customer\r\n            Code</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\"  name='customer_code'\r\n                [(ngModel)]=\"truckData.customer_code\" #customer_code=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"customer_code.invalid && (customer_code.dirty || customer_code.touched)\"\r\n                class=\"form-text text-danger\">\r\n                <div *ngIf=\"customer_code.errors.required\"> Customer Code is required. </div>\r\n            </div>\r\n        </div>\r\n\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Customer\r\n            Name</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\"  name='customer_name'\r\n                [(ngModel)]=\"truckData.customer_name\" #customer_name=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"customer_name.invalid && (customer_name.dirty || customer_name.touched)\"\r\n                class=\"form-text text-danger\">\r\n                <div *ngIf=\"customer_name.errors.required\"> Customer Name is required. </div>\r\n            </div>\r\n        </div>\r\n\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\"\r\n            for=\"normal-input-1\">Destination</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\"  name='destination'\r\n                [(ngModel)]=\"truckData.destination\" #destination=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"destination.invalid && (destination.dirty || destination.touched)\"\r\n                class=\"form-text text-danger\">\r\n                <div *ngIf=\"destination.errors.required\"> Destination is required. </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Tare\r\n            Weight</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\"  name='tare_wt'\r\n                [(ngModel)]=\"truckData.tare_wt\" #tare_wt=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"tare_wt.invalid && (tare_wt.dirty || tare_wt.touched)\"\r\n                class=\"form-text text-danger\">\r\n                <div *ngIf=\"tare_wt.errors.required\"> Tare Weight is required. </div>\r\n            </div>\r\n        </div>\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Target\r\n            Weight</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\"  name='target_wt'\r\n                [(ngModel)]=\"truckData.target_wt\" #target_wt=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"target_wt.invalid && (target_wt.dirty || target_wt.touched)\" class=\"form-text text-danger\">\r\n                <div *ngIf=\"target_wt.errors.required\"> Target Weight is required. </div>\r\n            </div>\r\n        </div>\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Max Gross\r\n            Weight</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\"  name='max_gross_wt'\r\n                [(ngModel)]=\"truckData.max_gross_wt\" #max_gross_wt=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"max_gross_wt.invalid && (max_gross_wt.dirty || max_gross_wt.touched)\"\r\n                class=\"form-text text-danger\">\r\n                <div *ngIf=\"max_gross_wt.errors.required\"> Max Gross Weight is required. </div>\r\n            </div>\r\n        </div>\r\n\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">CCOE\r\n            Weight</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\"  name='ccoe_wt'\r\n                [(ngModel)]=\"truckData.ccoe_wt\" #ccoe_wt=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"ccoe_wt.invalid && (ccoe_wt.dirty || ccoe_wt.touched)\" class=\"form-text text-danger\">\r\n                <div *ngIf=\"ccoe_wt.errors.required\"> CCOE Weight is required. </div>\r\n            </div>\r\n        </div>\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Coarse Set\r\n            Point</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\"  name='coarse_set_point'\r\n                [(ngModel)]=\"truckData.coarse_set_point\" #coarse_set_point=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"coarse_set_point.invalid && (coarse_set_point.dirty || coarse_set_point.touched)\"\r\n                class=\"form-text text-danger\">\r\n                <div *ngIf=\"coarse_set_point.errors.required\"> Coarse Set Point is required. </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- <div class=\"col-md-6 col-sm-9 mb-3\">\r\n            <input type=\"text\" mask=\"d0/M0/0000\" />\r\n            <div class=\"input-group\">\r\n                <input type=\"text\" class=\"form-control\" mask=\"09/09/9999\" placeholder=\"Date\" aria-label=\"Date\">\r\n                <span class=\"help-block\">09/09/9999</span>\r\n            </div>\r\n        </div> -->\r\n\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">SRV Due\r\n            Date</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control form-control-sm\"  name='srv_due_date'\r\n                    [(ngModel)]=\"truckData.srv_due_date \" #srv_due_date=\"ngModel\" required>\r\n                    <!-- <input class=\"form-control form-control-sm\" placeholder=\"yyyy-mm-dd\" name=\"srvDueDate\"\r\n                        [(ngModel)]=\"truckData.srvDueDate\" ngbDatepicker #srvDueDate=\"ngbDatepicker\">\r\n                    <div class=\"input-group-append\">\r\n                        <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                            (click)=\"srvDueDate.toggle()\">\r\n                            <img src=\"assets/images/example/calendar-icon.svg\"\r\n                                style=\"width: 1.2rem; height: 1rem; cursor: pointer;\" />\r\n                        </button>\r\n                    </div> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">CCOE Licence\r\n            Date</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control form-control-sm\"  name='ccoe_licence_date'\r\n                    [(ngModel)]=\"truckData.ccoe_licence_date\" #ccoe_licence_date=\"ngModel\" required>\r\n                    <!-- <input class=\"form-control form-control-sm\" placeholder=\"yyyy-mm-dd\" name=\"ccoeLicenseDate\"\r\n                        [(ngModel)]=\"truckData.ccoeLicenseDate\" ngbDatepicker\r\n                        #ccoeLicenseDate=\"ngbDatepicker\">\r\n                    <div class=\"input-group-append\">\r\n                        <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                            (click)=\"ccoeLicenseDate.toggle()\">\r\n                            <img src=\"assets/images/example/calendar-icon.svg\"\r\n                                style=\"width: 1.2rem; height: 1rem; cursor: pointer;\" />\r\n                        </button>\r\n                    </div> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">EECV Due\r\n            Date</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control form-control-sm\"  name='eecv_due_date'\r\n                    [(ngModel)]=\"truckData.eecv_due_date\" #eecv_due_date=\"ngModel\" required>\r\n                    <!-- <input class=\"form-control form-control-sm\" placeholder=\"yyyy-mm-dd\" name=\"eecvDueDate\"\r\n                        [(ngModel)]=\"truckData.eecvDueDate\" ngbDatepicker #eecvDueDate=\"ngbDatepicker\">\r\n                    <div class=\"input-group-append\">\r\n                        <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                            (click)=\"eecvDueDate.toggle()\">\r\n                            <img src=\"assets/images/example/calendar-icon.svg\"\r\n                                style=\"width: 1.2rem; height: 1rem; cursor: pointer;\" />\r\n                        </button>\r\n                    </div> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Hydro Test Due\r\n            Date</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control form-control-sm\"  name='hydro_test_due_date'\r\n                    [(ngModel)]=\"truckData.hydro_test_due_date\" #hydro_test_due_date=\"ngModel\" required>\r\n                    <!-- <input class=\"form-control form-control-sm\" placeholder=\"yyyy-mm-dd\" name=\"hydroDueDate\"\r\n                        [(ngModel)]=\"truckData.hydroDueDate\" ngbDatepicker #hydroDueDate=\"ngbDatepicker\">\r\n                    <div class=\"input-group-append\">\r\n                        <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                            (click)=\"hydroDueDate.toggle()\">\r\n                            <img src=\"assets/images/example/calendar-icon.svg\"\r\n                                style=\"width: 1.2rem; height: 1rem; cursor: pointer;\" />\r\n                        </button>\r\n                    </div> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">FC Due\r\n            Date</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control form-control-sm\"  name='fc_due_date'\r\n                    [(ngModel)]=\"truckData.fc_due_date\" #fc_due_date=\"ngModel\" required>\r\n\r\n                    <!-- <input class=\"form-control form-control-sm\" placeholder=\"yyyy-mm-dd\" name=\"fcDueDate\"\r\n                        [(ngModel)]=\"truckData.fcDueDate\" ngbDatepicker #fcDueDate=\"ngbDatepicker\">\r\n                    <div class=\"input-group-append\">\r\n                        <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                            (click)=\"fcDueDate.toggle()\">\r\n                            <img src=\"assets/images/example/calendar-icon.svg\"\r\n                                style=\"width: 1.2rem; height: 1rem; cursor: pointer;\" />\r\n                        </button>\r\n                    </div> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Read Permit\r\n            Date</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control form-control-sm\"  name='read_permit_date'\r\n                    [(ngModel)]=\"truckData.read_permit_date\" #read_permit_date=\"ngModel\" required>\r\n\r\n                    <!-- <input class=\"form-control form-control-sm\" placeholder=\"yyyy-mm-dd\" name=\"readPermitDate\"\r\n                        [(ngModel)]=\"truckData.readPermitDate\" ngbDatepicker\r\n                        #readPermitDate=\"ngbDatepicker\">\r\n                    <div class=\"input-group-append\">\r\n                        <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                            (click)=\"readPermitDate.toggle()\">\r\n                            <img src=\"assets/images/example/calendar-icon.svg\"\r\n                                style=\"width: 1.2rem; height: 1rem; cursor: pointer;\" />\r\n                        </button>\r\n                    </div> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Fire Extinguisher\r\n            Date</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control form-control-sm\"  name='fire_extinguisher_date'\r\n                    [(ngModel)]=\"truckData.fire_extinguisher_date \" #fire_extinguisher_date=\"ngModel\" required>\r\n\r\n                    <!-- <input class=\"form-control form-control-sm\" placeholder=\"yyyy-mm-dd\" name=\"fireextinguisherDate\"\r\n                        [(ngModel)]=\"truckData.fireextinguisherDate\" ngbDatepicker\r\n                        #fireextinguisherDate=\"ngbDatepicker\">\r\n                    <div class=\"input-group-append\">\r\n                        <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                            (click)=\"fireextinguisherDate.toggle()\">\r\n                            <img src=\"assets/images/example/calendar-icon.svg\"\r\n                                style=\"width: 1.2rem; height: 1rem; cursor: pointer;\" />\r\n                        </button>\r\n                    </div> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Insurance Due\r\n            Date</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control form-control-sm\"  name='insurance_due_date'\r\n                    [(ngModel)]=\"truckData.insurance_due_date\" #insurance_due_date=\"ngModel\" required>\r\n\r\n                    <!-- <input class=\"form-control form-control-sm\" placeholder=\"yyyy-mm-dd\" name=\"insuranceDueDate\"\r\n                        [(ngModel)]=\"truckData.insuranceDueDate\" ngbDatepicker\r\n                        #insuranceDueDate=\"ngbDatepicker\">\r\n                    <div class=\"input-group-append\">\r\n                        <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                            (click)=\"insuranceDueDate.toggle()\">\r\n                            <img src=\"assets/images/example/calendar-icon.svg\"\r\n                                style=\"width: 1.2rem; height: 1rem; cursor: pointer;\" />\r\n                        </button>\r\n                    </div> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Any Special\r\n            Remarks</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                    <textarea _ngcontent-yqo-c332=\"\" aria-label=\"With textarea\"  [(ngModel)]=\"truckData.special_remarks\" name='special_remarks'\r\n                    #special_remarks=\"ngModel\" \r\n                        class=\"form-control form-control-sm\"></textarea>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n    <div class=\"form-group form-row\">\r\n        <div class=\"col-md-2 col-sm-3 text-sm-right mb-4 mb-sm-0\">\r\n\r\n        </div>\r\n        <div class=\"col-md-1 col-sm-3 mb-4 mb-sm-0\" style=\"width: 150px;\">\r\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]='!truckForm.valid'>Save</button>\r\n\r\n        </div>\r\n        <div class=\"col-md-1 col-sm-3 mb-4 mb-sm-0\" style=\"width: 150px;\">\r\n            <button type=\"submit\" class=\"btn btn-primary\">Print</button>\r\n\r\n        </div>\r\n        <div class=\"col-md-1 col-sm-3 mb-4 mb-sm-0\" style=\"width: 150px;\">\r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"resetForm()\">Reset</button>\r\n\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BaseServiceService } from '@app/services/base-service.service';\r\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport axios from 'axios';\r\n\r\n@Component({\r\n  selector: 'app-order-entry-form',\r\n  templateUrl: './order-entry-form.component.html',\r\n  styleUrls: ['./order-entry-form.component.scss']\r\n})\r\nexport class OrderEntryFormComponent implements OnInit {\r\n\r\n  truckData:any = {};\r\n  keyword = 'truck_number';\r\n  truckList:any = [];\r\n  \r\n  constructor(private router: Router, private baseService: BaseServiceService,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getTrucksList();\r\n  }\r\n\r\n  resetForm(){\r\n    this.truckData = {};\r\n    return;\r\n  }\r\n\r\n \r\n  truckSelected(a) {\r\n    console.log(a);\r\n    this.getTruckById(a);\r\n  }\r\n  getTrucksList() {\r\n    axios.get(this.baseService.baseUrl + 'api/truck',{\r\n      \r\n    })\r\n      .then(response => {  \r\n        console.log(response);\r\n              \r\n        this.truckList = response.data.data;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n  getTruckById(obj) {\r\n    axios.get(this.baseService.baseUrl + 'api/truck/' + obj.truck_number,{\r\n      \r\n    })\r\n      .then(response => {        \r\n       \r\n        if (response.status) {\r\n          this.truckData = response.data.data;\r\n          console.log(this.truckData);\r\n          console.log(response.data);\r\n          \r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n  \r\n  formSubmit() {\r\n    axios.put(\r\n      this.baseService.baseUrl + 'api/truck/'+  this.truckData._id,\r\n      this.truckData,\r\n      {\r\n        // headers: {\r\n        //   \"Authorization\": `Bearer ${this.authS.userValue.jwtToken}`\r\n        // }\r\n      }\r\n    )\r\n      .then(response => {\r\n        console.log('resp: ', response);\r\n        location.reload();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n\r\n\r\n}\r\n","\r\n<div class=\"\">\r\n\r\n    <div class=\"form-group form-row\">\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Card No</label>\r\n\r\n        <div class=\"col-md-3 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\"  name='cardNo'\r\n                [(ngModel)]=\"truckData.cardNo\" #cardNo=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"cardNo.invalid && (cardNo.dirty || cardNo.touched)\" class=\"form-text text-danger\">\r\n                <div *ngIf=\"cardNo.errors.required\"> Card No is required. </div>\r\n            </div>\r\n        </div>\r\n        <label class=\"col-md-1 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Date</label>\r\n\r\n        <div class=\"col-md-2 col-sm-9 mb-3 d-flex align-items-center\">\r\n            02-12-2020 06:54:15\r\n        </div>\r\n        <label class=\"col-md-1 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Bay No</label>\r\n\r\n        <div class=\"col-md-3 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\"  name='bayNo'\r\n                [(ngModel)]=\"truckData.bayNo\" #bayNo=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"bayNo.invalid && (bayNo.dirty || bayNo.touched)\" class=\"form-text text-danger\">\r\n                <div *ngIf=\"bayNo.errors.required\"> Bay No is required. </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<form #truckForm='ngForm' novalidate (ngSubmit)=\"formSubmit()\">\r\n\r\n    <div class=\"form-group form-row\">\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Truck\r\n            Number</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <div class=\"ng-autocomplete\" style=\"width: auto;\">\r\n                <ng-autocomplete [data]=\"truckList\" [searchKeyword]=\"keyword\"\r\n                     historyIdentifier=\"truckList\"\r\n                    [itemTemplate]=\"itemTemplate\" [notFoundTemplate]=\"notFoundTemplate\"  (selected)='truckSelected($event)' >\r\n                </ng-autocomplete>\r\n\r\n                <ng-template #itemTemplate let-item>\r\n                    <div class=\"item\">\r\n                       \r\n                        <small>{{item.truck_number}}</small>\r\n                    </div>\r\n                </ng-template>\r\n\r\n                <ng-template #notFoundTemplate let-notFound>\r\n                    <div [innerHTML]=\"notFound\"></div>\r\n                </ng-template>\r\n            </div>\r\n        </div>\r\n       \r\n    </div>\r\n    <div class=\"form-group form-row\">\r\n        <!-- <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Truck Number</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Truck Number\" name='truckNumber'\r\n                [(ngModel)]=\"truckData.truckNumber\" #truckNumber=\"ngModel\" required >\r\n\r\n            <div *ngIf=\"truckNumber.invalid && (truckNumber.dirty || truckNumber.touched)\"\r\n                class=\"form-text text-danger\">\r\n                <div *ngIf=\"truckNumber.errors.required\"> Truck Number is required. </div>\r\n            </div>\r\n        </div> -->\r\n\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Transporter\r\n            Name</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\" name='transporter_name'\r\n                [(ngModel)]=\"truckData.transporter_name\" #transporter_name=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"transporter_name.invalid && (transporter_name.dirty || transporter_name.touched)\"\r\n                class=\"form-text text-danger\">\r\n                <div *ngIf=\"transporter_name.errors.required\"> Transporter Name is required. </div>\r\n            </div>\r\n        </div>\r\n\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Product\r\n            Code</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\"  name='product_code'\r\n                [(ngModel)]=\"truckData.product_code\" #product_code=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"product_code.invalid && (product_code.dirty || product_code.touched)\"\r\n                class=\"form-text text-danger\">\r\n                <div *ngIf=\"product_code.errors.required\"> Product Code is required. </div>\r\n            </div>\r\n        </div>\r\n\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Product\r\n            Name</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\" name='product_name'\r\n                [(ngModel)]=\"truckData.product_name\" #product_name=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"product_name.invalid && (product_name.dirty || product_name.touched)\"\r\n                class=\"form-text text-danger\">\r\n                <div *ngIf=\"product_name.errors.required\"> Product Name is required. </div>\r\n            </div>\r\n        </div>\r\n\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Customer\r\n            Code</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\" name='customer_code'\r\n                [(ngModel)]=\"truckData.customer_code\" #customer_code=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"customer_code.invalid && (customer_code.dirty || customer_code.touched)\"\r\n                class=\"form-text text-danger\">\r\n                <div *ngIf=\"customer_code.errors.required\"> Customer Code is required. </div>\r\n            </div>\r\n        </div>\r\n\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Customer\r\n            Name</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\"  name='customer_name'\r\n                [(ngModel)]=\"truckData.customer_name\" #customer_name=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"customer_name.invalid && (customer_name.dirty || customer_name.touched)\"\r\n                class=\"form-text text-danger\">\r\n                <div *ngIf=\"customer_name.errors.required\"> Customer Name is required. </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\"\r\n            for=\"normal-input-1\">Destination</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\"  name='destination'\r\n                [(ngModel)]=\"truckData.destination\" #destination=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"destination.invalid && (destination.dirty || destination.touched)\"\r\n                class=\"form-text text-danger\">\r\n                <div *ngIf=\"destination.errors.required\"> Destination is required. </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Tare\r\n            Weight</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\"  name='tare_wt'\r\n                [(ngModel)]=\"truckData.tare_wt\" #tare_wt=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"tare_wt.invalid && (tare_wt.dirty || tare_wt.touched)\"\r\n                class=\"form-text text-danger\">\r\n                <div *ngIf=\"tare_wt.errors.required\"> Tare Weight is required. </div>\r\n            </div>\r\n        </div>\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Target\r\n            Weight</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\"  name='target_wt'\r\n                [(ngModel)]=\"truckData.target_wt\" #target_wt=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"target_wt.invalid && (target_wt.dirty || target_wt.touched)\" class=\"form-text text-danger\">\r\n                <div *ngIf=\"target_wt.errors.required\"> Target Weight is required. </div>\r\n            </div>\r\n        </div>\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Max Gross\r\n            Weight</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\"  name='max_gross_wt'\r\n                [(ngModel)]=\"truckData.max_gross_wt\" #max_gross_wt=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"max_gross_wt.invalid && (max_gross_wt.dirty || max_gross_wt.touched)\"\r\n                class=\"form-text text-danger\">\r\n                <div *ngIf=\"max_gross_wt.errors.required\"> Max Gross Weight is required. </div>\r\n            </div>\r\n        </div>\r\n\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">CCOE\r\n            Weight</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\"  name='ccoe_wt'\r\n                [(ngModel)]=\"truckData.ccoe_wt\" #ccoe_wt=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"ccoe_wt.invalid && (ccoe_wt.dirty || ccoe_wt.touched)\" class=\"form-text text-danger\">\r\n                <div *ngIf=\"ccoe_wt.errors.required\"> CCOE Weight is required. </div>\r\n            </div>\r\n        </div>\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Coarse Set\r\n            Point</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\"  name='coarse_set_point'\r\n                [(ngModel)]=\"truckData.coarse_set_point\" #coarse_set_point=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"coarse_set_point.invalid && (coarse_set_point.dirty || coarse_set_point.touched)\"\r\n                class=\"form-text text-danger\">\r\n                <div *ngIf=\"coarse_set_point.errors.required\"> Coarse Set Point is required. </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">SRV Due\r\n            Date</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control form-control-sm\"  name='srv_due_date'\r\n                    [(ngModel)]=\"truckData.srv_due_date \" #srv_due_date=\"ngModel\" required>\r\n                    <!-- <input class=\"form-control form-control-sm\" placeholder=\"yyyy-mm-dd\" name=\"srvDueDate\"\r\n                        [(ngModel)]=\"truckData.srvDueDate\" ngbDatepicker #srvDueDate=\"ngbDatepicker\">\r\n                    <div class=\"input-group-append\">\r\n                        <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                            (click)=\"srvDueDate.toggle()\">\r\n                            <img src=\"assets/images/example/calendar-icon.svg\"\r\n                                style=\"width: 1.2rem; height: 1rem; cursor: pointer;\" />\r\n                        </button>\r\n                    </div> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">CCOE Licence\r\n            Date</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control form-control-sm\"  name='ccoe_licence_date'\r\n                    [(ngModel)]=\"truckData.ccoe_licence_date\" #ccoe_licence_date=\"ngModel\" required>\r\n                    <!-- <input class=\"form-control form-control-sm\" placeholder=\"yyyy-mm-dd\" name=\"ccoeLicenseDate\"\r\n                        [(ngModel)]=\"truckData.ccoeLicenseDate\" ngbDatepicker\r\n                        #ccoeLicenseDate=\"ngbDatepicker\">\r\n                    <div class=\"input-group-append\">\r\n                        <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                            (click)=\"ccoeLicenseDate.toggle()\">\r\n                            <img src=\"assets/images/example/calendar-icon.svg\"\r\n                                style=\"width: 1.2rem; height: 1rem; cursor: pointer;\" />\r\n                        </button>\r\n                    </div> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">EECV Due\r\n            Date</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control form-control-sm\"  name='eecv_due_date'\r\n                    [(ngModel)]=\"truckData.eecv_due_date\" #eecv_due_date=\"ngModel\" required>\r\n                    <!-- <input class=\"form-control form-control-sm\" placeholder=\"yyyy-mm-dd\" name=\"eecvDueDate\"\r\n                        [(ngModel)]=\"truckData.eecvDueDate\" ngbDatepicker #eecvDueDate=\"ngbDatepicker\">\r\n                    <div class=\"input-group-append\">\r\n                        <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                            (click)=\"eecvDueDate.toggle()\">\r\n                            <img src=\"assets/images/example/calendar-icon.svg\"\r\n                                style=\"width: 1.2rem; height: 1rem; cursor: pointer;\" />\r\n                        </button>\r\n                    </div> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Hydro Test Due\r\n            Date</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control form-control-sm\"  name='hydro_test_due_date'\r\n                    [(ngModel)]=\"truckData.hydro_test_due_date\" #hydro_test_due_date=\"ngModel\" required>\r\n                    <!-- <input class=\"form-control form-control-sm\" placeholder=\"yyyy-mm-dd\" name=\"hydroDueDate\"\r\n                        [(ngModel)]=\"truckData.hydroDueDate\" ngbDatepicker #hydroDueDate=\"ngbDatepicker\">\r\n                    <div class=\"input-group-append\">\r\n                        <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                            (click)=\"hydroDueDate.toggle()\">\r\n                            <img src=\"assets/images/example/calendar-icon.svg\"\r\n                                style=\"width: 1.2rem; height: 1rem; cursor: pointer;\" />\r\n                        </button>\r\n                    </div> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">FC Due\r\n            Date</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control form-control-sm\"  name='fc_due_date'\r\n                    [(ngModel)]=\"truckData.fc_due_date\" #fc_due_date=\"ngModel\" required>\r\n\r\n                    <!-- <input class=\"form-control form-control-sm\" placeholder=\"yyyy-mm-dd\" name=\"fcDueDate\"\r\n                        [(ngModel)]=\"truckData.fcDueDate\" ngbDatepicker #fcDueDate=\"ngbDatepicker\">\r\n                    <div class=\"input-group-append\">\r\n                        <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                            (click)=\"fcDueDate.toggle()\">\r\n                            <img src=\"assets/images/example/calendar-icon.svg\"\r\n                                style=\"width: 1.2rem; height: 1rem; cursor: pointer;\" />\r\n                        </button>\r\n                    </div> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Read Permit\r\n            Date</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control form-control-sm\"  name='read_permit_date'\r\n                    [(ngModel)]=\"truckData.read_permit_date\" #read_permit_date=\"ngModel\" required>\r\n\r\n                    <!-- <input class=\"form-control form-control-sm\" placeholder=\"yyyy-mm-dd\" name=\"readPermitDate\"\r\n                        [(ngModel)]=\"truckData.readPermitDate\" ngbDatepicker\r\n                        #readPermitDate=\"ngbDatepicker\">\r\n                    <div class=\"input-group-append\">\r\n                        <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                            (click)=\"readPermitDate.toggle()\">\r\n                            <img src=\"assets/images/example/calendar-icon.svg\"\r\n                                style=\"width: 1.2rem; height: 1rem; cursor: pointer;\" />\r\n                        </button>\r\n                    </div> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Fire Extinguisher\r\n            Date</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control form-control-sm\"  name='fire_extinguisher_date'\r\n                    [(ngModel)]=\"truckData.fire_extinguisher_date \" #fire_extinguisher_date=\"ngModel\" required>\r\n\r\n                    <!-- <input class=\"form-control form-control-sm\" placeholder=\"yyyy-mm-dd\" name=\"fireextinguisherDate\"\r\n                        [(ngModel)]=\"truckData.fireextinguisherDate\" ngbDatepicker\r\n                        #fireextinguisherDate=\"ngbDatepicker\">\r\n                    <div class=\"input-group-append\">\r\n                        <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                            (click)=\"fireextinguisherDate.toggle()\">\r\n                            <img src=\"assets/images/example/calendar-icon.svg\"\r\n                                style=\"width: 1.2rem; height: 1rem; cursor: pointer;\" />\r\n                        </button>\r\n                    </div> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Insurance Due\r\n            Date</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control form-control-sm\"  name='insurance_due_date'\r\n                    [(ngModel)]=\"truckData.insurance_due_date\" #insurance_due_date=\"ngModel\" required>\r\n\r\n                    <!-- <input class=\"form-control form-control-sm\" placeholder=\"yyyy-mm-dd\" name=\"insuranceDueDate\"\r\n                        [(ngModel)]=\"truckData.insuranceDueDate\" ngbDatepicker\r\n                        #insuranceDueDate=\"ngbDatepicker\">\r\n                    <div class=\"input-group-append\">\r\n                        <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                            (click)=\"insuranceDueDate.toggle()\">\r\n                            <img src=\"assets/images/example/calendar-icon.svg\"\r\n                                style=\"width: 1.2rem; height: 1rem; cursor: pointer;\" />\r\n                        </button>\r\n                    </div> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n      \r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Qty To be\r\n            Loaded</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Qty To be Loaded\" name='qtyTobeLoaded'\r\n                [(ngModel)]=\"truckData.qtyTobeLoaded\" #qtyTobeLoaded=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"qtyTobeLoaded.invalid && (qtyTobeLoaded.dirty || qtyTobeLoaded.touched)\"\r\n                class=\"form-text text-danger\">\r\n                <div *ngIf=\"qtyTobeLoaded.errors.required\"> Qty To be Loaded is required. </div>\r\n            </div>\r\n        </div>\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\"> Remarks</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                    <textarea _ngcontent-yqo-c332=\"\" [(ngModel)]=\"truckData.special_remarks\" name='special_remarks'\r\n                        #special_remarks=\"ngModel\" aria-label=\"With textarea\" class=\"form-control form-control-sm\"></textarea>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Customer Order\r\n            No</label>\r\n\r\n        <div class=\"col-md-4 col-sm-9 mb-3\">\r\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Customer Order No\" name='customerOrderNo'\r\n                [(ngModel)]=\"truckData.customerOrderNo\" #customerOrderNo=\"ngModel\" required>\r\n\r\n            <div *ngIf=\"customerOrderNo.invalid && (customerOrderNo.dirty || customerOrderNo.touched)\"\r\n                class=\"form-text text-danger\">\r\n                <div *ngIf=\"customerOrderNo.errors.required\"> Customer Order No is required. </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n    <div class=\"loading-type mb-3\" style=\"border: 2px solid #efefef;padding:1rem; \">\r\n        <div class=\"form-row\">\r\n            <div class=\"col-2\"></div>\r\n            <label class=\"col-md-2 col-sm-3 dt-card__title ng-star-inserted \">Loading Type</label>\r\n        </div>\r\n        <br>\r\n        <div class=\"form-group form-row\">\r\n            <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">No Of\r\n                Loading</label>\r\n\r\n            <div class=\"col-md-4 col-sm-9 mb-3\">\r\n                <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"No Of Loading\" name='noOfLoading'\r\n                    [(ngModel)]=\"truckData.noOfLoading\" #noOfLoading=\"ngModel\" required>\r\n\r\n                <div *ngIf=\"noOfLoading.invalid && (noOfLoading.dirty || noOfLoading.touched)\"\r\n                    class=\"form-text text-danger\">\r\n                    <div *ngIf=\"noOfLoading.errors.required\"> No Of Loading is required. </div>\r\n                </div>\r\n            </div>\r\n            <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Tare\r\n                Wt</label>\r\n\r\n            <div class=\"col-md-4 col-sm-9 mb-3\">\r\n                <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Tare Wt\" name='tareWt'\r\n                    [(ngModel)]=\"truckData.tareWt\" #tareWt=\"ngModel\" required>\r\n\r\n                <div *ngIf=\"tareWt.invalid && (tareWt.dirty || tareWt.touched)\"\r\n                    class=\"form-text text-danger\">\r\n                    <div *ngIf=\"tareWt.errors.required\"> Tare Wt is required. </div>\r\n                </div>\r\n            </div>\r\n            <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Tare\r\n                Wt</label>\r\n\r\n            <div class=\"col-md-4 col-sm-9 mb-3\">\r\n                <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Tare Wt\" name='tareWt'\r\n                    [(ngModel)]=\"truckData.tareWt\" #tareWt=\"ngModel\" required>\r\n\r\n                <div *ngIf=\"tareWt.invalid && (tareWt.dirty || tareWt.touched)\"\r\n                    class=\"form-text text-danger\">\r\n                    <div *ngIf=\"tareWt.errors.required\"> Tare Wt is required. </div>\r\n                </div>\r\n            </div>\r\n            <label class=\"col-md-2 col-sm-3 col-form-label col-form-label-sm text-sm-right\" for=\"normal-input-1\">Tare\r\n                Wt</label>\r\n\r\n            <div class=\"col-md-4 col-sm-9 mb-3\">\r\n                <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Tare Wt\" name='tareWt'\r\n                    [(ngModel)]=\"truckData.tareWt\" #tareWt=\"ngModel\" required>\r\n\r\n                <div *ngIf=\"tareWt.invalid && (tareWt.dirty || tareWt.touched)\"\r\n                    class=\"form-text text-danger\">\r\n                    <div *ngIf=\"tareWt.errors.required\"> Tare Wt is required. </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group form-row\">\r\n        <div class=\"col-md-2 col-sm-3 text-sm-right mb-4 mb-sm-0\">\r\n\r\n        </div>\r\n        <div class=\"col-md-1 col-sm-3 mb-4 mb-sm-0\" style=\"width: 150px;\">\r\n            <button type=\"submit\" class=\"btn btn-primary\" >Save</button>\r\n\r\n        </div>\r\n        <div class=\"col-md-1 col-sm-3 mb-4 mb-sm-0\" style=\"width: 150px;\">\r\n            <button type=\"submit\" class=\"btn btn-primary\">Print</button>\r\n\r\n        </div>\r\n        <div class=\"col-md-1 col-sm-3 mb-4 mb-sm-0\" style=\"width: 150px;\">\r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"resetForm()\">Reset</button>\r\n\r\n        </div>\r\n    </div>\r\n</form>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EntryFormComponent } from './entry-form/entry-form.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SharedModule } from '@gaxon/modules';\r\n\r\nimport {NgxMasonryModule} from 'ngx-masonry';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgbDate,NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AutocompleteLibModule } from 'angular-ng-autocomplete';\r\nimport { TruckEntryFormComponent } from './entry-form/truck-entry-form/truck-entry-form.component';\r\nimport { OrderEntryFormComponent } from './entry-form/order-entry-form/order-entry-form.component';\r\nconst appsRoutes: Routes = [\r\n  {\r\n    path: 'entry-form',\r\n  \r\n    component: EntryFormComponent\r\n  },\r\n  {\r\n    path: 'order-form',\r\n  \r\n    component: OrderEntryFormComponent\r\n  },\r\n  {\r\n    path: '**',\r\n    component: EntryFormComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [EntryFormComponent, TruckEntryFormComponent, OrderEntryFormComponent],\r\n  imports: [\r\n    CommonModule,\r\n    \r\n    ReactiveFormsModule,NgbModule,\r\n    AutocompleteLibModule,FormsModule,\r\n    RouterModule.forChild(appsRoutes)\r\n  ],exports:[EntryFormComponent, TruckEntryFormComponent, OrderEntryFormComponent]\r\n})\r\nexport class MainBlockModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-entry-form',\r\n  templateUrl: './entry-form.component.html',\r\n  styleUrls: ['./entry-form.component.scss']\r\n})\r\nexport class EntryFormComponent implements OnInit {\r\n  snippets: string = '';\r\n  navsAlignment: string = 'start';\r\n  navsOrientation: string = 'horizontal';\r\n  active = 1;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- <div class=\"p-3\">\r\n  \r\n    <app-truck-entry-form></app-truck-entry-form>\r\n\r\n    <app-order-entry-form></app-order-entry-form>\r\n</div> -->\r\n<div class=\"row m-4\">\r\n\r\n    <div class=\"card col-12\">\r\n        <div class=\"card-body pt-3\">\r\n            <ul ngbNav #nav=\"ngbNav\" [(activeId)]=\"active\" class=\"nav-tabs justify-content-around\" style=\"border-bottom: 1px solid #512da8 !important;\" demoTitle=\"Pills Tabs\">\r\n                <li [ngbNavItem]=\"1\">\r\n                  <a ngbNavLink>Truck Master Form</a>\r\n                  <ng-template ngbNavContent>\r\n                    <app-truck-entry-form></app-truck-entry-form>\r\n                  </ng-template>\r\n                </li>\r\n                <li [ngbNavItem]=\"2\">\r\n                  <a ngbNavLink>Customer Order Entry</a>\r\n                  <ng-template ngbNavContent>\r\n                    <app-order-entry-form></app-order-entry-form>\r\n                  </ng-template>\r\n                </li>\r\n                \r\n              </ul>\r\n              \r\n              <div [ngbNavOutlet]=\"nav\" class=\"mt-2\"></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"]}