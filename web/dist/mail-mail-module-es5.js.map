{"version":3,"sources":["webpack:///src/app/content/pages/mail/mail-header/mail-header.component.ts","webpack:///src/app/content/pages/mail/mail-header/mail-header.component.html","webpack:///src/app/content/pages/mail/drawer/notifications/notifications.component.ts","webpack:///src/app/content/pages/mail/drawer/notifications/notifications.component.html","webpack:///src/app/content/pages/mail/helper-widgets/contact-hover-card/contact-hover-card.component.ts","webpack:///src/app/content/pages/mail/helper-widgets/contact-hover-card/contact-hover-card.component.html","webpack:///src/app/content/pages/mail/mail.module.ts","webpack:///src/app/content/pages/mail/helper-widgets/badges/badges.component.ts","webpack:///src/app/content/pages/mail/helper-widgets/badges/badges.component.html","webpack:///src/app/content/pages/mail/mail-details/mail-details.component.ts","webpack:///src/app/content/pages/mail/mail-details/mail-details.component.html","webpack:///src/app/content/pages/mail/mail.service.ts","webpack:///src/app/content/pages/mail/mail-details/mail-conversation/mail-conversation.component.ts","webpack:///src/app/content/pages/mail/mail-details/mail-conversation/mail-conversation.component.html","webpack:///src/app/content/pages/mail/helper-widgets/contact/contact.component.ts","webpack:///src/app/content/pages/mail/helper-widgets/contact/contact.component.html","webpack:///src/app/content/pages/mail/mail-compose/mail-compose.component.ts","webpack:///src/app/content/pages/mail/mail-compose/mail-compose.component.html","webpack:///src/app/content/pages/mail/mail-sidebar/mail-sidebar.component.ts","webpack:///src/app/content/pages/mail/mail-sidebar/mail-sidebar.component.html","webpack:///src/app/content/pages/mail/mail.component.ts","webpack:///src/app/content/pages/mail/mail.component.html","webpack:///src/app/content/pages/mail/mail-details/details-header/details-header.component.ts","webpack:///src/app/content/pages/mail/mail-details/details-header/details-header.component.html","webpack:///src/app/content/pages/mail/mail-list/mail-item/mail-item.component.ts","webpack:///src/app/content/pages/mail/mail-list/mail-item/mail-item.component.html","webpack:///src/app/content/pages/mail/helper-widgets/search-bar/search-bar.component.ts","webpack:///src/app/content/pages/mail/helper-widgets/search-bar/search-bar.component.html","webpack:///src/app/content/pages/mail/drawer/drawer.component.ts","webpack:///src/app/content/pages/mail/drawer/drawer.component.html","webpack:///src/app/content/pages/mail/mail-list/mail-list.component.ts","webpack:///src/app/content/pages/mail/mail-list/mail-list.component.html","webpack:///src/app/content/pages/mail/models/mail.model.ts","webpack:///src/app/content/pages/mail/module-header/module-header.component.ts","webpack:///src/app/content/pages/mail/module-header/module-header.component.html","webpack:///src/app/content/pages/mail/drawer/search/search.component.ts","webpack:///src/app/content/pages/mail/drawer/search/search.component.html"],"names":["MailHeaderComponent","mailService","classlist","selected","labels","folders","onSelectedMailsChanged","subscribe","selectedMails","setTimeout","hasSelectedMails","length","isIndeterminate","mails","onLabelsChanged","onFoldersChanged","toggleSelectAll","filterParameter","filterValue","selectMails","deselectMails","folderHandle","setFolderOnSelectedMails","labelId","toggleLabelOnSelectedMails","unsubscribe","selector","templateUrl","styleUrls","NotificationsComponent","appService","notifications","onNotificationsChanged","ContactHoverCardComponent","el","display","isVisible","nativeElement","onContactHovered","data","contact","show","position","setPosition","showContactHoveredCard","hideContactHoveredCard","windowHeight","window","innerHeight","style","top","left","width","cardHeight","offsetHeight","cardTotalHeight","onMouseEnter","onMouseLeave","DEFAULT_PERFECT_SCROLLBAR_CONFIG","suppressScrollX","wheelPropagation","routes","path","component","resolve","tasks","redirectTo","MailModule","provide","useValue","forChild","imports","declarations","providers","BadgesComponent","showAll","items","ids","slice","MailDetailsComponent","isOpened","onCurrentMailChanged","currentMail","markAsRead","scrollToBottom","read","saveMail","event","starred","directiveRef","update","onToggleStarred","MailService","http","location","mailsUrl","contactsUrl","labelsUrl","filtersUrl","foldersUrl","currentUser","name","email","avatar","onMailsChanged","onComposeMailClicked","onContactsChanged","onFiltersChanged","onSearchQueryChanged","route","state","routeParams","params","Promise","reject","all","getMails","getContacts","getLabels","getFilters","getFolders","then","mailId","setCurrentMail","getMailsByFolder","filterHandle","getMailsByFilter","labelHandle","getMailsByLabel","getMailsList","get","response","next","folder","filter","handle","id","filters","contacts","mail","index","indexOf","splice","push","find","undefined","map","x","Object","assign","taskParam","segments","split","go","post","providedIn","MailConversationComponent","conversation","ContactComponent","contactCardData","getBoundingClientRect","MailComposeComponent","componentRef","formBuilder","minimized","composeMailForm","createComposeForm","composeMail","resetMail","newMail","UUID","from","attachments","subject","message","toUsers","required","group","to","stopPropagation","today","Date","time","getDate","toLocaleString","month","value","onCloseClick","onSubmitForm","onDiscardMail","MailSidebarComponent","drawerService","settingService","router","classNames","isOpen","headerLessLayout","onDrawerChanged","drawer","activeMenu","onSettingChanged","newSettings","settings","hiddenPageHeader","includes","layout","events","innerWidth","target","console","log","preventDefault","ev","activeNavDrawer","setSettings","onClickMenu","onComposeMail","toggleOpen","animations","onResize","MailComponent","dynamicDom","hoverCard","appendComponentToBody","destroyCard","DetailsHeaderComponent","eleRef","classList","add","goToBack","hasLabel","toggleLabel","setFolder","markAsUnread","MailItemComponent","toggleSelectedMail","onSelectedChange","SearchBarComponent","searchQuery","valueChanges","pipe","searchText","DrawerComponent","draverClasses","showLoader","processLoader","closeDrawer","onSelectMenu","MailListComponent","searchStr","Mail","ModuleHeaderComponent","SearchComponent","messages","onMessagesChanged"],"mappings":"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","file":"mail-mail-module-es5.js","sourcesContent":["import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {MailService} from './../mail.service';\r\n\r\n@Component({\r\n  selector: 'mail-header',\r\n  templateUrl: './mail-header.component.html',\r\n  styleUrls: ['./mail-header.component.scss']\r\n})\r\nexport class MailHeaderComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'px-1 pb-4 border-bottom border-w-2 mb-1 mt-n1';\r\n  hasSelectedMails: boolean;\r\n  isIndeterminate: boolean;\r\n  selected = 'None';\r\n\r\n  labels: any[] = [];\r\n  folders: any[] = [];\r\n\r\n  onSelectedMailsChanged: Subscription;\r\n  onLabelsChanged: Subscription;\r\n  onFoldersChanged: Subscription;\r\n\r\n  constructor(private mailService: MailService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update SelectedMails on changes\r\n    this.onSelectedMailsChanged =\r\n      this.mailService.onSelectedMailsChanged\r\n        .subscribe(selectedMails => {\r\n\r\n          setTimeout(() => {\r\n            this.hasSelectedMails = selectedMails.length > 0;\r\n            this.isIndeterminate = (selectedMails.length !== this.mailService.mails.length && selectedMails.length > 0);\r\n\r\n            if (selectedMails.length === 0) {\r\n              this.selected = 'None';\r\n            } else if (selectedMails.length === this.mailService.mails.length) {\r\n              this.selected = 'All';\r\n            }\r\n          }, 0);\r\n        });\r\n\r\n    // Subscribe to update labels on changes\r\n    this.onLabelsChanged =\r\n      this.mailService.onLabelsChanged\r\n        .subscribe((labels: any) => {\r\n          this.labels = labels;\r\n        });\r\n\r\n    // Subscribe to update folders on changes\r\n    this.onFoldersChanged =\r\n      this.mailService.onFoldersChanged\r\n        .subscribe((folders: any) => {\r\n          this.folders = folders;\r\n        });\r\n  }\r\n\r\n  /**\r\n   * Toggle select all mails\r\n   */\r\n  toggleSelectAll() {\r\n    this.mailService.toggleSelectAll();\r\n  }\r\n\r\n  /**\r\n   * Select mails by filter\r\n   * @param selected\r\n   * @param filterParameter\r\n   * @param filterValue\r\n   */\r\n  selectMails(selected?, filterParameter?, filterValue?) {\r\n    this.selected = (selected) ? selected : this.selected;\r\n    this.mailService.selectMails(filterParameter, filterValue);\r\n  }\r\n\r\n  /**\r\n   * Deselect all mails\r\n   */\r\n  deselectMails() {\r\n    this.mailService.deselectMails();\r\n  }\r\n\r\n  /**\r\n   * Change folder to selected emails\r\n   * @param folderHandle\r\n   */\r\n  setFolderOnSelectedMails(folderHandle) {\r\n    this.mailService.setFolderOnSelectedMails(folderHandle);\r\n  }\r\n\r\n  /**\r\n   * Change lables to selectd emails\r\n   * @param labelId\r\n   */\r\n  toggleLabelOnSelectedMails(labelId) {\r\n    this.mailService.toggleLabelOnSelectedMails(labelId);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onLabelsChanged.unsubscribe();\r\n    this.onFoldersChanged.unsubscribe();\r\n    this.onSelectedMailsChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","<!-- Action Bar -->\r\n<div class=\"d-flex flex-wrap\">\r\n  <!-- Dropdown -->\r\n  <div ngbDropdown class=\"mr-auto\">\r\n\r\n    <!-- Checkbox -->\r\n    <gx-checkbox  class=\"mr-3\"\r\n                  [gxModel]=\"hasSelectedMails\"\r\n                 [indeterminate]=\"isIndeterminate\"\r\n                 (gxInputChange)=\"toggleSelectAll()\"></gx-checkbox>\r\n    <!-- /checkbox -->\r\n\r\n    <!-- Dropdown Button -->\r\n    <a href=\"javascript:void(0)\" class=\"text-dark\" ngbDropdownToggle> {{selected}} </a>\r\n    <!-- /dropdown button -->\r\n\r\n    <!-- Dropdown Menu -->\r\n    <div ngbDropdownMenu>\r\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\" (click)=\"selectMails()\">All</a>\r\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\" (click)=\"deselectMails()\">None</a>\r\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\" (click)=\"selectMails('Read', 'read', true)\">Read</a>\r\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\" (click)=\"selectMails('Unread', 'read', false)\">Unread</a>\r\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\" (click)=\"selectMails('Starred', 'starred', true)\">Starred</a>\r\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\" (click)=\"selectMails('Unstarred', 'starred', false)\">Unstarred</a>\r\n    </div>\r\n    <!-- /dropdown menu -->\r\n\r\n  </div>\r\n  <!-- /dropdown -->\r\n\r\n  <!-- Button Group -->\r\n  <div *ngIf=\"hasSelectedMails\" class=\"btn-group btn-group-sm mr-3 mr-lg-7 mb-1\" role=\"group\">\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"setFolderOnSelectedMails('archive')\">\r\n      <gx-icon name=\"archive\" [fw]=\"true\" size=\"lg\"></gx-icon>\r\n    </button>\r\n\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"setFolderOnSelectedMails('spam')\">\r\n      <gx-icon name=\"spam\" [fw]=\"true\" size=\"lg\"></gx-icon>\r\n    </button>\r\n\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"setFolderOnSelectedMails('trash')\">\r\n      <gx-icon name=\"trash-filled\" [fw]=\"true\" size=\"lg\"></gx-icon>\r\n    </button>\r\n  </div>\r\n  <!-- /button group -->\r\n\r\n  <!-- Button Group -->\r\n  <div *ngIf=\"hasSelectedMails\" class=\"btn-group btn-group-sm mr-4 mr-lg-7 mb-1\" role=\"group\">\r\n\r\n    <div class=\"btn-group btn-group-sm\" role=\"group\" ngbDropdown>\r\n      <button type=\"button\" class=\"btn btn-outline-dark no-arrow\" ngbDropdownToggle>\r\n        <gx-icon name=\"folder\" [fw]=\"true\" size=\"lg\"></gx-icon>\r\n      </button>\r\n\r\n      <div ngbDropdownMenu>\r\n        <a  *ngFor=\"let folder of folders\"\r\n            href=\"javascript:void(0)\"\r\n            class=\"dropdown-item\"\r\n            (click)=\"setFolderOnSelectedMails(folder.handle)\">{{folder.title}}</a>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"btn-group btn-group-sm\" role=\"group\" ngbDropdown placement=\"bottom-right\">\r\n      <button type=\"button\" class=\"btn btn-outline-dark no-arrow\" ngbDropdownToggle>\r\n        <gx-icon name=\"tag\" [fw]=\"true\" size=\"lg\"></gx-icon>\r\n      </button>\r\n\r\n      <div ngbDropdownMenu>\r\n        <a *ngFor=\"let label of labels\"\r\n           href=\"javascript:void(0)\"\r\n           class=\"dropdown-item\"\r\n           (click)=\"toggleLabelOnSelectedMails(label.id)\">{{label.title}}</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- /button group -->\r\n\r\n  <!-- Dropdown -->\r\n  <div *ngIf=\"hasSelectedMails\" ngbDropdown placement=\"bottom-right\">\r\n\r\n    <!-- Dropdown Button -->\r\n    <a href=\"javascript:void(0)\" class=\"btn btn-outline-dark btn-sm\" ngbDropdownToggle>\r\n      More\r\n    </a>\r\n    <!-- /dropdown button -->\r\n\r\n    <!-- Dropdown Menu -->\r\n    <div ngbDropdownMenu>\r\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\">Read</a>\r\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\">Unread</a>\r\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\">Starred</a>\r\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\">Unstarred</a>\r\n    </div>\r\n    <!-- /dropdown menu -->\r\n\r\n  </div>\r\n  <!-- /dropdown -->\r\n</div>\r\n<!-- /action bar -->\r\n","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {AppService} from '@app/app.service';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'todo-notifications',\r\n  templateUrl: './notifications.component.html',\r\n  styleUrls: ['./notifications.component.scss']\r\n})\r\nexport class NotificationsComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-notification';\r\n  notifications: any[] = [];\r\n  onNotificationsChanged: Subscription;\r\n\r\n  constructor(private appService: AppService) {\r\n    this.onNotificationsChanged = this.appService.onNotificationsChanged.subscribe((notifications: any[]) => {\r\n      this.notifications = notifications;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onNotificationsChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","<div class=\"d-flex align-items-center mb-6\">\r\n  <h5 class=\"mb-0\">Notifications ({{notifications.length}})</h5>\r\n\r\n  <div class=\"ml-auto action-area\">\r\n    <a href=\"javascript:void(0)\">Mark All Read</a>\r\n\r\n    <!-- Dropdown -->\r\n    <span class=\"ml-2 d-inline-block\" ngbDropdown placement=\"bottom-right\">\r\n      <a class=\"no-arrow\" href=\"javascript:void(0)\" ngbDropdownToggle>\r\n        <gx-icon name=\"settings\" size=\"lg\" class=\"text-light-gray\"></gx-icon>\r\n      </a>\r\n\r\n      <span ngbDropdownMenu>\r\n        <a class=\"dropdown-item\" href=\"javascript:void(0)\">\r\n          <gx-icon name=\"editors\" [fw]=\"true\"></gx-icon>\r\n          Edit\r\n        </a>\r\n        <a class=\"dropdown-item\" href=\"javascript:void(0)\">\r\n          <gx-icon name=\"contacts\" [fw]=\"true\"></gx-icon>\r\n          Contact List</a>\r\n        <a class=\"dropdown-item\" href=\"javascript:void(0)\">\r\n          <gx-icon name=\"heart\" [fw]=\"true\"></gx-icon>\r\n          Favourite List\r\n        </a>\r\n      </span>\r\n    </span>\r\n    <!-- /dropdown -->\r\n  </div>\r\n</div>\r\n\r\n<!-- Media -->\r\n<a href=\"javascript:void(0)\" class=\"media\" *ngFor=\"let notification of notifications\">\r\n\r\n  <!-- Avatar -->\r\n  <gx-avatar [user]=\"notification\" [charLength]=\"0\" class=\"mr-3\"></gx-avatar>\r\n  <!-- avatar -->\r\n\r\n  <!-- Media Body -->\r\n  <span class=\"media-body\">\r\n    <span class=\"message\" [innerHTML]=\"notification.message\"></span>\r\n    <span class=\"meta-date\">\r\n      <gx-icon *ngIf=\"notification.icon.name\"\r\n               [name]=\"notification.icon.name\"\r\n               [ngClass]=\"notification.icon.color\"\r\n               [fw]=\"true\" class=\"mr-1\"></gx-icon>\r\n      {{notification.time}}\r\n    </span>\r\n  </span>\r\n  <!-- /media body -->\r\n\r\n</a>\r\n<!-- /media -->\r\n","import {Component, ElementRef, HostBinding, HostListener, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {MailService} from '../../mail.service';\r\nimport {Contact} from './../../models/contact.model';\r\n\r\n@Component({\r\n  selector: 'contact-hover-card',\r\n  templateUrl: './contact-hover-card.component.html',\r\n  styleUrls: ['./contact-hover-card.component.scss']\r\n})\r\nexport class ContactHoverCardComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'card user-info-card';\r\n  @HostBinding('style.display') display = 'block';\r\n  isVisible = false;\r\n  position: any;\r\n  contact: Contact;\r\n  private el: HTMLElement;\r\n  onContactHovered: Subscription;\r\n\r\n  constructor(el: ElementRef, private mailService: MailService) {\r\n    this.el = el.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onContactHovered = this.mailService.onContactHovered\r\n      .subscribe(data => {\r\n\r\n        this.contact = data.contact;\r\n        this.isVisible = data.show;\r\n        this.position = data.position;\r\n        this.setPosition();\r\n      });\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  onMouseEnter() {\r\n    this.showContactHoveredCard();\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  onMouseLeave() {\r\n    this.hideContactHoveredCard();\r\n  }\r\n\r\n  /**\r\n   * Show contact hover card\r\n   */\r\n  showContactHoveredCard() {\r\n    this.isVisible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide contact hover card\r\n   */\r\n  hideContactHoveredCard() {\r\n    this.isVisible = false;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onContactHovered.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Set hover card position\r\n   */\r\n  setPosition() {\r\n    if (this.position && this.isVisible) {\r\n      const windowHeight = window.innerHeight;\r\n\r\n      if (!this.el.style.top) {\r\n        this.el.style.top = (windowHeight / 2) + 'px';\r\n      }\r\n      this.el.style.left = (this.position.left + this.position.width) + 'px';\r\n\r\n      setTimeout(() => {\r\n        const cardHeight = this.el.offsetHeight;\r\n        const cardTotalHeight = cardHeight + this.position.top + 20;\r\n        if (cardTotalHeight > windowHeight) {\r\n          this.el.style.top = (windowHeight - (cardHeight + 20)) + 'px';\r\n        } else if (cardHeight > 0) {\r\n          this.el.style.top = this.position.top + 'px';\r\n        }\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n}\r\n","<ng-container *ngIf=\"contact && isVisible\">\r\n  <div class=\"p-4\">\r\n    <div class=\"dt-avatar-wrapper mb-3\">\r\n      <gx-avatar [user]=\"contact\" [charLength]=\"0\" class=\"size-50\"></gx-avatar>\r\n\r\n      <div class=\"dt-avatar-info\">\r\n        <span class=\"dt-avatar-name h4 mb-1\">{{contact.first_name + ' ' + contact.last_name}}</span>\r\n        <span class=\"dt-avatar-desc f-12\">{{contact.email}}</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"mb-1\">\r\n      <gx-icon name=\"maps\" [fw]=\"true\" class=\"mr-1\"></gx-icon>\r\n      <span class=\"f-12\">{{contact.location}}</span>\r\n    </div>\r\n\r\n    <div>\r\n      <gx-icon name=\"contacts\" [fw]=\"true\" class=\"mr-1\"></gx-icon>\r\n      <span class=\"f-12\">{{contact.connections}}</span>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"px-4 py-2 border-top d-flex justify-content-between\">\r\n    <a href=\"javascript:void(0)\" class=\"card-link\">Add to Contacts</a>\r\n    <div class=\"ml-2 ml-sm-10\">\r\n      <a class=\"mr-1\" href=\"javascript:void(0)\">\r\n        <gx-icon name=\"mail\" [fw]=\"true\" size=\"xl\"></gx-icon>\r\n      </a>\r\n      <a class=\"mr-1\" href=\"javascript:void(0)\">\r\n        <gx-icon name=\"tag-o\" [fw]=\"true\" size=\"xl\"></gx-icon>\r\n      </a>\r\n      <a href=\"javascript:void(0)\">\r\n        <gx-icon name=\"chat-app\" [fw]=\"true\" size=\"xl\"></gx-icon>\r\n      </a>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {SharedModule} from '@gaxon/modules';\r\nimport {PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarConfigInterface, PerfectScrollbarModule} from 'ngx-perfect-scrollbar';\r\n\r\nimport {MailService} from './mail.service';\r\nimport {MailComponent} from './mail.component';\r\nimport {MailListComponent} from './mail-list/mail-list.component';\r\nimport {MailItemComponent} from './mail-list/mail-item/mail-item.component';\r\nimport {MailSidebarComponent} from './mail-sidebar/mail-sidebar.component';\r\nimport {MailComposeComponent} from './mail-compose/mail-compose.component';\r\nimport {MailDetailsComponent} from './mail-details/mail-details.component';\r\nimport {ContactComponent} from './helper-widgets/contact/contact.component';\r\nimport {BadgesComponent} from './helper-widgets/badges/badges.component';\r\nimport {ContactHoverCardComponent} from './helper-widgets/contact-hover-card/contact-hover-card.component';\r\nimport {SearchBarComponent} from './helper-widgets/search-bar/search-bar.component';\r\nimport {MailHeaderComponent} from './mail-header/mail-header.component';\r\nimport {ModuleHeaderComponent} from './module-header/module-header.component';\r\nimport {DetailsHeaderComponent} from './mail-details/details-header/details-header.component';\r\nimport {MailConversationComponent} from './mail-details/mail-conversation/mail-conversation.component';\r\n\r\nimport { DrawerComponent } from './drawer/drawer.component';\r\nimport { NotificationsComponent } from './drawer/notifications/notifications.component';\r\nimport { SearchComponent } from './drawer/search/search.component';\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true,\r\n  wheelPropagation: true\r\n};\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'filter/:filterHandle',\r\n    component: MailComponent,\r\n    resolve: {\r\n      mails: MailService\r\n    }\r\n  },\r\n  {\r\n    path: 'filter/:filterHandle/:mailId',\r\n    component: MailComponent,\r\n    resolve: {\r\n      mails: MailService\r\n    }\r\n  },\r\n  {\r\n    path: 'label/:labelHandle',\r\n    component: MailComponent,\r\n    resolve: {\r\n      tasks: MailService\r\n    }\r\n  },\r\n  {\r\n    path: 'label/:labelHandle/:mailId',\r\n    component: MailComponent,\r\n    resolve: {\r\n      mails: MailService\r\n    }\r\n  },\r\n  {\r\n    path: ':folderHandle',\r\n    component: MailComponent,\r\n    resolve: {\r\n      mails: MailService\r\n    }\r\n  },\r\n  {\r\n    path: ':folderHandle/:mailId',\r\n    component: MailComponent,\r\n    resolve: {\r\n      mails: MailService\r\n    }\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: 'inbox'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes),\r\n    SharedModule,\r\n    PerfectScrollbarModule\r\n  ],\r\n  declarations: [\r\n    MailComponent,\r\n    MailListComponent,\r\n    MailItemComponent,\r\n    MailSidebarComponent,\r\n    MailComposeComponent,\r\n    MailDetailsComponent,\r\n    ContactComponent,\r\n    BadgesComponent,\r\n    ContactHoverCardComponent,\r\n    SearchBarComponent,\r\n    MailHeaderComponent,\r\n    ModuleHeaderComponent,\r\n    DetailsHeaderComponent,\r\n    MailConversationComponent,\r\n    DrawerComponent,\r\n    NotificationsComponent,\r\n    SearchComponent\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: PERFECT_SCROLLBAR_CONFIG,\r\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\r\n    }\r\n  ]\r\n})\r\nexport class MailModule {\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'task-badges',\r\n  templateUrl: './badges.component.html'\r\n})\r\nexport class BadgesComponent implements OnInit {\r\n  @Input() ids: number[];\r\n  @Input() labels: any[];\r\n  @Input() showAll = true;\r\n\r\n  items: number[];\r\n\r\n  ngOnInit() {\r\n    if(this.showAll) {\r\n      this.items = this.ids;\r\n    } else {\r\n      this.items = this.ids.slice(0, 2);\r\n    }\r\n  }\r\n}\r\n","<div class=\"badge-group\">\r\n<span *ngFor=\"let lid of items\" class=\"badge\"\r\n      [ngClass]=\"labels | getById:lid:'color'\">{{labels | getById:lid:'title'}}</span>\r\n\r\n  <span *ngIf=\"!showAll && ids.length > 2\" #moreBadges class=\"badge badge-light\">...</span>\r\n</div>\r\n","import {Component, HostBinding, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {MailService} from './../mail.service';\r\nimport {Mail} from './../models/mail.model';\r\nimport {PerfectScrollbarDirective} from 'ngx-perfect-scrollbar';\r\n\r\n@Component({\r\n  selector: 'app-mail-details',\r\n  templateUrl: './mail-details.component.html',\r\n  styleUrls: ['./mail-details.component.scss']\r\n})\r\nexport class MailDetailsComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-module__content position-relative ps';\r\n  currentMail: Mail;\r\n  isOpened = true;\r\n\r\n  onCurrentMailChanged: Subscription;\r\n  @ViewChild(PerfectScrollbarDirective) directiveRef?: PerfectScrollbarDirective;\r\n\r\n  constructor(private mailService: MailService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update currentMail on changes\r\n    this.onCurrentMailChanged =\r\n      this.mailService.onCurrentMailChanged\r\n        .subscribe(currentMail => {\r\n          if (!currentMail) {\r\n            this.currentMail = null;\r\n          } else {\r\n            this.currentMail = currentMail;\r\n            this.markAsRead();\r\n          }\r\n\r\n          setTimeout(() => {\r\n            this.scrollToBottom();\r\n          }, 300);\r\n        });\r\n  }\r\n\r\n  /**\r\n   * Mark as read mail\r\n   */\r\n  markAsRead() {\r\n    this.currentMail.read = true;\r\n\r\n    this.mailService.saveMail(this.currentMail);\r\n  }\r\n\r\n  /**\r\n   * On toggle starred\r\n   */\r\n  onToggleStarred(event) {\r\n    this.currentMail.starred = event;\r\n\r\n    this.mailService.saveMail(this.currentMail);\r\n  }\r\n\r\n  scrollToBottom(): void {\r\n    if (this.directiveRef) {\r\n      this.directiveRef.update();\r\n      this.directiveRef.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onCurrentMailChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","<!-- Module Content Inner -->\r\n<div class=\"dt-module__content-inner\">\r\n\r\n  <mail-details-header></mail-details-header>\r\n\r\n  <!-- Module List -->\r\n  <div class=\"dt-module__list mail-detail-list\">\r\n\r\n    <!-- Module Item -->\r\n    <div class=\"dt-module__list-item open\" [ngClass]=\"{'open': isOpened}\">\r\n      <!-- Avatar -->\r\n      <gx-avatar [user]=\"currentMail.from\"\r\n                 class=\"cursor-pointer mr-4\"\r\n                 (click)=\"isOpened = !isOpened\"></gx-avatar>\r\n      <!-- /avatar -->\r\n\r\n      <!-- Module Content -->\r\n      <div class=\"dt-module__list-item-content\">\r\n        <h4 class=\"d-inline-block cursor-pointer mb-1\"\r\n            (click)=\"isOpened = !isOpened\">{{currentMail.from.name}}</h4>\r\n\r\n        <p *ngIf=\"!isOpened\" class=\"mb-0 text-light-gray text-truncate\"\r\n           [innerHTML]=\"currentMail.message | htmlToPlainText\"></p>\r\n\r\n        <p *ngIf=\"isOpened\" class=\"mb-0 text-light-gray\" [innerHTML]=\"currentMail.message | nl2br\"></p>\r\n      </div>\r\n      <!-- /module content -->\r\n\r\n      <!-- Module Info -->\r\n      <div class=\"dt-module__list-item-info\">\r\n        <span class=\"mt-1\">{{currentMail.time}}</span>\r\n\r\n        <!-- Checkbox -->\r\n        <gx-star class=\"ml-sm-3\"\r\n                 [gxModel]=\"currentMail.starred\"\r\n                 (gxInputChange)=\"onToggleStarred($event)\"></gx-star>\r\n        <!-- /checkbox -->\r\n\r\n      </div>\r\n      <!-- /module info -->\r\n    </div>\r\n    <!-- /Module Item -->\r\n\r\n    <mail-conversation *ngFor=\"let conversation of currentMail.conversation;\"\r\n                       [conversation]=\"conversation\"></mail-conversation>\r\n\r\n  </div>\r\n  <!-- /Module List -->\r\n\r\n</div>\r\n","import {Injectable} from '@angular/core';\r\nimport {Location} from '@angular/common';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\r\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\r\n\r\nimport {Contact} from './models/contact.model';\r\nimport {Mail} from './models/mail.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MailService implements Resolve<any> {\r\n  private mailsUrl = 'api/mail-list';  // URL to web api\r\n  private contactsUrl = 'api/mail-contacts';  // URL to web api\r\n  private labelsUrl = 'api/mail-labels';  // URL to web api\r\n  private filtersUrl = 'api/mail-filters';  // URL to web api\r\n  private foldersUrl = 'api/mail-folders';  // URL to web api\r\n\r\n  mails: any[];\r\n  selectedMails: any[] = [];\r\n  currentMail: any;\r\n  currentUser = {\r\n    name: 'Alex Dolgove',\r\n    email: 'alex-dolgove@example.com',\r\n    avatar: ''\r\n  };\r\n\r\n  contacts: Contact[];\r\n  labels: any[];\r\n  filters: any[];\r\n  folders: any[];\r\n  routeParams: any;\r\n\r\n  onMailsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onSelectedMailsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onCurrentMailChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onComposeMailClicked: Subject<any> = new Subject();\r\n  onContactHovered: BehaviorSubject<any> = new BehaviorSubject({});\r\n\r\n  onContactsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onLabelsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onFiltersChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onFoldersChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onSearchQueryChanged: BehaviorSubject<any> = new BehaviorSubject('');\r\n\r\n  constructor(private http: HttpClient, private location: Location) {\r\n  }\r\n\r\n  /**\r\n   * Resolve\r\n   * @param {ActivatedRouteSnapshot} route\r\n   * @param {RouterStateSnapshot} state\r\n   * @returns {Observable<any> | Promise<any> | any}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\r\n    this.routeParams = route.params;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      Promise.all([\r\n        this.getMails(),\r\n        this.getContacts(),\r\n        this.getLabels(),\r\n        this.getFilters(),\r\n        this.getFolders()\r\n      ]).then(\r\n        () => {\r\n          if (this.routeParams.mailId) {\r\n            this.setCurrentMail(this.routeParams.mailId);\r\n          } else {\r\n            this.setCurrentMail(null);\r\n          }\r\n\r\n          resolve();\r\n        },\r\n        reject\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get mails\r\n   * @returns {Promise<any[]>}\r\n   */\r\n  getMails(): Promise<any[]> {\r\n    if (this.routeParams.folderHandle) {\r\n      return this.getMailsByFolder(this.routeParams.folderHandle);\r\n    } else if (this.routeParams.filterHandle) {\r\n      return this.getMailsByFilter(this.routeParams.filterHandle);\r\n    } else if (this.routeParams.labelHandle) {\r\n      return this.getMailsByLabel(this.routeParams.labelHandle);\r\n    } else {\r\n      return this.getMailsList();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get mails list\r\n   * @returns {Promise<any[]>}\r\n   */\r\n  getMailsList(): Promise<any[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.mailsUrl)\r\n        .subscribe((response: any) => {\r\n          this.mails = response;\r\n          this.onMailsChanged.next(this.mails);\r\n          resolve(this.mails);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get mails by folder\r\n   * @param folder\r\n   * @returns {Promise<any[]>}\r\n   */\r\n  getMailsByFolder(folder): Promise<any[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.mailsUrl + '?folder=' + folder)\r\n        .subscribe((response: any) => {\r\n          this.mails = response;\r\n          this.onMailsChanged.next(this.mails);\r\n          resolve(this.mails);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get mails by filter\r\n   * @param filter\r\n   * @returns {Promise<any[]>}\r\n   */\r\n  getMailsByFilter(filter): Promise<any[]> {\r\n    return new Promise((resolve, reject) => {\r\n\r\n      this.http.get(this.mailsUrl + '?' + filter + '=true')\r\n        .subscribe((mails: any) => {\r\n          this.mails = mails;\r\n          this.onMailsChanged.next(this.mails);\r\n          resolve(this.mails);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get mails by label\r\n   * @param handle\r\n   * @returns {Promise<any[]>}\r\n   */\r\n  getMailsByLabel(handle): Promise<any[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.labelsUrl + '?handle=' + handle)\r\n        .subscribe((labels: any) => {\r\n\r\n          const labelId = labels[0].id;\r\n\r\n          this.http.get(this.mailsUrl + '?labels=' + labelId)\r\n            .subscribe((mails: any) => {\r\n              this.mails = mails;\r\n              this.onMailsChanged.next(this.mails);\r\n              resolve(this.mails);\r\n            }, reject);\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get all labels\r\n   * @returns {Promise<any[]>}\r\n   */\r\n  getLabels(): Promise<any[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.labelsUrl)\r\n        .subscribe((response: any) => {\r\n          this.labels = response;\r\n          this.onLabelsChanged.next(this.labels);\r\n          resolve(this.labels);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get all filters\r\n   * @returns {Promise<any[]>}\r\n   */\r\n  getFilters(): Promise<any[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.filtersUrl)\r\n        .subscribe((response: any) => {\r\n          this.filters = response;\r\n          this.onFiltersChanged.next(this.filters);\r\n          resolve(this.filters);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get all folders\r\n   * @returns {Promise<any[]>}\r\n   */\r\n  getFolders(): Promise<any[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.foldersUrl)\r\n        .subscribe((response: any) => {\r\n          this.folders = response;\r\n          this.onFoldersChanged.next(this.folders);\r\n          resolve(this.folders);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get all contacts\r\n   * @returns {Promise<Contact[]>}\r\n   */\r\n  getContacts(): Promise<Contact[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.contactsUrl)\r\n        .subscribe((response: any) => {\r\n          this.contacts = response;\r\n          this.onContactsChanged.next(this.contacts);\r\n          resolve(this.contacts);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggle selected mail by id\r\n   * @param id\r\n   */\r\n  toggleSelectedMail(id) {\r\n    // First, check if we already have that mail as selected...\r\n    if (this.selectedMails.length > 0) {\r\n      for (const mail of this.selectedMails) {\r\n        // ...delete the selected mail\r\n        if (mail.id === id) {\r\n          const index = this.selectedMails.indexOf(mail);\r\n\r\n          if (index !== -1) {\r\n            this.selectedMails.splice(index, 1);\r\n\r\n            // Trigger the next event\r\n            this.onSelectedMailsChanged.next(this.selectedMails);\r\n\r\n            // Return\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // If we don't have it, push as selected\r\n    this.selectedMails.push(\r\n      this.mails.find(mail => {\r\n        return mail.id === id;\r\n      })\r\n    );\r\n\r\n    // Trigger the next event\r\n    this.onSelectedMailsChanged.next(this.selectedMails);\r\n  }\r\n\r\n  /**\r\n   * Toggle select all\r\n   */\r\n  toggleSelectAll() {\r\n    if (this.selectedMails.length > 0) {\r\n      this.deselectMails();\r\n    } else {\r\n      this.selectMails();\r\n    }\r\n\r\n  }\r\n\r\n  selectMails(filterParameter?, filterValue?) {\r\n    this.selectedMails = [];\r\n\r\n    // If there is no filter, select all mails\r\n    if (filterParameter === undefined || filterValue === undefined) {\r\n      this.selectedMails = this.mails.map(x => Object.assign({}, x));\r\n    } else {\r\n      this.selectedMails.push(...\r\n        this.mails.filter(mail => {\r\n          return mail[filterParameter] === filterValue;\r\n        })\r\n      );\r\n    }\r\n\r\n    // Trigger the next event\r\n    this.onSelectedMailsChanged.next(this.selectedMails);\r\n  }\r\n\r\n  deselectMails() {\r\n    this.selectedMails = [];\r\n\r\n    // Trigger the next event\r\n    this.onSelectedMailsChanged.next(this.selectedMails);\r\n  }\r\n\r\n  /**\r\n   * Toggle label on selected mails\r\n   * @param labelId\r\n   */\r\n  toggleLabelOnSelectedMails(labelId) {\r\n    this.selectedMails.map(mail => {\r\n\r\n      const index = mail.labels.indexOf(labelId);\r\n\r\n      if (index !== -1) {\r\n        mail.labels.splice(index, 1);\r\n      } else {\r\n        mail.labels.push(labelId);\r\n      }\r\n\r\n      this.saveMail(mail);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set folder on selected mails\r\n   * @param folderHandle\r\n   */\r\n  setFolderOnSelectedMails(folderHandle) {\r\n    this.selectedMails.map(mail => {\r\n      mail.folder = folderHandle;\r\n\r\n      this.saveMail(mail);\r\n    });\r\n\r\n    this.deselectMails();\r\n  }\r\n\r\n  /**\r\n   * Set current mail by id\r\n   * @param id\r\n   */\r\n  setCurrentMail(id) {\r\n    this.currentMail = this.mails.find(mail => {\r\n      if (id) {\r\n        return mail.id === id;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    this.onCurrentMailChanged.next(this.currentMail);\r\n\r\n    const taskParam = (this.currentMail) ? '/' + this.currentMail.id : '';\r\n    const labelHandle = this.routeParams.labelHandle;\r\n    const folderHandle = this.routeParams.folderHandle;\r\n    const filterHandle = this.routeParams.filterHandle;\r\n\r\n    const segments = this.location.path().split('/');\r\n    if (labelHandle) {\r\n      this.location.go(segments[1] + '/ticket/label/' + labelHandle + taskParam);\r\n    } else if (filterHandle) {\r\n      this.location.go(segments[1] + '/ticket/filter/' + filterHandle + taskParam);\r\n    } else if (filterHandle) {\r\n      this.location.go(segments[1] + '/ticket/' + folderHandle + taskParam);\r\n    } else {\r\n      this.location.go(segments[1] + '/ticket/inbox' + taskParam);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle label on task\r\n   * @param labelId\r\n   * @param mail\r\n   */\r\n  toggleLabel(labelId, mail) {\r\n    const index = mail.labels.indexOf(labelId);\r\n\r\n    if (index !== -1) {\r\n      mail.labels.splice(index, 1);\r\n    } else {\r\n      mail.labels.push(labelId);\r\n    }\r\n\r\n    this.saveMail(mail);\r\n  }\r\n\r\n  /**\r\n   * Check mail has given label\r\n   * @param labelId\r\n   * @param mail\r\n   * @return {boolean}\r\n   */\r\n  hasLabel(labelId, mail) {\r\n    if (!mail.labels) {\r\n      return false;\r\n    }\r\n\r\n    return mail.labels.indexOf(labelId) !== -1;\r\n  }\r\n\r\n  /**\r\n   * Save a mail\r\n   * @param {Mail} mail\r\n   * @return {Promise<any>}\r\n   */\r\n  saveMail(mail: Mail) {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.post(this.mailsUrl + '/' + mail.id, {...mail})\r\n        .subscribe(response => {\r\n          this.getMails().then(mails => {\r\n            resolve(mails);\r\n\r\n          }, reject);\r\n        });\r\n    });\r\n  }\r\n}\r\n","import {Component, HostBinding, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mail-conversation',\r\n  templateUrl: './mail-conversation.component.html'\r\n})\r\nexport class MailConversationComponent implements OnInit {\r\n  @HostBinding('class') classlist = 'dt-module__list-item';\r\n  @HostBinding('class.open') isOpened: boolean;\r\n  @Input() conversation: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<!-- Avatar -->\r\n<gx-avatar [user]=\"conversation.from\"\r\n           (click)=\"isOpened = !isOpened\"\r\n           class=\"mr-4 cursor-pointer\"></gx-avatar>\r\n<!-- /avatar -->\r\n\r\n<!-- Module Content -->\r\n<div class=\"dt-module__list-item-content\">\r\n  <h4 class=\"d-inline-block mb-1 cursor-pointer\" (click)=\"isOpened = !isOpened\">{{conversation.from.name}}</h4>\r\n  <p *ngIf=\"!isOpened\" class=\"mb-0 text-light-gray text-truncate\"\r\n     [innerHTML]=\"conversation.message | htmlToPlainText\"></p>\r\n  <p *ngIf=\"isOpened\" class=\"mb-0 text-light-gray\" [innerHTML]=\"conversation.message | nl2br\"></p>\r\n</div>\r\n<!-- /module content -->\r\n\r\n<!-- Module Info -->\r\n<div class=\"dt-module__list-item-info\">\r\n  <span class=\"mt-1\">{{conversation.time}}</span>\r\n\r\n  <!-- Checkbox -->\r\n  <gx-star class=\"ml-sm-3\"\r\n           [gxModel]=\"conversation.starred\"></gx-star>\r\n  <!-- /checkbox -->\r\n\r\n</div>\r\n<!-- /module info -->\r\n","import {Component, ElementRef, HostBinding, HostListener, Input, OnInit} from '@angular/core';\r\nimport {MailService} from '../../mail.service';\r\nimport {Contact} from './../../models/contact.model';\r\n\r\n@Component({\r\n  selector: 'mail-contact',\r\n  templateUrl: './contact.component.html'\r\n})\r\nexport class ContactComponent implements OnInit {\r\n  @HostBinding('class') classlist = 'dt-contact';\r\n  @Input() contact: Contact;\r\n  contactCardData: any = {show: false};\r\n  private el: HTMLElement;\r\n\r\n  constructor(el: ElementRef, private mailService: MailService) {\r\n    this.el = el.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  onMouseEnter() {\r\n    this.contactCardData.position = this.el.getBoundingClientRect();\r\n    this.contactCardData.show = true;\r\n    this.contactCardData.contact = this.contact;\r\n\r\n    this.mailService.onContactHovered.next(this.contactCardData);\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  onMouseLeave() {\r\n    this.contactCardData.show = false;\r\n    this.mailService.onContactHovered.next(this.contactCardData);\r\n  }\r\n\r\n}\r\n","<gx-avatar [user]=\"contact\" [charLength]=\"0\"></gx-avatar>\r\n<!-- Contact Info -->\r\n<div class=\"dt-contact__info\">\r\n  <h4 class=\"dt-contact__title\">{{contact.first_name + ' ' + contact.last_name}}</h4>\r\n  <p class=\"dt-contact__desc\">{{contact.bio}}</p>\r\n</div>\r\n<!-- /contact info -->\r\n","import {Component, ElementRef, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {Subscription} from 'rxjs';\r\nimport {GxHelper} from '@gaxon/helpers';\r\n\r\nimport {MailService} from './../mail.service';\r\nimport {Mail} from './../models/mail.model';\r\n\r\n@Component({\r\n  selector: 'app-mail-compose',\r\n  templateUrl: './mail-compose.component.html',\r\n  styleUrls: ['./mail-compose.component.scss']\r\n})\r\nexport class MailComposeComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'compose-mail-box';\r\n\r\n  composeMail: any;\r\n  minimized = false;\r\n  composeMailForm: FormGroup;\r\n  onComposeMailClicked: Subscription;\r\n\r\n  constructor(private mailService: MailService, private componentRef: ElementRef, private formBuilder: FormBuilder) {\r\n    this.componentRef.nativeElement.style.display = 'none';\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.composeMailForm = this.createComposeForm();\r\n\r\n    // Subscribe to update composedMail on changes\r\n    this.onComposeMailClicked = this.mailService.onComposeMailClicked\r\n      .subscribe((response: any) => {\r\n        this.componentRef.nativeElement.style.display = 'block';\r\n        this.composeMail = this.resetMail();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Reset new mail\r\n   * @return {Mail}\r\n   */\r\n  resetMail() {\r\n    const newMail = new Mail();\r\n    newMail.id = GxHelper.UUID();\r\n    newMail.from = this.mailService.currentUser;\r\n    newMail.read = true;\r\n    newMail.attachments = [];\r\n    newMail.labels = [];\r\n    newMail.conversation = [];\r\n\r\n    return newMail;\r\n  }\r\n\r\n  /**\r\n   * Create comose reactive form\r\n   */\r\n  createComposeForm() {\r\n    const subject = 'subject';\r\n    const message = 'Hi Mate,\\n' +\r\n      'Sorry for the delay in response!\\n' +\r\n      'I’m afraid, I won’t be able to join you in the conference call. I have to take my\\n' +\r\n      'daughter for her game. I hope that is ok.\\n' +\r\n      '\\n' +\r\n      'Cheers!\\n' +\r\n      'Dom';\r\n\r\n    const toUsers = new FormArray([]);\r\n\r\n    toUsers.push(\r\n      new FormGroup({\r\n        name: new FormControl(null),\r\n        email: new FormControl(null, Validators.required)\r\n      })\r\n    );\r\n\r\n    return this.formBuilder.group({\r\n      subject: new FormControl(subject, Validators.required),\r\n      message: new FormControl(message, Validators.required),\r\n      to: toUsers\r\n    });\r\n  }\r\n\r\n  /**\r\n   * On close form\r\n   * @param event\r\n   */\r\n  onCloseClick(event) {\r\n    event.stopPropagation();\r\n\r\n    const today = new Date();\r\n    this.composeMail.time = today.getDate() + ' ' + today.toLocaleString('en', { month: 'short' });\r\n    this.composeMail.folder = 'drafts';\r\n\r\n    this.composeMail.subject = this.composeMailForm.get('subject').value;\r\n    this.composeMail.message = this.composeMailForm.get('message').value;\r\n    this.composeMail.to = this.composeMailForm.get('to').value;\r\n\r\n    this.saveMail(this.composeMail).then((response) => {\r\n      this.composeMailForm = this.createComposeForm();\r\n      this.composeMail = this.resetMail();\r\n\r\n      this.componentRef.nativeElement.style.display = 'none';\r\n    });\r\n  }\r\n\r\n  /**\r\n   * On submit form\r\n   */\r\n  onSubmitForm() {\r\n    const today = new Date();\r\n    this.composeMail.time = today.getDate() + ' ' + today.toLocaleString('en', { month: 'short' });\r\n    this.composeMail.folder = 'sent';\r\n\r\n    this.composeMail.subject = this.composeMailForm.get('subject').value;\r\n    this.composeMail.message = this.composeMailForm.get('message').value;\r\n    this.composeMail.to = this.composeMailForm.get('to').value;\r\n\r\n    this.saveMail(this.composeMail).then((response) => {\r\n      this.composeMailForm = this.createComposeForm();\r\n      this.composeMail = this.resetMail();\r\n\r\n      this.componentRef.nativeElement.style.display = 'none';\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Save mail in data\r\n   * @param mail\r\n   * @return {Promise<any>}\r\n   */\r\n  saveMail(mail) {\r\n    return this.mailService.saveMail(mail);\r\n  }\r\n\r\n  /**\r\n   * On Discard Mail\r\n   */\r\n  onDiscardMail() {\r\n    this.composeMailForm = this.createComposeForm();\r\n    this.composeMail = this.resetMail();\r\n\r\n    this.componentRef.nativeElement.style.display = 'none';\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onComposeMailClicked.unsubscribe();\r\n  }\r\n}\r\n","<div perfectScrollbar>\r\n  <!-- Compose Mail Header -->\r\n  <div class=\"compose-mail-box__header cursor-pointer\" (click)=\"minimized = !minimized\">\r\n    <div class=\"title\">\r\n      <gx-icon name=\"editors\" class=\"mr-2\" [fw]=\"true\" size=\"xl\"></gx-icon>\r\n      Compose New Message\r\n    </div>\r\n\r\n    <div class=\"action-area ml-auto\">\r\n      <a *ngIf=\"minimized\" class=\"text-white mr-3\" href=\"javascript:void(0)\">\r\n        <gx-icon name=\"chevrolet-up\" size=\"xl\"></gx-icon>\r\n      </a>\r\n\r\n      <a *ngIf=\"!minimized\" class=\"text-white mr-3\" href=\"javascript:void(0)\">\r\n        <gx-icon name=\"chevrolet-down\" size=\"xl\"></gx-icon>\r\n      </a>\r\n      <a class=\"text-white\" href=\"javascript:void(0)\" (click)=\"onCloseClick($event)\">\r\n        <gx-icon name=\"remove\" size=\"sm\"></gx-icon>\r\n      </a>\r\n    </div>\r\n  </div>\r\n  <!-- /compose mail header -->\r\n\r\n  <!-- Compose Mail Body -->\r\n  <div class=\"compose-mail-box__body\" [hidden]=\"minimized\">\r\n    <!-- Form -->\r\n    <form [formGroup]=\"composeMailForm\" (submit)=\"onSubmitForm()\">\r\n\r\n      <!-- Form Group -->\r\n      <div class=\"form-group mb-1\" formArrayName=\"to\">\r\n        <div [formGroupName]=\"0\">\r\n          <label class=\"sr-only\" for=\"email\">Email address</label>\r\n          <input type=\"email\"\r\n                 class=\"form-control\"\r\n                 id=\"email\"\r\n                 placeholder=\"Enter email\"\r\n                 name=\"email\"\r\n                 formControlName=\"email\">\r\n        </div>\r\n      </div>\r\n      <!-- /form group -->\r\n\r\n      <!-- Form Group -->\r\n      <div class=\"form-group\">\r\n        <label class=\"sr-only\" for=\"subject\">Subject</label>\r\n        <input type=\"text\"\r\n               class=\"form-control\"\r\n               placeholder=\"Subject\"\r\n               id=\"subject\"\r\n               name=\"subject\"\r\n               formControlName=\"subject\">\r\n      </div>\r\n      <!-- /form group -->\r\n\r\n      <!-- Form Group -->\r\n      <div class=\"form-group\">\r\n        <label class=\"sr-only\" for=\"textarea\">Example textarea</label>\r\n        <textarea class=\"form-control\"\r\n                  placeholder=\"Your message here...\"\r\n                  id=\"textarea\"\r\n                  name=\"message\"\r\n                  formControlName=\"message\"></textarea>\r\n      </div>\r\n      <!-- /form group -->\r\n\r\n      <!-- Form Group -->\r\n      <div class=\"d-flex align-items-center\">\r\n        <button type=\"submit\" class=\"btn btn-primary btn-sm\">Submit</button>\r\n\r\n        <div class=\"action-area ml-auto\">\r\n          <a class=\"text-dark\" href=\"javascript:void(0)\" (click)=\"onDiscardMail()\">\r\n            <gx-icon name=\"trash\" class=\"mr-1\"></gx-icon>\r\n            <span class=\"f-12 text-uppercase\">discard</span>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <!-- /form group -->\r\n    </form>\r\n    <!-- /form -->\r\n  </div>\r\n  <!-- /compose mail body -->\r\n</div>\r\n","import {Component, HostBinding, HostListener, OnDestroy, OnInit} from '@angular/core';\r\nimport {NavigationEnd, Router} from '@angular/router';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {SettingsService} from '@app/settings/settings.service';\r\nimport {appAnimations} from '@gaxon/mix/animations';\r\nimport {DrawerService} from './../../drawer.service';\r\nimport {MailService} from './../mail.service';\r\nimport {Contact} from './../models/contact.model';\r\n\r\n@Component({\r\n  selector: 'mail-sidebar',\r\n  templateUrl: './mail-sidebar.component.html',\r\n  animations: appAnimations\r\n})\r\nexport class MailSidebarComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classNames = 'dt-module__sidebar';\r\n  @HostBinding('class.active') isOpen = false;\r\n\r\n  contacts: Contact[] = [];\r\n  labels: any[] = [];\r\n  folders: any[] = [];\r\n  filters: any[] = [];\r\n\r\n  activeMenu: string;\r\n  drawer: any;\r\n  settings: any;\r\n  hiddenPageHeader: boolean;\r\n  headerLessLayout = ['modern', 'back-office', 'back-office-mini'];\r\n\r\n  onContactsChanged: Subscription;\r\n  onLabelsChanged: Subscription;\r\n  onFiltersChanged: Subscription;\r\n  onFoldersChanged: Subscription;\r\n  onDrawerChanged: Subscription;\r\n  onSettingChanged: Subscription;\r\n\r\n  constructor(private mailService: MailService,\r\n              private drawerService: DrawerService,\r\n              private settingService: SettingsService,\r\n              private router: Router) {\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer) => {\r\n      this.drawer = drawer;\r\n      this.activeMenu = this.drawer.activeMenu;\r\n\r\n      if (!this.drawer.isOpen) {\r\n        this.activeMenu = '';\r\n      }\r\n    });\r\n\r\n    this.onSettingChanged = this.settingService.onSettingChanged.subscribe(\r\n      (newSettings) => {\r\n        this.settings = newSettings;\r\n        this.hiddenPageHeader = this.headerLessLayout.includes(this.settings.layout);\r\n      }\r\n    );\r\n\r\n    router.events.subscribe((event) => {\r\n      if (event instanceof NavigationEnd) {\r\n        this.isOpen = window.innerWidth > 767;\r\n      }\r\n    });\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event) {\r\n    this.isOpen = event.target.innerWidth > 767;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update lebels on changes\r\n    this.onLabelsChanged = this.mailService.onLabelsChanged\r\n      .subscribe(labels => {\r\n        this.labels = labels;\r\n      });\r\n\r\n    // Subscribe to update filters on changes\r\n    this.onFiltersChanged = this.mailService.onFiltersChanged\r\n      .subscribe(filters => {\r\n        this.filters = filters;\r\n      });\r\n\r\n    // Subscribe to update folders on changes\r\n    this.onFoldersChanged = this.mailService.onFoldersChanged\r\n      .subscribe(folders => {\r\n        console.log(this.folders);\r\n        this.folders = folders;\r\n\r\n      });\r\n\r\n    // Subscribe to update contacts on changes\r\n    this.onContactsChanged = this.mailService.onContactsChanged\r\n      .subscribe(contacts => {\r\n        this.contacts = contacts;\r\n      });\r\n\r\n    // display app sidebar\r\n    this.isOpen = window.innerWidth > 767;\r\n  }\r\n\r\n  /**\r\n   * On Click Menu\r\n   */\r\n  onClickMenu(event, activeMenu) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.activeMenu = this.activeMenu = activeMenu;\r\n    this.drawer.isOpen = true;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  /**\r\n   * Toggle collapse\r\n   *\r\n   * @param ev\r\n   */\r\n  toggleOpen(ev) {\r\n    ev.preventDefault();\r\n\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  onComposeMail() {\r\n    this.mailService.onComposeMailClicked.next('');\r\n  }\r\n\r\n  /**\r\n   * Toggle main navigation\r\n   * @param event\r\n   */\r\n  toggleNavigation(event) {\r\n    event.preventDefault();\r\n\r\n    this.settings.activeNavDrawer = !this.settings.activeNavDrawer;\r\n    this.settingService.setSettings(this.settings);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onContactsChanged.unsubscribe();\r\n    this.onLabelsChanged.unsubscribe();\r\n    this.onFiltersChanged.unsubscribe();\r\n    this.onFoldersChanged.unsubscribe();\r\n    this.onDrawerChanged.unsubscribe();\r\n    this.onSettingChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","<!-- Sidebar Header -->\r\n<div class=\"dt-module__sidebar-header border-bottom\">\r\n  <div class=\"d-none d-md-flex align-items-center\">\r\n    <gx-icon name=\"open-mail\" size=\"1x\" class=\"mr-3 text-dark\"></gx-icon>\r\n    <span class=\"h3 mb-0\">Messages</span>\r\n  </div>\r\n\r\n  <!-- App Quick Menu -->\r\n  <div class=\"quick-menu-list d-md-none\">\r\n    <a *ngIf=\"hiddenPageHeader\"\r\n       href=\"javascript:void(0)\"\r\n       class=\"quick-menu mr-auto d-md-none\"\r\n       [ngClass]=\"{'active':settings.activeNavDrawer}\"\r\n       (click)=\"toggleNavigation($event)\">\r\n      <gx-icon name=\"menu\"></gx-icon>\r\n    </a>\r\n\r\n    <!-- Search Box -->\r\n    <form class=\"search-box d-md-none\" *ngIf=\"!hiddenPageHeader\">\r\n      <input class=\"form-control\" type=\"search\" id=\"address\" name=\"address\"\r\n             placeholder=\"Search in app...\">\r\n      <button type=\"submit\" class=\"search-icon\">\r\n        <gx-icon name=\"search\" size=\"lg\"></gx-icon>\r\n      </button>\r\n    </form>\r\n    <!-- /search box -->\r\n\r\n    <a href=\"javascript:void(0)\"\r\n       class=\"quick-menu\"\r\n       [ngClass]=\"{'active':activeMenu == 'search', 'd-none d-md-block': !hiddenPageHeader}\"\r\n       (click)=\"onClickMenu($event, 'search')\">\r\n      <gx-icon name=\"search\"></gx-icon>\r\n    </a>\r\n\r\n    <a href=\"javascript:void(0)\" class=\"quick-menu\" (click)=\"onComposeMail()\">\r\n      <gx-icon name=\"editors\"></gx-icon>\r\n    </a>\r\n\r\n    <a href=\"javascript:void(0)\"\r\n       class=\"quick-menu\"\r\n       [ngClass]=\"{'active':activeMenu == 'notifications'}\"\r\n       (click)=\"onClickMenu($event, 'notifications')\">\r\n      <gx-icon name=\"notification2\"></gx-icon>\r\n    </a>\r\n\r\n    <a href=\"javascript:void(0)\"\r\n       class=\"quick-menu d-md-none\"\r\n       [ngClass]=\"{'active':isOpen}\"\r\n       (click)=\"toggleOpen($event)\">\r\n      <gx-icon name=\"{{hiddenPageHeader? 'vertical-more': 'menu'}}\"></gx-icon>\r\n    </a>\r\n  </div>\r\n  <!-- /app quick menu -->\r\n</div>\r\n<!-- /sidebar header -->\r\n\r\n<!-- Sidebar Menu -->\r\n<div class=\"dt-module__sidebar-content position-relative\" [@collapseAppSidebar]=\"isOpen\" perfectScrollbar>\r\n  <!-- Sidebar Content Inner -->\r\n  <div class=\"dt-module__sidebar-content-inner\">\r\n    <!-- Button -->\r\n    <div class=\"action-area mt-5 mb-7 d-none d-md-block\">\r\n      <a href=\"javascript:void(0)\" class=\"btn btn-shadow btn-default compose-btn btn-rounded\" [routerLink]=\"['/ticket/ticket-generate']\">\r\n        Create New Ticket\r\n      </a>\r\n    </div>\r\n    <!-- /button -->\r\n\r\n    <!-- Sidebar Navigation -->\r\n    <ul class=\"dt-module-side-nav\">\r\n\r\n      <!-- Menu Header -->\r\n      <!-- <li class=\"dt-module-side-nav__header\"  routerLinkActive=\"active\">\r\n          <a class=\"dt-module-side-nav__text\" >New</a>\r\n      </li>\r\n      <li class=\"dt-module-side-nav__header\"  routerLinkActive=\"active\">\r\n        <a class=\"dt-module-side-nav__text\">InProgress</a>\r\n      </li>\r\n      <li class=\"dt-module-side-nav__header\"  routerLinkActive=\"active\">\r\n        <a class=\"dt-module-side-nav__text\">Resolved</a>\r\n      </li>\r\n      <li class=\"dt-module-side-nav__header\"  routerLinkActive=\"active\">\r\n        <a class=\"dt-module-side-nav__text\">Reopened</a>\r\n      </li> -->\r\n      <!-- /menu header -->\r\n\r\n      <!-- Menu Item -->\r\n      <li *ngFor=\"let folder of folders\"\r\n          class=\"dt-module-side-nav__item\"\r\n          routerLinkActive=\"active\">\r\n\r\n        <a class=\"dt-module-side-nav__link\"\r\n           [routerLink]=\"'/' + settings.layout + '/ticket/'+folder.handle\">\r\n          <gx-icon [name]=\"folder.icon\" size=\"lg\" [fw]=\"true\"></gx-icon>\r\n          <span class=\"dt-module-side-nav__text\">{{folder.title}}</span>\r\n        </a>\r\n      </li>\r\n\r\n      <!-- Menu Header -->\r\n      <li class=\"dt-module-side-nav__header\">\r\n        <span class=\"dt-module-side-nav__text\">FILTERS</span>\r\n      </li>\r\n      <!-- /menu header -->\r\n\r\n      <!-- Menu Item -->\r\n      <li *ngFor=\"let filter of filters\"\r\n          class=\"dt-module-side-nav__item\"\r\n          routerLinkActive=\"active\">\r\n        <a class=\"dt-module-side-nav__link\"\r\n           [routerLink]=\"'/' + settings.layout + '/ticket/filter/'+filter.handle\">\r\n          <gx-icon [name]=\"filter.icon\" size=\"lg\" [fw]=\"true\"></gx-icon>\r\n          <span class=\"dt-module-side-nav__text\">{{filter.title}}</span>\r\n        </a>\r\n      </li>\r\n      <!-- /menu item -->\r\n\r\n\r\n      <!-- Menu Header -->\r\n      <li class=\"dt-module-side-nav__header\">\r\n        <span class=\"dt-module-side-nav__text\">Labels</span>\r\n      </li>\r\n      <!-- /menu header -->\r\n\r\n      <!-- Menu Item -->\r\n      <li *ngFor=\"let label of labels\"\r\n          class=\"dt-module-side-nav__item\"\r\n          routerLinkActive=\"active\">\r\n        <a class=\"dt-module-side-nav__link\"\r\n           [routerLink]=\"'/' + settings.layout + '/ticket/label/'+label.handle\">\r\n          <gx-icon name=\"tag\" size=\"lg\" [fw]=\"true\" [ngClass]=\"label.icon\"></gx-icon>\r\n          <span class=\"dt-module-side-nav__text\">{{label.title}}</span>\r\n        </a>\r\n      </li>\r\n      <!-- /menu item -->\r\n\r\n    </ul>\r\n    <!-- /sidebar navigation -->\r\n\r\n    <!-- Contacts -->\r\n    <div class=\"dt-contacts contacts-list\">\r\n      <h6 class=\"dt-contact__heading text-uppercase\">CONNECTIONS</h6>\r\n\r\n      <!-- Contact -->\r\n      <mail-contact *ngFor=\"let contact of contacts\"\r\n                    [contact]=\"contact\"></mail-contact>\r\n      <!-- /contact -->\r\n\r\n    </div>\r\n    <!-- contacts -->\r\n  </div>\r\n  <!-- /sidebar content inner -->\r\n</div>\r\n<!-- /sidebar Menu -->\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {DynamicDomService} from '@gaxon/services/dynamic-dom.service';\r\nimport {DrawerService} from './../drawer.service';\r\n\r\nimport {MailService} from './mail.service';\r\nimport {ContactHoverCardComponent} from './helper-widgets/contact-hover-card/contact-hover-card.component';\r\nimport {MailComposeComponent} from './mail-compose/mail-compose.component';\r\nimport {Mail} from './models/mail.model';\r\n\r\n@Component({\r\n  selector: 'app-mail',\r\n  templateUrl: './mail.component.html',\r\n  styleUrls: ['./mail.component.scss']\r\n})\r\nexport class MailComponent implements OnInit, OnDestroy {\r\n  currentMail: Mail;\r\n  onCurrentMailChanged: Subscription;\r\n\r\n  composeMail: any;\r\n  hoverCard: any;\r\n\r\n  drawer: any;\r\n  onDrawerChanged: Subscription;\r\n\r\n  constructor(private dynamicDom: DynamicDomService, private mailService: MailService, private drawerService: DrawerService) {\r\n    this.hoverCard = this.dynamicDom.appendComponentToBody(ContactHoverCardComponent);\r\n    this.composeMail = this.dynamicDom.appendComponentToBody(MailComposeComponent);\r\n\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer) => {\r\n      this.drawer = drawer;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onCurrentMailChanged =\r\n      this.mailService.onCurrentMailChanged\r\n        .subscribe(currentMail => {\r\n          if (!currentMail) {\r\n            this.currentMail = null;\r\n          }\r\n          else {\r\n            this.currentMail = currentMail;\r\n          }\r\n        });\r\n  }\r\n\r\n  /**\r\n   * Close Drawer\r\n   * @param event\r\n   */\r\n  closeDrawer(event) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.isOpen = false;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dynamicDom.destroyCard(this.hoverCard);\r\n    this.dynamicDom.destroyCard(this.composeMail);\r\n\r\n    this.onCurrentMailChanged.unsubscribe();\r\n    this.onDrawerChanged.unsubscribe();\r\n  }\r\n}\r\n","<!-- Grid -->\r\n<div class=\"row\">\r\n\r\n  <!-- Grid Item -->\r\n  <div class=\"col-xl-12\">\r\n\r\n    <!-- Module -->\r\n    <div class=\"dt-module\">\r\n\r\n      <!-- Module Sidebar -->\r\n      <mail-sidebar></mail-sidebar>\r\n      <!-- /Module Sidebar -->\r\n\r\n      <!-- Module Container -->\r\n      <div class=\"dt-module__container\">\r\n\r\n        <!-- Module Header -->\r\n        <mail-module-header></mail-module-header>\r\n        <!-- /Module Header -->\r\n\r\n        <!-- Module Content -->\r\n        <app-mail-list [hidden]=\"currentMail\" perfectScrollbar></app-mail-list>\r\n        <!-- Module Content -->\r\n\r\n        <app-mail-details *ngIf=\"currentMail\" perfectScrollbar></app-mail-details>\r\n\r\n      </div>\r\n      <!-- /Module Container -->\r\n\r\n      <!-- Module Drawer -->\r\n      <mail-drawer [ngClass]=\"{'open':drawer.isOpen}\"></mail-drawer>\r\n      <div class=\"dt-backdrop\" *ngIf=\"drawer.isOpen\" (click)=\"closeDrawer($event)\"></div>\r\n      <!-- Module Drawer -->\r\n\r\n    </div>\r\n    <!-- /Module -->\r\n\r\n  </div>\r\n  <!-- /Grid Item -->\r\n\r\n</div>\r\n<!-- /Grid -->\r\n\r\n","import {Component, ElementRef, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {MailService} from './../../mail.service';\r\nimport {Mail} from './../../models/mail.model';\r\n\r\n@Component({\r\n  selector: 'mail-details-header',\r\n  templateUrl: './details-header.component.html',\r\n  styleUrls: ['./details-header.component.scss']\r\n})\r\nexport class DetailsHeaderComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'd-block px-1 pb-4 border-bottom border-w-2';\r\n  currentMail: Mail;\r\n  labels: any[] = [];\r\n  folders: any[] = [];\r\n\r\n  onCurrentMailChanged: Subscription;\r\n  onLabelsChanged: Subscription;\r\n  onFoldersChanged: Subscription;\r\n\r\n  constructor(private eleRef: ElementRef, private mailService: MailService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update currentMail on changes\r\n    this.onCurrentMailChanged =\r\n      this.mailService.onCurrentMailChanged\r\n        .subscribe(currentMail => {\r\n          if (!currentMail) {\r\n            this.currentMail = null;\r\n            this.eleRef.nativeElement.classList.add('mb-1');\r\n            this.eleRef.nativeElement.classList.add('mt-n1');\r\n          } else {\r\n            this.currentMail = currentMail;\r\n          }\r\n        });\r\n\r\n    // Subscribe to update labels on changes\r\n    this.onLabelsChanged =\r\n      this.mailService.onLabelsChanged\r\n        .subscribe((labels: any) => {\r\n          this.labels = labels;\r\n        });\r\n\r\n    // Subscribe to update folders on changes\r\n    this.onFoldersChanged =\r\n      this.mailService.onFoldersChanged\r\n        .subscribe((folders: any) => {\r\n          this.folders = folders;\r\n        });\r\n  }\r\n\r\n  /**\r\n   * Go to back mail listing\r\n   */\r\n  goToBack() {\r\n    this.mailService.setCurrentMail(null);\r\n  }\r\n\r\n  /**\r\n   * On toggle starred\r\n   */\r\n  onToggleStarred(event) {\r\n    this.currentMail.starred = event;\r\n\r\n    this.mailService.saveMail(this.currentMail);\r\n  }\r\n\r\n  /**\r\n   * Mark mail as unread\r\n   */\r\n  markAsUnread() {\r\n    this.currentMail.read = false;\r\n    this.mailService.saveMail(this.currentMail).then((response) => {\r\n      this.goToBack();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change folder to selected emails\r\n   * @param folderHandle\r\n   */\r\n  setFolder(folderHandle) {\r\n    this.currentMail.folder = folderHandle;\r\n    this.mailService.saveMail(this.currentMail).then((response) => {\r\n      if(folderHandle == 'trash') {\r\n        this.goToBack();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Check Mail has label\r\n   * @param labelId\r\n   * @return {any | boolean}\r\n   */\r\n  hasLabel(labelId) {\r\n    return this.mailService.hasLabel(labelId, this.currentMail);\r\n  }\r\n\r\n  /**\r\n   * Change lables to selectd emails\r\n   * @param labelId\r\n   */\r\n  toggleLabel(labelId){\r\n    this.mailService.toggleLabel(labelId, this.currentMail);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onCurrentMailChanged.unsubscribe();\r\n    this.onLabelsChanged.unsubscribe();\r\n    this.onFoldersChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n\r\n","<!-- Action Bar -->\r\n<div class=\"d-flex flex-wrap mb-5\">\r\n  <!-- Back Button -->\r\n  <a href=\"javascript:void(0)\"\r\n     class=\"btn btn-outline-dark btn-sm mr-auto mb-1\"\r\n     (click)=\"goToBack()\">\r\n    <gx-icon name=\"arrow-left\" [fw]=\"true\" size=\"lg\"></gx-icon>\r\n  </a>\r\n  <!-- /back button -->\r\n\r\n  <!-- Button Group -->\r\n  <div class=\"btn-group btn-group-sm mr-3 mr-lg-7 mb-1\" role=\"group\">\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"setFolder('archive')\">\r\n      <gx-icon name=\"archive\" [fw]=\"true\" size=\"lg\"></gx-icon>\r\n    </button>\r\n\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"setFolder('spam')\">\r\n      <gx-icon name=\"spam\" [fw]=\"true\" size=\"lg\"></gx-icon>\r\n    </button>\r\n\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"setFolder('trash')\">\r\n      <gx-icon name=\"trash-filled\" [fw]=\"true\" size=\"lg\"></gx-icon>\r\n    </button>\r\n\r\n  </div>\r\n  <!-- /button group -->\r\n\r\n  <!-- Button Group -->\r\n  <div class=\"btn-group btn-group-sm mr-4 mr-lg-7 mb-1\" role=\"group\">\r\n\r\n    <div class=\"btn-group btn-group-sm\" role=\"group\" ngbDropdown>\r\n      <button type=\"button\" class=\"btn btn-outline-dark no-arrow\" ngbDropdownToggle>\r\n        <gx-icon name=\"folder\" [fw]=\"true\" size=\"lg\"></gx-icon>\r\n      </button>\r\n\r\n      <div ngbDropdownMenu>\r\n        <a  *ngFor=\"let folder of folders\"\r\n            href=\"javascript:void(0)\"\r\n            class=\"dropdown-item\"\r\n            [ngClass]=\"{'active':folder.handle == currentMail.folder}\"\r\n            (click)=\"setFolder(folder.handle)\">{{folder.title}}</a>\r\n      </div>\r\n    </div>\r\n    <div class=\"btn-group btn-group-sm\" role=\"group\" ngbDropdown placement=\"bottom-right\">\r\n      <button type=\"button\" class=\"btn btn-outline-dark no-arrow\" ngbDropdownToggle>\r\n        <gx-icon name=\"tag\" [fw]=\"true\" size=\"lg\"></gx-icon>\r\n      </button>\r\n\r\n      <div ngbDropdownMenu>\r\n        <a *ngFor=\"let label of labels\"\r\n           href=\"javascript:void(0)\"\r\n           class=\"dropdown-item\"\r\n           [ngClass]=\"{'active':hasLabel(label.id)}\"\r\n           (click)=\"toggleLabel(label.id)\">{{label.title}}</a>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n  <!-- /button group -->\r\n\r\n  <!-- Dropdown -->\r\n  <div ngbDropdown placement=\"bottom-right\">\r\n\r\n    <!-- Dropdown Button -->\r\n    <a href=\"javascript:void(0)\" class=\"btn btn-outline-dark btn-sm\" ngbDropdownToggle>\r\n      More\r\n    </a>\r\n    <!-- /dropdown button -->\r\n\r\n    <!-- Dropdown Menu -->\r\n    <div ngbDropdownMenu>\r\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\" (click)=\"markAsUnread()\">Unread</a>\r\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\" (click)=\"onToggleStarred(true)\">Starred</a>\r\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\" (click)=\"onToggleStarred(false)\">Unstarred</a>\r\n    </div>\r\n    <!-- /dropdown menu -->\r\n\r\n  </div>\r\n  <!-- /dropdown -->\r\n</div>\r\n<!-- /action bar -->\r\n\r\n<div class=\"d-flex flex-wrap\">\r\n  <h3 class=\"mb-0 text-truncate flex-1\">{{currentMail.subject}}</h3>\r\n\r\n  <!-- Badges -->\r\n  <task-badges class=\"ml-auto dt-module__list-item-info\"\r\n               [ids]=\"currentMail.labels\"\r\n               [labels]=\"labels\"></task-badges>\r\n  <!-- /badges -->\r\n</div>\r\n","import {Component, HostBinding, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {MailService} from './../../mail.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {Mail} from './../../models/mail.model';\r\n\r\n@Component({\r\n  selector: 'mail-item',\r\n  templateUrl: './mail-item.component.html',\r\n  styleUrls: ['./mail-item.component.scss']\r\n})\r\nexport class MailItemComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-module__list-item cursor-pointer';\r\n  @HostBinding('class.selected') selected: boolean;\r\n  @Input() mail: Mail;\r\n\r\n  labels: any[] = [];\r\n  onLabelsChanged: Subscription;\r\n  onSelectedMailsChanged: Subscription;\r\n\r\n  constructor(private mailService: MailService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update labels on changes\r\n    this.onLabelsChanged =\r\n      this.mailService.onLabelsChanged\r\n        .subscribe((labels: any) => {\r\n          this.labels = labels;\r\n        });\r\n\r\n    // Subscribe to update SelectedMails on changes\r\n    this.onSelectedMailsChanged =\r\n      this.mailService.onSelectedMailsChanged\r\n        .subscribe(selectedMails => {\r\n          this.selected = selectedMails.find((mail: Mail) => {\r\n            return mail.id === this.mail.id;\r\n          });\r\n        });\r\n  }\r\n\r\n  onSelectedChange(event) {\r\n    this.selected = event;\r\n    this.mailService.toggleSelectedMail(this.mail.id);\r\n  }\r\n\r\n  /**\r\n   * On toggle starred\r\n   */\r\n  onToggleStarred(event) {\r\n    this.mail.starred = event;\r\n\r\n    this.mailService.saveMail(this.mail);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onLabelsChanged.unsubscribe();\r\n    this.onSelectedMailsChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","<!-- Checkbox -->\r\n<gx-checkbox class=\"mr-5\" [gxModel]=\"selected\" (gxInputChange)=\"onSelectedChange($event)\"></gx-checkbox>\r\n<!-- /checkbox -->\r\n\r\n<gx-star class=\"mr-5\" [gxModel]=\"mail.starred\" (gxInputChange)=\"onToggleStarred($event)\"></gx-star>\r\n\r\n<!-- Avatar -->\r\n<gx-avatar [user]=\"mail.from\" class=\"mr-4\"></gx-avatar>\r\n<!-- /avatar -->\r\n\r\n<!-- Module Content -->\r\n<div class=\"dt-module__list-item-content\"\r\n     data-location=\"mail-detail.html\">\r\n  <div class=\"user-detail\">\r\n    <span class=\"user-name\">{{mail.from.name}}</span>\r\n    <span class=\"dt-separator-v\">&nbsp;</span>\r\n    <span class=\"designation\">{{mail.subject | htmlToPlainText | slice:0:30}}</span>\r\n  </div>\r\n  <p class=\"mb-0 text-light-gray text-truncate\">{{mail.message | htmlToPlainText | slice:0:100}}</p>\r\n</div>\r\n<!-- /module content -->\r\n\r\n<!-- Module Info -->\r\n<div class=\"dt-module__list-item-info\">\r\n  <!-- Badges -->\r\n  <task-badges class=\"badge-group\"\r\n               [ids]=\"mail.labels\"\r\n               [labels]=\"labels\"\r\n               [showAll]=\"false\"></task-badges>\r\n  <!-- /badges -->\r\n\r\n  <span>{{mail.time}}</span>\r\n</div>\r\n<!-- /module info -->\r\n","import {Component, HostBinding, OnInit} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {MailService} from './../../mail.service';\r\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'mail-search-bar',\r\n  templateUrl: './search-bar.component.html',\r\n  styleUrls: ['./search-bar.component.scss']\r\n})\r\nexport class SearchBarComponent implements OnInit {\r\n  @HostBinding('class') classlist = 'search-box ml-n4';\r\n  searchQuery: FormControl;\r\n\r\n  constructor(private mailService: MailService) {\r\n    this.searchQuery = new FormControl('');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.searchQuery.valueChanges.pipe(\r\n      debounceTime(300),\r\n      distinctUntilChanged()\r\n    ).subscribe(searchText => {\r\n      this.mailService.onSearchQueryChanged.next(searchText);\r\n    });\r\n  }\r\n\r\n}\r\n","<form>\r\n  <input type=\"search\"\r\n         class=\"form-control border-0 shadow-none bg-focus form-control-sm\"\r\n         [formControl]=\"searchQuery\"\r\n         placeholder=\"Search in mails...\">\r\n  <span class=\"search-icon\"><gx-icon name=\"search\" size=\"lg\"></gx-icon></span>\r\n</form>\r\n","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {DrawerService} from './../../drawer.service';\r\n\r\n@Component({\r\n  selector: 'mail-drawer',\r\n  templateUrl: './drawer.component.html',\r\n  styleUrls: ['./drawer.component.scss']\r\n})\r\nexport class DrawerComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') draverClasses = 'dt-module__drawer dt-drawer position-left';\r\n  @HostBinding('class.open') isOpen = false;\r\n  activeMenu: string;\r\n  showLoader = false;\r\n  drawer: any;\r\n  onDrawerChanged: Subscription;\r\n\r\n  constructor(private drawerService: DrawerService) {\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer: any) => {\r\n      if (!this.activeMenu) {\r\n        this.processLoader();\r\n      }\r\n\r\n      this.drawer = drawer;\r\n      this.isOpen = this.isOpen;\r\n      this.activeMenu = this.drawer.activeMenu;\r\n\r\n      if (!this.drawer.isOpen) {\r\n        this.activeMenu = '';\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  processLoader() {\r\n    this.showLoader = true;\r\n\r\n    setTimeout(() => {\r\n      this.showLoader = false;\r\n    }, 1000);\r\n  }\r\n\r\n  /**\r\n   * Close Drawer\r\n   * @param event\r\n   */\r\n  closeDrawer(event) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.isOpen = false;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  onSelectMenu(event, activeMenu) {\r\n    event.preventDefault();\r\n    this.processLoader();\r\n\r\n    this.drawer.activeMenu = this.activeMenu = activeMenu;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onDrawerChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","<!-- Module Drawer Inner -->\r\n<div class=\"dt-module__drawer-inner\">\r\n\r\n  <div class=\"dt-module__drawer-header\">\r\n    <a href=\"javascript:void(0)\" class=\"d-inline-block\" (click)=\"closeDrawer($event)\">\r\n      <gx-icon name=\"arrow-long-left\" size=\"2x\" class=\"mr-3\"></gx-icon>\r\n      <span class=\"align-middle\">Back</span>\r\n    </a>\r\n  </div>\r\n\r\n  <!-- Actionable Drawer -->\r\n  <div class=\"dt-actionable-drawer\">\r\n\r\n    <!-- Menu Bar -->\r\n    <div class=\"dt-action-bar\">\r\n\r\n      <!-- Action Menu -->\r\n      <ul class=\"dt-action-nav\">\r\n\r\n        <!-- Menu Item -->\r\n        <li class=\"dt-action-nav__item\" [ngClass]=\"{'active':activeMenu == 'notifications'}\">\r\n          <a href=\"javascript:void(0)\"\r\n             class=\"dt-action-nav__link\"\r\n             (click)=\"onSelectMenu($event, 'notifications')\">\r\n            <gx-icon name=\"notification2\" [fw]=\"true\"></gx-icon>\r\n          </a>\r\n        </li>\r\n        <!-- /menu item -->\r\n\r\n        <!-- Menu Item -->\r\n        <li class=\"dt-action-nav__item\" [ngClass]=\"{'active':activeMenu == 'search'}\">\r\n          <a href=\"javascript:void(0)\"\r\n             class=\"dt-action-nav__link\"\r\n             (click)=\"onSelectMenu($event, 'search')\">\r\n            <gx-icon name=\"search\" [fw]=\"true\"></gx-icon>\r\n          </a>\r\n        </li>\r\n        <!-- /menu item -->\r\n\r\n      </ul>\r\n      <!-- /action menu -->\r\n\r\n    </div>\r\n    <!-- /menu bar -->\r\n\r\n    <!-- Drawer Content Area -->\r\n    <div class=\"dt-action-content-wrapper\">\r\n\r\n      <gx-loader [ngClass]=\"{'active':showLoader}\"></gx-loader>\r\n      <div class=\"dt-action-content fade position-relative\" [ngClass]=\"{'show':!showLoader && activeMenu == 'search'}\" perfectScrollbar>\r\n        <todo-search></todo-search>\r\n      </div>\r\n      <div class=\"dt-action-content fade position-relative\" [ngClass]=\"{'show':!showLoader && activeMenu == 'notifications'}\" perfectScrollbar>\r\n        <todo-notifications></todo-notifications>\r\n      </div>\r\n\r\n    </div>\r\n    <!-- /drawer content area -->\r\n\r\n  </div>\r\n  <!-- /actionable drawer -->\r\n\r\n</div>\r\n<!-- /module drawer inner -->\r\n","import {Component, HostBinding, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {MailService} from './../mail.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {Mail} from './../models/mail.model';\r\nimport {PerfectScrollbarDirective} from 'ngx-perfect-scrollbar';\r\n\r\n@Component({\r\n  selector: 'app-mail-list',\r\n  templateUrl: './mail-list.component.html',\r\n  styleUrls: ['./mail-list.component.scss']\r\n})\r\nexport class MailListComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-module__content position-relative ps';\r\n\r\n  public mails: Mail[] = [];\r\n  public searchQuery = '';\r\n\r\n  onMailsChanged: Subscription;\r\n  onSearchQueryChanged: Subscription;\r\n\r\n  @ViewChild(PerfectScrollbarDirective) directiveRef?: PerfectScrollbarDirective;\r\n\r\n  constructor(private mailService: MailService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update mails on changes\r\n    this.onMailsChanged = this.mailService.onMailsChanged\r\n      .subscribe(mails => {\r\n        this.mails = mails;\r\n\r\n        setTimeout(() => {\r\n          this.scrollToBottom();\r\n        }, 300);\r\n      });\r\n\r\n    // Subscribe to update search keywords on changes\r\n    this.onSearchQueryChanged = this.mailService.onSearchQueryChanged\r\n      .subscribe(searchStr => {\r\n        this.searchQuery = searchStr;\r\n        if (searchStr) {\r\n          this.mailService.setCurrentMail(null);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * On click mail\r\n   * @param mailId\r\n   */\r\n  omMailClick(mailId) {\r\n    this.mailService.setCurrentMail(mailId);\r\n  }\r\n\r\n  scrollToBottom(): void {\r\n    if (this.directiveRef) {\r\n      this.directiveRef.update();\r\n      this.directiveRef.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onMailsChanged.unsubscribe();\r\n    this.onSearchQueryChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","<!-- Module Content Inner -->\r\n<div class=\"dt-module__content-inner\">\r\n\r\n  <mail-header></mail-header>\r\n\r\n  <!-- Module List -->\r\n  <div class=\"dt-module__list\">\r\n\r\n    <div *ngIf=\"mails.length == 0\" class=\"dt-module__list-item\">\r\n      <p class=\"empty-result\">No record found.</p>\r\n    </div>\r\n\r\n    <!-- Module Item -->\r\n    <mail-item *ngFor=\"let mail of mails | filter: searchQuery\"\r\n               [mail]=\"mail\"\r\n               (click)=\"omMailClick(mail.id)\"></mail-item>\r\n    <!-- /Module Item -->\r\n\r\n  </div>\r\n  <!-- /Module List -->\r\n\r\n</div>\r\n","export class Mail {\r\n  id: string;\r\n  from: {\r\n    name: string,\r\n    avatar: string,\r\n    email: string\r\n  };\r\n  to: {\r\n    name: string,\r\n    email: string\r\n  }[];\r\n  subject: string;\r\n  message: string;\r\n  time: string;\r\n  read: boolean;\r\n  starred: boolean;\r\n  important: boolean;\r\n  hasAttachments: boolean;\r\n  attachments: {\r\n    type: string,\r\n    fileName: string,\r\n    preview: string,\r\n    url: string,\r\n    size: string\r\n  }[];\r\n  labels: string[];\r\n  folder: string;\r\n  conversation: any[];\r\n}\r\n","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {AppService} from '@app/app.service';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'mail-module-header',\r\n  templateUrl: './module-header.component.html',\r\n  styleUrls: ['./module-header.component.scss']\r\n})\r\nexport class ModuleHeaderComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-module__header d-none d-md-flex';\r\n  notifications: any[] = [];\r\n  onNotificationsChanged: Subscription;\r\n\r\n  constructor(private appService: AppService) {\r\n    this.onNotificationsChanged = this.appService.onNotificationsChanged.subscribe((notifications: any[]) => {\r\n      this.notifications = notifications;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onNotificationsChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","<mail-search-bar></mail-search-bar>\r\n\r\n<!-- Dropdown -->\r\n<div class=\"ml-auto dt-notification\" ngbDropdown placement=\"bottom-right\">\r\n\r\n  <!-- Dropdown Button -->\r\n  <a href=\"javascript:void(0)\" class=\"no-arrow\" ngbDropdownToggle>\r\n    <gx-icon name=\"notification2\" [fw]=\"true\" size=\"1x\" class=\"dt-icon-alert\"></gx-icon>\r\n  </a>\r\n  <!-- /dropdown button -->\r\n\r\n  <!-- Dropdown Menu -->\r\n  <div ngbDropdownMenu class=\"dropdown-menu-media\">\r\n    <!-- Dropdown Menu Header -->\r\n    <div class=\"dropdown-menu-header\">\r\n      <h4 class=\"title\">Notifications (9)</h4>\r\n\r\n      <div class=\"ml-auto action-area\">\r\n        <a href=\"javascript:void(0)\">Mark All Read</a> <a class=\"ml-2\" href=\"javascript:void(0)\">\r\n          <gx-icon name=\"settings\" size=\"lg\" class=\"text-light-gray\"></gx-icon>\r\n        </a>\r\n      </div>\r\n    </div>\r\n    <!-- /dropdown menu header -->\r\n\r\n    <!-- Dropdown Menu Body -->\r\n    <div class=\"dropdown-menu-body position-relative\" perfectScrollbar>\r\n\r\n      <div class=\"h-auto\">\r\n        <!-- Media -->\r\n        <a href=\"javascript:void(0)\" class=\"media\" *ngFor=\"let notification of notifications\">\r\n\r\n          <!-- Avatar -->\r\n          <gx-avatar [user]=\"notification\" [charLength]=\"0\" class=\"mr-3\"></gx-avatar>\r\n          <!-- avatar -->\r\n\r\n          <!-- Media Body -->\r\n          <span class=\"media-body\">\r\n            <span class=\"message\" [innerHTML]=\"notification.message\"></span>\r\n            <span class=\"meta-date\">\r\n              <gx-icon *ngIf=\"notification.icon.name\"\r\n                       [name]=\"notification.icon.name\"\r\n                       [ngClass]=\"notification.icon.color\"\r\n                       [fw]=\"true\" class=\"mr-1\"></gx-icon>\r\n              {{notification.time}}\r\n            </span>\r\n          </span>\r\n          <!-- /media body -->\r\n\r\n        </a>\r\n        <!-- /media -->\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Dropdown Menu Footer -->\r\n    <div class=\"dropdown-menu-footer\">\r\n      <a href=\"javascript:void(0)\" class=\"card-link\"> See All\r\n        <gx-icon name=\"arrow-right\" [fw]=\"true\"></gx-icon></a>\r\n    </div>\r\n    <!-- /dropdown menu footer -->\r\n  </div>\r\n  <!-- /dropdown menu -->\r\n\r\n</div>\r\n<!-- /dropdown -->\r\n","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {AppService} from '@app/app.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'todo-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-notification';\r\n  messages: any[] = [];\r\n  searchText = '';\r\n  searchQuery: FormControl;\r\n  onMessagesChanged: Subscription;\r\n\r\n  constructor(private appService: AppService) {\r\n    this.searchQuery = new FormControl('');\r\n    this.onMessagesChanged = this.appService.onMessagesChanged.subscribe((messages: any[]) => {\r\n      this.messages = messages;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.searchQuery.valueChanges.pipe(\r\n      debounceTime(300),\r\n      distinctUntilChanged()\r\n    ).subscribe(searchText => {\r\n      this.searchText = searchText;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onMessagesChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","<!-- Search Box -->\r\n<form class=\"search-box right-side-icon mw-100 mb-8\">\r\n  <input type=\"search\"\r\n         class=\"form-control form-control-lg\"\r\n         [formControl]=\"searchQuery\"\r\n         placeholder=\"Search in mails...\">\r\n  <button type=\"submit\" class=\"search-icon\"><gx-icon name=\"search\" size=\"lg\"></gx-icon></button>\r\n</form>\r\n<!-- /search box -->\r\n\r\n<h4>Recently Viewed</h4>\r\n\r\n<!-- Search Result-->\r\n<div class=\"search-result\" *ngFor=\"let message of messages | filter: searchText\">\r\n  <a href=\"javascript:void(0)\" class=\"dt-avatar-wrapper\">\r\n    <!-- Avatar -->\r\n    <gx-avatar [user]=\"message\" [charLength]=\"0\" class=\"font-italic\"></gx-avatar>\r\n    <!-- /avatar -->\r\n\r\n    <!-- Avatar Info -->\r\n    <span class=\"dt-avatar-info\">\r\n      <span class=\"dt-avatar-name\">{{message.name}}</span>\r\n      <span class=\"f-12\" [innerHTML]=\"message.message\"></span>\r\n    </span>\r\n    <!-- /avatar info -->\r\n  </a>\r\n</div>\r\n<!-- /search result-->\r\n"]}